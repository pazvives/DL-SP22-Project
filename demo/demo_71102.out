Dataset is copied to /tmp
** Batch_Size:8
** LR:0.1
** Momentum:0.9
** Weight Decay:0.0001
** Backbone Used:checkpoints/checkpoint_0100.pth.tar
ngpus_per_node:4
=>args.gpu 0
Use GPU: 0 for training
=> creating model: FasterRCNN'
Loading backbone checkpoint at:checkpoints/checkpoint_0100.pth.tar
FasterRCNN(
  (transform): GeneralizedRCNNTransform(
      Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
      Resize(min_size=(800,), max_size=1333, mode='bilinear')
  )
  (backbone): BackboneWithFPN(
    (body): IntermediateLayerGetter(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer4): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (fpn): FeaturePyramidNetwork(
      (inner_blocks): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
        (3): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      )
      (layer_blocks): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (extra_blocks): LastLevelMaxPool()
    )
  )
  (rpn): RegionProposalNetwork(
    (anchor_generator): AnchorGenerator()
    (head): RPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (cls_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (bbox_pred): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): RoIHeads(
    (box_roi_pool): MultiScaleRoIAlign(featmap_names=['0'], output_size=(7, 7), sampling_ratio=2)
    (box_head): TwoMLPHead(
      (fc6): Linear(in_features=12544, out_features=1024, bias=True)
      (fc7): Linear(in_features=1024, out_features=1024, bias=True)
    )
    (box_predictor): FastRCNNPredictor(
      (cls_score): Linear(in_features=1024, out_features=101, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=404, bias=True)
    )
  )
)
=>args.gpu 3
Use GPU: 3 for training
=> creating model: FasterRCNN'
Loading backbone checkpoint at:checkpoints/checkpoint_0100.pth.tar
FasterRCNN(
  (transform): GeneralizedRCNNTransform(
      Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
      Resize(min_size=(800,), max_size=1333, mode='bilinear')
  )
  (backbone): BackboneWithFPN(
    (body): IntermediateLayerGetter(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer4): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (fpn): FeaturePyramidNetwork(
      (inner_blocks): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
        (3): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      )
      (layer_blocks): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (extra_blocks): LastLevelMaxPool()
    )
  )
  (rpn): RegionProposalNetwork(
    (anchor_generator): AnchorGenerator()
    (head): RPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (cls_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (bbox_pred): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): RoIHeads(
    (box_roi_pool): MultiScaleRoIAlign(featmap_names=['0'], output_size=(7, 7), sampling_ratio=2)
    (box_head): TwoMLPHead(
      (fc6): Linear(in_features=12544, out_features=1024, bias=True)
      (fc7): Linear(in_features=1024, out_features=1024, bias=True)
    )
    (box_predictor): FastRCNNPredictor(
      (cls_score): Linear(in_features=1024, out_features=101, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=404, bias=True)
    )
  )
)
=>args.gpu 1
Use GPU: 1 for training
=> creating model: FasterRCNN'
Loading backbone checkpoint at:checkpoints/checkpoint_0100.pth.tar
FasterRCNN(
  (transform): GeneralizedRCNNTransform(
      Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
      Resize(min_size=(800,), max_size=1333, mode='bilinear')
  )
  (backbone): BackboneWithFPN(
    (body): IntermediateLayerGetter(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer4): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (fpn): FeaturePyramidNetwork(
      (inner_blocks): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
        (3): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      )
      (layer_blocks): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (extra_blocks): LastLevelMaxPool()
    )
  )
  (rpn): RegionProposalNetwork(
    (anchor_generator): AnchorGenerator()
    (head): RPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (cls_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (bbox_pred): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): RoIHeads(
    (box_roi_pool): MultiScaleRoIAlign(featmap_names=['0'], output_size=(7, 7), sampling_ratio=2)
    (box_head): TwoMLPHead(
      (fc6): Linear(in_features=12544, out_features=1024, bias=True)
      (fc7): Linear(in_features=1024, out_features=1024, bias=True)
    )
    (box_predictor): FastRCNNPredictor(
      (cls_score): Linear(in_features=1024, out_features=101, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=404, bias=True)
    )
  )
)
=>args.gpu 2
Use GPU: 2 for training
=> creating model: FasterRCNN'
Loading backbone checkpoint at:checkpoints/checkpoint_0100.pth.tar
FasterRCNN(
  (transform): GeneralizedRCNNTransform(
      Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
      Resize(min_size=(800,), max_size=1333, mode='bilinear')
  )
  (backbone): BackboneWithFPN(
    (body): IntermediateLayerGetter(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer4): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (fpn): FeaturePyramidNetwork(
      (inner_blocks): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
        (3): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      )
      (layer_blocks): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (extra_blocks): LastLevelMaxPool()
    )
  )
  (rpn): RegionProposalNetwork(
    (anchor_generator): AnchorGenerator()
    (head): RPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (cls_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (bbox_pred): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (roi_heads): RoIHeads(
    (box_roi_pool): MultiScaleRoIAlign(featmap_names=['0'], output_size=(7, 7), sampling_ratio=2)
    (box_head): TwoMLPHead(
      (fc6): Linear(in_features=12544, out_features=1024, bias=True)
      (fc7): Linear(in_features=1024, out_features=1024, bias=True)
    )
    (box_predictor): FastRCNNPredictor(
      (cls_score): Linear(in_features=1024, out_features=101, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=404, bias=True)
    )
  )
)
[GPU:2] Images:[tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0471, 0.0510],
         [0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0275, 0.0275],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0118, 0.0118],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039]],

        [[0.0000, 0.0000, 0.0000,  ..., 0.0471, 0.0627, 0.0667],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0431, 0.0431],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0275, 0.0275],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039]],

        [[0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0588, 0.0706],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0471, 0.0549],
         [0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0314, 0.0392],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039]]],
       device='cuda:2'), tensor([[[0.6706, 0.6275, 0.5882,  ..., 0.4314, 0.4235, 0.4275],
         [0.7098, 0.6510, 0.5922,  ..., 0.4902, 0.4549, 0.4353],
         [0.6863, 0.6235, 0.5608,  ..., 0.5216, 0.5020, 0.4549],
         ...,
         [0.0667, 0.0667, 0.0745,  ..., 0.1451, 0.1333, 0.1255],
         [0.0667, 0.0706, 0.0784,  ..., 0.1255, 0.1255, 0.1294],
         [0.0706, 0.0706, 0.0824,  ..., 0.0902, 0.1176, 0.1412]],

        [[0.5882, 0.5529, 0.5098,  ..., 0.4902, 0.4824, 0.4784],
         [0.6314, 0.5686, 0.5059,  ..., 0.5765, 0.5412, 0.5176],
         [0.6431, 0.5608, 0.5059,  ..., 0.5882, 0.5765, 0.5294],
         ...,
         [0.0314, 0.0431, 0.0588,  ..., 0.1608, 0.1529, 0.1412],
         [0.0314, 0.0471, 0.0627,  ..., 0.1255, 0.1373, 0.1412],
         [0.0353, 0.0471, 0.0627,  ..., 0.0784, 0.1176, 0.1569]],

        [[0.3647, 0.3216, 0.3098,  ..., 0.5725, 0.5569, 0.5412],
         [0.4000, 0.3529, 0.3216,  ..., 0.5686, 0.5922, 0.6000],
         [0.3922, 0.3569, 0.3294,  ..., 0.5176, 0.5686, 0.5569],
         ...,
         [0.0353, 0.0431, 0.0627,  ..., 0.1647, 0.1647, 0.1882],
         [0.0431, 0.0549, 0.0667,  ..., 0.1647, 0.1647, 0.1765],
         [0.0471, 0.0471, 0.0510,  ..., 0.1608, 0.1569, 0.1529]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[119., 192., 238., 331.],
        [120.,  56., 332., 331.]], device='cuda:2'), 'labels': tensor([34,  3], device='cuda:2'), 'image_id': tensor([9729], device='cuda:2'), 'area': tensor([16541., 58300.], device='cuda:2'), 'iscrowd': tensor([0, 0], device='cuda:2')}, {'boxes': tensor([[195.,   2., 389., 306.]], device='cuda:2'), 'labels': tensor([62], device='cuda:2'), 'image_id': tensor([3577], device='cuda:2'), 'area': tensor([58976.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(4.6028, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0054, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.6936, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0036, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:5.3052592277526855
[GPU:2] Losses reduced:5.325780391693115
[GPU:2] Loss value:5.325780391693115
[GPU:2] Epoch: [0]  [   0/3750]  eta: 8:01:28  loss: 5.3258 (5.3258)  loss_box_reg: 0.0025 (0.0025)  loss_classifier: 4.6025 (4.6025)  loss_objectness: 0.6936 (0.6936)  loss_rpn_box_reg: 0.0272 (0.0272)  time: 7.7035  data: 2.1000  max mem: 4802
[GPU:2] Images:[tensor([[[0.2667, 0.2745, 0.2863,  ..., 0.6275, 0.5608, 0.6039],
         [0.2863, 0.2902, 0.2941,  ..., 0.6627, 0.5843, 0.6000],
         [0.2980, 0.3020, 0.2941,  ..., 0.6196, 0.5882, 0.6235],
         ...,
         [0.4667, 0.4627, 0.4824,  ..., 0.9020, 0.9098, 0.8824],
         [0.4706, 0.4745, 0.4980,  ..., 0.9216, 0.9412, 0.9176],
         [0.4902, 0.4824, 0.4941,  ..., 0.9255, 0.9451, 0.9216]],

        [[0.1725, 0.1765, 0.1882,  ..., 0.5333, 0.4667, 0.5020],
         [0.1882, 0.1922, 0.1961,  ..., 0.5686, 0.4902, 0.4980],
         [0.2000, 0.1922, 0.1843,  ..., 0.5255, 0.4941, 0.5216],
         ...,
         [0.3490, 0.3451, 0.3647,  ..., 0.7922, 0.8000, 0.7725],
         [0.3529, 0.3569, 0.3804,  ..., 0.8118, 0.8314, 0.8078],
         [0.3725, 0.3647, 0.3765,  ..., 0.8157, 0.8353, 0.8118]],

        [[0.1647, 0.1608, 0.1725,  ..., 0.5843, 0.5176, 0.5529],
         [0.1725, 0.1765, 0.1804,  ..., 0.6196, 0.5412, 0.5490],
         [0.1843, 0.1804, 0.1725,  ..., 0.5765, 0.5451, 0.5725],
         ...,
         [0.3804, 0.3765, 0.3961,  ..., 0.8392, 0.8549, 0.8275],
         [0.3843, 0.3882, 0.4118,  ..., 0.8588, 0.8863, 0.8627],
         [0.4039, 0.3961, 0.4078,  ..., 0.8627, 0.8902, 0.8667]]],
       device='cuda:2'), tensor([[[0.6078, 0.6039, 0.6078,  ..., 0.3020, 0.3020, 0.3020],
         [0.6078, 0.6039, 0.6039,  ..., 0.3137, 0.3137, 0.3098],
         [0.6118, 0.6118, 0.6078,  ..., 0.3294, 0.3294, 0.3216],
         ...,
         [0.7490, 0.7529, 0.7020,  ..., 0.7451, 0.6824, 0.6549],
         [0.7373, 0.7686, 0.7137,  ..., 0.7059, 0.6941, 0.6824],
         [0.7686, 0.7490, 0.7373,  ..., 0.7255, 0.7020, 0.6941]],

        [[0.6118, 0.6078, 0.6118,  ..., 0.2667, 0.2706, 0.2706],
         [0.6118, 0.6078, 0.6078,  ..., 0.2784, 0.2824, 0.2784],
         [0.6118, 0.6118, 0.6078,  ..., 0.2980, 0.2980, 0.2902],
         ...,
         [0.6863, 0.6902, 0.6431,  ..., 0.6510, 0.6000, 0.5725],
         [0.6745, 0.7059, 0.6627,  ..., 0.6157, 0.6196, 0.6078],
         [0.7098, 0.6902, 0.6784,  ..., 0.6471, 0.6471, 0.6392]],

        [[0.5804, 0.5765, 0.5804,  ..., 0.2314, 0.2196, 0.2196],
         [0.5804, 0.5765, 0.5765,  ..., 0.2431, 0.2314, 0.2275],
         [0.5804, 0.5804, 0.5765,  ..., 0.2549, 0.2471, 0.2392],
         ...,
         [0.5961, 0.5882, 0.5216,  ..., 0.5098, 0.4784, 0.4510],
         [0.5765, 0.6039, 0.5373,  ..., 0.4824, 0.5020, 0.4902],
         [0.6275, 0.5765, 0.5490,  ..., 0.5529, 0.5451, 0.5373]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[109., 144., 214., 205.]], device='cuda:2'), 'labels': tensor([4], device='cuda:2'), 'image_id': tensor([19111], device='cuda:2'), 'area': tensor([6405.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}, {'boxes': tensor([[ 49.,  65., 288., 338.]], device='cuda:2'), 'labels': tensor([13], device='cuda:2'), 'image_id': tensor([24112], device='cuda:2'), 'area': tensor([65247.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(4.0640, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0074, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.6800, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0020, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:4.753426551818848
[GPU:2] Losses reduced:4.789564609527588
[GPU:2] Loss value:4.789564609527588
[GPU:2] Images:[tensor([[[0.4510, 0.1765, 0.4902,  ..., 0.0863, 0.0941, 0.0902],
         [0.5843, 0.5412, 0.5529,  ..., 0.0824, 0.0745, 0.0706],
         [0.5882, 0.6824, 0.4980,  ..., 0.1255, 0.0902, 0.0941],
         ...,
         [0.6863, 0.6863, 0.6902,  ..., 0.5608, 0.5059, 0.5843],
         [0.6667, 0.6392, 0.6549,  ..., 0.6314, 0.6314, 0.5804],
         [0.4706, 0.4196, 0.5059,  ..., 0.7255, 0.7922, 0.5922]],

        [[0.4784, 0.2980, 0.5765,  ..., 0.1020, 0.1059, 0.0941],
         [0.6431, 0.6039, 0.5294,  ..., 0.1216, 0.1137, 0.1098],
         [0.6431, 0.7451, 0.4863,  ..., 0.1137, 0.0980, 0.0980],
         ...,
         [0.6510, 0.6471, 0.6353,  ..., 0.5333, 0.5020, 0.6157],
         [0.5647, 0.5529, 0.5882,  ..., 0.5843, 0.6078, 0.5882],
         [0.4588, 0.4196, 0.4980,  ..., 0.6549, 0.7490, 0.5882]],

        [[0.1137, 0.0314, 0.3333,  ..., 0.0471, 0.0627, 0.0627],
         [0.2706, 0.2549, 0.3255,  ..., 0.0784, 0.0784, 0.0784],
         [0.3098, 0.3569, 0.2078,  ..., 0.0784, 0.0549, 0.0667],
         ...,
         [0.5294, 0.5059, 0.4824,  ..., 0.4706, 0.4314, 0.5255],
         [0.4980, 0.4627, 0.4784,  ..., 0.4980, 0.5137, 0.4941],
         [0.3843, 0.3255, 0.4000,  ..., 0.5686, 0.6706, 0.5059]]],
       device='cuda:2'), tensor([[[0.4588, 0.4549, 0.4784,  ..., 0.2353, 0.2196, 0.1961],
         [0.4902, 0.4588, 0.4510,  ..., 0.2353, 0.2118, 0.1843],
         [0.6706, 0.6510, 0.5216,  ..., 0.2196, 0.1922, 0.1686],
         ...,
         [0.2902, 0.2353, 0.2549,  ..., 0.6118, 0.6078, 0.5922],
         [0.2627, 0.3098, 0.2000,  ..., 0.6039, 0.6078, 0.6039],
         [0.3020, 0.2745, 0.2706,  ..., 0.6039, 0.6078, 0.6039]],

        [[0.4627, 0.4510, 0.4784,  ..., 0.2549, 0.2275, 0.2039],
         [0.5373, 0.5059, 0.4980,  ..., 0.2549, 0.2314, 0.2039],
         [0.6941, 0.6745, 0.5608,  ..., 0.2392, 0.2118, 0.1882],
         ...,
         [0.3725, 0.2706, 0.2980,  ..., 0.2118, 0.2078, 0.1922],
         [0.3412, 0.3882, 0.2196,  ..., 0.2039, 0.2078, 0.2039],
         [0.3608, 0.3961, 0.2745,  ..., 0.2039, 0.2078, 0.2039]],

        [[0.4824, 0.4706, 0.4863,  ..., 0.2392, 0.2157, 0.1843],
         [0.4824, 0.4510, 0.4431,  ..., 0.2392, 0.2078, 0.1804],
         [0.6863, 0.6588, 0.5294,  ..., 0.2157, 0.1882, 0.1647],
         ...,
         [0.3451, 0.2510, 0.2745,  ..., 0.1529, 0.1529, 0.1451],
         [0.3059, 0.3529, 0.1961,  ..., 0.1451, 0.1529, 0.1569],
         [0.3333, 0.3373, 0.2549,  ..., 0.1490, 0.1608, 0.1569]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[  0.,  70., 212., 358.],
        [231., 290., 333., 391.],
        [283., 218., 418., 486.],
        [175., 188., 375., 420.]], device='cuda:2'), 'labels': tensor([57, 57, 57, 57], device='cuda:2'), 'image_id': tensor([17516], device='cuda:2'), 'area': tensor([61056., 10302., 36180., 46400.], device='cuda:2'), 'iscrowd': tensor([0, 0, 0, 0], device='cuda:2')}, {'boxes': tensor([[  0.,  75., 298., 498.]], device='cuda:2'), 'labels': tensor([1], device='cuda:2'), 'image_id': tensor([3463], device='cuda:2'), 'area': tensor([126054.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(0.7787, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0700, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.6521, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0804, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:1.5811506509780884
[GPU:2] Losses reduced:1.4989787340164185
[GPU:2] Loss value:1.4989787340164185
[GPU:2] Images:[tensor([[[0.3569, 0.3765, 0.4196,  ..., 0.0314, 0.0510, 0.0392],
         [0.3098, 0.2784, 0.3216,  ..., 0.0471, 0.0471, 0.0392],
         [0.3686, 0.3843, 0.3686,  ..., 0.0353, 0.0392, 0.0431],
         ...,
         [0.8510, 0.8588, 0.9020,  ..., 0.7804, 0.7137, 0.7490],
         [0.9059, 0.9020, 0.8235,  ..., 0.7725, 0.7490, 0.7725],
         [0.8314, 0.7961, 0.8392,  ..., 0.7255, 0.7333, 0.7608]],

        [[0.4353, 0.4471, 0.4588,  ..., 0.0157, 0.0314, 0.0196],
         [0.4549, 0.4039, 0.4196,  ..., 0.0431, 0.0314, 0.0235],
         [0.3765, 0.3882, 0.3686,  ..., 0.0353, 0.0314, 0.0275],
         ...,
         [0.6431, 0.6549, 0.6941,  ..., 0.6078, 0.4980, 0.4980],
         [0.6745, 0.6667, 0.5882,  ..., 0.6627, 0.5882, 0.5412],
         [0.6510, 0.6078, 0.6392,  ..., 0.6196, 0.5922, 0.5686]],

        [[0.4000, 0.3608, 0.3608,  ..., 0.0039, 0.0157, 0.0039],
         [0.4275, 0.3451, 0.3451,  ..., 0.0353, 0.0275, 0.0118],
         [0.3647, 0.3569, 0.3216,  ..., 0.0353, 0.0353, 0.0314],
         ...,
         [0.4863, 0.5020, 0.5608,  ..., 0.5569, 0.4706, 0.4902],
         [0.5098, 0.5216, 0.4471,  ..., 0.6157, 0.5725, 0.5647],
         [0.4549, 0.4196, 0.4549,  ..., 0.5373, 0.5294, 0.5412]]],
       device='cuda:2'), tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.1686, 0.1569, 0.1569],
         [0.0039, 0.0039, 0.0039,  ..., 0.1725, 0.1608, 0.1608],
         [0.0000, 0.0039, 0.0000,  ..., 0.1725, 0.1608, 0.1608],
         ...,
         [0.0196, 0.0196, 0.0157,  ..., 0.2157, 0.2157, 0.2196],
         [0.0235, 0.0196, 0.0196,  ..., 0.2157, 0.2118, 0.2118],
         [0.0235, 0.0235, 0.0196,  ..., 0.2118, 0.2078, 0.2078]],

        [[0.0157, 0.0118, 0.0118,  ..., 0.0667, 0.0549, 0.0549],
         [0.0196, 0.0196, 0.0196,  ..., 0.0706, 0.0588, 0.0588],
         [0.0157, 0.0196, 0.0157,  ..., 0.0667, 0.0510, 0.0510],
         ...,
         [0.0431, 0.0431, 0.0392,  ..., 0.0784, 0.0784, 0.0824],
         [0.0471, 0.0431, 0.0431,  ..., 0.0706, 0.0745, 0.0745],
         [0.0471, 0.0471, 0.0431,  ..., 0.0667, 0.0706, 0.0706]],

        [[0.0196, 0.0157, 0.0157,  ..., 0.0078, 0.0000, 0.0039],
         [0.0235, 0.0235, 0.0235,  ..., 0.0118, 0.0000, 0.0078],
         [0.0196, 0.0235, 0.0196,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0431, 0.0431, 0.0392,  ..., 0.0039, 0.0000, 0.0039],
         [0.0471, 0.0431, 0.0431,  ..., 0.0000, 0.0000, 0.0000],
         [0.0471, 0.0471, 0.0431,  ..., 0.0000, 0.0000, 0.0000]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[111.,   1., 500., 341.]], device='cuda:2'), 'labels': tensor([4], device='cuda:2'), 'image_id': tensor([15623], device='cuda:2'), 'area': tensor([132260.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}, {'boxes': tensor([[168.,  19., 470., 230.]], device='cuda:2'), 'labels': tensor([52], device='cuda:2'), 'image_id': tensor([12091], device='cuda:2'), 'area': tensor([63722.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(1.2589, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0480, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.5066, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0291, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:1.8426474332809448
[GPU:2] Losses reduced:2.3331806659698486
[GPU:2] Loss value:2.3331806659698486
[GPU:2] Images:[tensor([[[0.5137, 0.5137, 0.5137,  ..., 0.0000, 0.0000, 0.0000],
         [0.5333, 0.5333, 0.5333,  ..., 0.0000, 0.0000, 0.0000],
         [0.5529, 0.5529, 0.5529,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.7216, 0.6627, 0.6196,  ..., 0.9922, 0.9922, 0.9922],
         [0.6824, 0.6784, 0.6863,  ..., 0.9725, 0.9686, 0.9647],
         [0.6824, 0.6784, 0.6863,  ..., 0.9725, 0.9686, 0.9647]],

        [[0.4000, 0.4000, 0.4000,  ..., 0.0000, 0.0000, 0.0000],
         [0.4196, 0.4196, 0.4196,  ..., 0.0000, 0.0000, 0.0000],
         [0.4392, 0.4392, 0.4392,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.7216, 0.6627, 0.6196,  ..., 0.9922, 0.9922, 0.9922],
         [0.6863, 0.6824, 0.6902,  ..., 0.9725, 0.9686, 0.9647],
         [0.6863, 0.6824, 0.6902,  ..., 0.9725, 0.9686, 0.9647]],

        [[0.4157, 0.4157, 0.4157,  ..., 0.0000, 0.0000, 0.0000],
         [0.4353, 0.4353, 0.4353,  ..., 0.0000, 0.0000, 0.0000],
         [0.4549, 0.4549, 0.4549,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.7216, 0.6627, 0.6196,  ..., 0.9922, 0.9922, 0.9922],
         [0.6627, 0.6588, 0.6667,  ..., 0.9725, 0.9686, 0.9647],
         [0.6627, 0.6588, 0.6667,  ..., 0.9725, 0.9686, 0.9647]]],
       device='cuda:2'), tensor([[[0.0510, 0.0824, 0.1098,  ..., 0.0471, 0.0627, 0.0784],
         [0.0784, 0.0824, 0.0549,  ..., 0.0667, 0.0784, 0.0784],
         [0.0824, 0.0824, 0.0314,  ..., 0.0745, 0.0902, 0.0902],
         ...,
         [0.2745, 0.2471, 0.1725,  ..., 0.3961, 0.2863, 0.3176],
         [0.1608, 0.1725, 0.1765,  ..., 0.4235, 0.3725, 0.2941],
         [0.1843, 0.1922, 0.1765,  ..., 0.3216, 0.3725, 0.4314]],

        [[0.0510, 0.0824, 0.1098,  ..., 0.0510, 0.0667, 0.0824],
         [0.0784, 0.0824, 0.0549,  ..., 0.0706, 0.0824, 0.0824],
         [0.0824, 0.0824, 0.0314,  ..., 0.0784, 0.0941, 0.0941],
         ...,
         [0.2863, 0.2627, 0.1882,  ..., 0.3686, 0.2627, 0.2941],
         [0.1765, 0.1882, 0.1922,  ..., 0.4078, 0.3451, 0.2667],
         [0.2000, 0.2118, 0.1961,  ..., 0.3059, 0.3569, 0.4157]],

        [[0.0431, 0.0745, 0.1020,  ..., 0.0314, 0.0471, 0.0627],
         [0.0706, 0.0745, 0.0471,  ..., 0.0510, 0.0627, 0.0627],
         [0.0745, 0.0745, 0.0235,  ..., 0.0588, 0.0745, 0.0745],
         ...,
         [0.2431, 0.2078, 0.1333,  ..., 0.3294, 0.2157, 0.2471],
         [0.1176, 0.1294, 0.1255,  ..., 0.3647, 0.3059, 0.2275],
         [0.1333, 0.1333, 0.1098,  ..., 0.2627, 0.3137, 0.3725]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[  9.,   3., 359., 213.]], device='cuda:2'), 'labels': tensor([4], device='cuda:2'), 'image_id': tensor([22487], device='cuda:2'), 'area': tensor([73500.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}, {'boxes': tensor([[ 46.,  26., 104.,  70.]], device='cuda:2'), 'labels': tensor([32], device='cuda:2'), 'image_id': tensor([22843], device='cuda:2'), 'area': tensor([2552.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(1.9197, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0479, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.2204, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0418, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:2.229741334915161
[GPU:2] Losses reduced:7.243494510650635
[GPU:2] Loss value:7.243494510650635
[GPU:2] Images:[tensor([[[0.6431, 0.6471, 0.6510,  ..., 0.7490, 0.7529, 0.7569],
         [0.6627, 0.6745, 0.6784,  ..., 0.7529, 0.7569, 0.7608],
         [0.6863, 0.6902, 0.6980,  ..., 0.7529, 0.7569, 0.7569],
         ...,
         [0.4118, 0.4235, 0.4118,  ..., 0.3490, 0.3608, 0.3725],
         [0.4549, 0.4667, 0.4549,  ..., 0.4941, 0.4471, 0.4118],
         [0.4745, 0.4941, 0.4824,  ..., 0.4039, 0.4431, 0.4431]],

        [[0.6667, 0.6706, 0.6745,  ..., 0.7608, 0.7647, 0.7686],
         [0.6863, 0.6902, 0.6941,  ..., 0.7647, 0.7686, 0.7725],
         [0.7020, 0.6980, 0.7059,  ..., 0.7647, 0.7686, 0.7686],
         ...,
         [0.4745, 0.4863, 0.4745,  ..., 0.3843, 0.3961, 0.4078],
         [0.5059, 0.5176, 0.5059,  ..., 0.5294, 0.4824, 0.4471],
         [0.5255, 0.5412, 0.5294,  ..., 0.4510, 0.4902, 0.4902]],

        [[0.7137, 0.7176, 0.7216,  ..., 0.7961, 0.8000, 0.8039],
         [0.7333, 0.7373, 0.7412,  ..., 0.8000, 0.8039, 0.8078],
         [0.7490, 0.7490, 0.7569,  ..., 0.8000, 0.8039, 0.8039],
         ...,
         [0.5373, 0.5490, 0.5373,  ..., 0.4431, 0.4549, 0.4667],
         [0.5725, 0.5843, 0.5725,  ..., 0.5961, 0.5412, 0.5059],
         [0.5882, 0.6039, 0.5922,  ..., 0.5137, 0.5529, 0.5529]]],
       device='cuda:2'), tensor([[[0.1216, 0.1412, 0.1686,  ..., 0.3333, 0.3451, 0.3569],
         [0.1137, 0.1294, 0.1490,  ..., 0.3451, 0.3451, 0.3412],
         [0.1098, 0.1176, 0.1255,  ..., 0.3608, 0.3608, 0.3686],
         ...,
         [0.2039, 0.2039, 0.2118,  ..., 0.2980, 0.2941, 0.3020],
         [0.2353, 0.2314, 0.2392,  ..., 0.2941, 0.2980, 0.3137],
         [0.2588, 0.2510, 0.2549,  ..., 0.3098, 0.3176, 0.3412]],

        [[0.3294, 0.3490, 0.3686,  ..., 0.4941, 0.5137, 0.5255],
         [0.3098, 0.3255, 0.3490,  ..., 0.4902, 0.5020, 0.5020],
         [0.3059, 0.3176, 0.3255,  ..., 0.4902, 0.5020, 0.5098],
         ...,
         [0.2549, 0.2549, 0.2627,  ..., 0.3490, 0.3451, 0.3529],
         [0.2863, 0.2824, 0.2902,  ..., 0.3451, 0.3490, 0.3647],
         [0.3098, 0.3020, 0.3059,  ..., 0.3608, 0.3686, 0.3922]],

        [[0.1255, 0.1373, 0.1451,  ..., 0.2196, 0.2353, 0.2471],
         [0.1020, 0.1176, 0.1255,  ..., 0.2196, 0.2275, 0.2275],
         [0.0980, 0.0980, 0.1020,  ..., 0.2196, 0.2275, 0.2353],
         ...,
         [0.2863, 0.2863, 0.2941,  ..., 0.3725, 0.3686, 0.3765],
         [0.3176, 0.3137, 0.3216,  ..., 0.3686, 0.3725, 0.3882],
         [0.3412, 0.3333, 0.3373,  ..., 0.3843, 0.3922, 0.4157]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[  1.,  64., 379., 270.]], device='cuda:2'), 'labels': tensor([1], device='cuda:2'), 'image_id': tensor([11962], device='cuda:2'), 'area': tensor([77868.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}, {'boxes': tensor([[ 17., 139., 510., 307.]], device='cuda:2'), 'labels': tensor([11], device='cuda:2'), 'image_id': tensor([15465], device='cuda:2'), 'area': tensor([82824.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(2.4719, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.1076, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.1725, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0082, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:2.7601728439331055
[GPU:2] Losses reduced:2.0587098598480225
[GPU:2] Loss value:2.0587098598480225
[GPU:2] Images:[tensor([[[0.3333, 0.2510, 0.3490,  ..., 0.3686, 0.3176, 0.2549],
         [0.4745, 0.3961, 0.3804,  ..., 0.3569, 0.3569, 0.2706],
         [0.3765, 0.3922, 0.4078,  ..., 0.2980, 0.2824, 0.2275],
         ...,
         [0.4118, 0.4745, 0.5333,  ..., 0.6588, 0.4157, 0.4941],
         [0.4431, 0.4392, 0.4627,  ..., 0.6471, 0.3490, 0.5255],
         [0.4431, 0.4118, 0.3804,  ..., 0.6784, 0.5882, 0.4863]],

        [[0.5373, 0.4902, 0.5020,  ..., 0.5412, 0.4745, 0.4039],
         [0.6235, 0.6196, 0.5725,  ..., 0.5608, 0.5373, 0.4392],
         [0.5176, 0.5882, 0.5922,  ..., 0.5020, 0.4745, 0.4118],
         ...,
         [0.5216, 0.5765, 0.6510,  ..., 0.7686, 0.5529, 0.6353],
         [0.5843, 0.5647, 0.6078,  ..., 0.7373, 0.4549, 0.6353],
         [0.5882, 0.5608, 0.5373,  ..., 0.7922, 0.6549, 0.5647]],

        [[0.2941, 0.2588, 0.2471,  ..., 0.3333, 0.2784, 0.2196],
         [0.5412, 0.3490, 0.2118,  ..., 0.2706, 0.2863, 0.2706],
         [0.3373, 0.2549, 0.2157,  ..., 0.2196, 0.2196, 0.2392],
         ...,
         [0.3216, 0.4235, 0.5098,  ..., 0.6196, 0.2314, 0.3843],
         [0.3020, 0.3020, 0.4078,  ..., 0.5647, 0.1765, 0.4353],
         [0.3176, 0.2588, 0.2902,  ..., 0.6196, 0.4824, 0.2863]]],
       device='cuda:2'), tensor([[[0.2627, 0.2706, 0.2784,  ..., 0.5020, 0.5020, 0.4980],
         [0.2667, 0.2745, 0.2863,  ..., 0.5137, 0.5098, 0.5059],
         [0.2510, 0.2510, 0.2588,  ..., 0.5216, 0.5176, 0.5176],
         ...,
         [0.1176, 0.1216, 0.1294,  ..., 0.3176, 0.1216, 0.2549],
         [0.1098, 0.1137, 0.1176,  ..., 0.3255, 0.0980, 0.1216],
         [0.1098, 0.1137, 0.1176,  ..., 0.3059, 0.1137, 0.0314]],

        [[0.2706, 0.2784, 0.2863,  ..., 0.5059, 0.5059, 0.5020],
         [0.2745, 0.2824, 0.2941,  ..., 0.5176, 0.5137, 0.5098],
         [0.2588, 0.2588, 0.2667,  ..., 0.5255, 0.5216, 0.5216],
         ...,
         [0.1490, 0.1529, 0.1608,  ..., 0.3137, 0.1333, 0.2667],
         [0.1412, 0.1451, 0.1490,  ..., 0.3294, 0.1137, 0.1373],
         [0.1294, 0.1333, 0.1373,  ..., 0.3176, 0.1373, 0.0549]],

        [[0.2667, 0.2745, 0.2824,  ..., 0.5255, 0.5255, 0.5216],
         [0.2706, 0.2784, 0.2902,  ..., 0.5373, 0.5333, 0.5294],
         [0.2549, 0.2549, 0.2627,  ..., 0.5451, 0.5412, 0.5412],
         ...,
         [0.1608, 0.1647, 0.1725,  ..., 0.0902, 0.0000, 0.1529],
         [0.1529, 0.1569, 0.1608,  ..., 0.1059, 0.0000, 0.0706],
         [0.1412, 0.1451, 0.1490,  ..., 0.1020, 0.0039, 0.0157]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[145.,  90., 298., 279.]], device='cuda:2'), 'labels': tensor([4], device='cuda:2'), 'image_id': tensor([18240], device='cuda:2'), 'area': tensor([28917.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}, {'boxes': tensor([[ 46.,  40., 381., 373.]], device='cuda:2'), 'labels': tensor([10], device='cuda:2'), 'image_id': tensor([28463], device='cuda:2'), 'area': tensor([111555.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(0.7884, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0944, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.3407, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0102, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:1.2336907386779785
[GPU:2] Losses reduced:1.471348524093628
[GPU:2] Loss value:1.471348524093628
[GPU:2] Images:[tensor([[[0.3451, 0.3725, 0.3569,  ..., 0.4039, 0.4078, 0.4157],
         [0.4078, 0.4157, 0.4118,  ..., 0.3843, 0.3882, 0.3882],
         [0.3843, 0.4000, 0.3804,  ..., 0.3686, 0.3686, 0.3765],
         ...,
         [0.0039, 0.0000, 0.0078,  ..., 0.0196, 0.0157, 0.0078],
         [0.0078, 0.0000, 0.0078,  ..., 0.0157, 0.0157, 0.0118],
         [0.0078, 0.0000, 0.0078,  ..., 0.0118, 0.0157, 0.0157]],

        [[0.3961, 0.4235, 0.4078,  ..., 0.3843, 0.3804, 0.3804],
         [0.4588, 0.4667, 0.4627,  ..., 0.4000, 0.3922, 0.3843],
         [0.4353, 0.4510, 0.4314,  ..., 0.4078, 0.4078, 0.4078],
         ...,
         [0.0039, 0.0000, 0.0078,  ..., 0.0235, 0.0196, 0.0118],
         [0.0078, 0.0000, 0.0078,  ..., 0.0196, 0.0196, 0.0157],
         [0.0078, 0.0000, 0.0078,  ..., 0.0157, 0.0196, 0.0196]],

        [[0.1137, 0.1412, 0.1333,  ..., 0.1647, 0.1647, 0.1647],
         [0.1882, 0.1961, 0.1922,  ..., 0.1686, 0.1647, 0.1608],
         [0.1608, 0.1765, 0.1569,  ..., 0.1686, 0.1686, 0.1725],
         ...,
         [0.0118, 0.0000, 0.0078,  ..., 0.0314, 0.0275, 0.0196],
         [0.0157, 0.0000, 0.0078,  ..., 0.0353, 0.0353, 0.0314],
         [0.0157, 0.0000, 0.0078,  ..., 0.0314, 0.0353, 0.0353]]],
       device='cuda:2'), tensor([[[0.3608, 0.3333, 0.4549,  ..., 0.4314, 0.4627, 0.4549],
         [0.2941, 0.3451, 0.4902,  ..., 0.3922, 0.3451, 0.3686],
         [0.2706, 0.3490, 0.4196,  ..., 0.4000, 0.3608, 0.3176],
         ...,
         [0.5333, 0.4706, 0.5373,  ..., 0.5137, 0.5569, 0.5922],
         [0.5255, 0.4314, 0.5412,  ..., 0.5490, 0.5882, 0.6196],
         [0.5882, 0.4784, 0.6157,  ..., 0.5412, 0.5725, 0.6157]],

        [[0.4235, 0.4157, 0.5529,  ..., 0.4706, 0.5020, 0.5098],
         [0.3529, 0.4078, 0.5686,  ..., 0.4431, 0.3647, 0.4196],
         [0.3490, 0.4196, 0.5020,  ..., 0.4510, 0.3686, 0.3529],
         ...,
         [0.5255, 0.5176, 0.4941,  ..., 0.4784, 0.5020, 0.5059],
         [0.5451, 0.5020, 0.5176,  ..., 0.5137, 0.5333, 0.5255],
         [0.5569, 0.5020, 0.5412,  ..., 0.5059, 0.5176, 0.5176]],

        [[0.1765, 0.1451, 0.2980,  ..., 0.2353, 0.2941, 0.2706],
         [0.0902, 0.1608, 0.3373,  ..., 0.2314, 0.1373, 0.2000],
         [0.0667, 0.1765, 0.2784,  ..., 0.2431, 0.1725, 0.1373],
         ...,
         [0.2235, 0.2275, 0.2510,  ..., 0.2235, 0.2157, 0.2078],
         [0.2314, 0.2118, 0.2745,  ..., 0.2510, 0.2392, 0.2510],
         [0.2627, 0.2275, 0.3137,  ..., 0.2353, 0.2235, 0.2588]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[  5., 104., 388., 218.]], device='cuda:2'), 'labels': tensor([11], device='cuda:2'), 'image_id': tensor([9374], device='cuda:2'), 'area': tensor([43662.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}, {'boxes': tensor([[161., 165., 376., 265.],
        [112.,  54., 183., 271.],
        [ 80.,  57., 151., 270.]], device='cuda:2'), 'labels': tensor([4, 3, 3], device='cuda:2'), 'image_id': tensor([4951], device='cuda:2'), 'area': tensor([21500., 15407., 15123.], device='cuda:2'), 'iscrowd': tensor([0, 0, 0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(0.2625, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.1765, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.1350, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0252, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:0.5993064641952515
[GPU:2] Losses reduced:0.567929208278656
[GPU:2] Loss value:0.567929208278656
[GPU:2] Images:[tensor([[[0.0235, 0.0000, 0.0039,  ..., 0.2941, 0.2941, 0.2902],
         [0.0000, 0.0039, 0.0196,  ..., 0.3333, 0.3176, 0.3020],
         [0.0196, 0.0118, 0.0431,  ..., 0.3882, 0.3725, 0.3608],
         ...,
         [0.0196, 0.0078, 0.0235,  ..., 0.0353, 0.0392, 0.0902],
         [0.1961, 0.1647, 0.1333,  ..., 0.0392, 0.0392, 0.0824],
         [0.2471, 0.2078, 0.1294,  ..., 0.0392, 0.0196, 0.0510]],

        [[0.0471, 0.0235, 0.0275,  ..., 0.2941, 0.3020, 0.3020],
         [0.0275, 0.0353, 0.0431,  ..., 0.3333, 0.3255, 0.3098],
         [0.0392, 0.0314, 0.0549,  ..., 0.3882, 0.3804, 0.3686],
         ...,
         [0.0314, 0.0588, 0.0627,  ..., 0.0431, 0.0510, 0.1098],
         [0.2431, 0.2431, 0.1882,  ..., 0.0510, 0.0431, 0.0980],
         [0.3294, 0.2941, 0.1922,  ..., 0.0510, 0.0275, 0.0824]],

        [[0.0392, 0.0078, 0.0118,  ..., 0.2549, 0.2588, 0.2588],
         [0.0000, 0.0000, 0.0039,  ..., 0.2941, 0.2824, 0.2588],
         [0.0157, 0.0078, 0.0275,  ..., 0.3490, 0.3373, 0.3176],
         ...,
         [0.0000, 0.0196, 0.0314,  ..., 0.0235, 0.0078, 0.0314],
         [0.1020, 0.1059, 0.0863,  ..., 0.0235, 0.0118, 0.0392],
         [0.1608, 0.1412, 0.0784,  ..., 0.0157, 0.0000, 0.0235]]],
       device='cuda:2'), tensor([[[0.3804, 0.3882, 0.3922,  ..., 0.6314, 0.6392, 0.6471],
         [0.3686, 0.3569, 0.3490,  ..., 0.6314, 0.6353, 0.6314],
         [0.3608, 0.3569, 0.3569,  ..., 0.6078, 0.6157, 0.6157],
         ...,
         [0.8078, 0.8078, 0.8118,  ..., 0.4000, 0.6863, 0.7725],
         [0.8078, 0.7922, 0.8275,  ..., 0.7490, 0.7569, 0.6235],
         [0.8235, 0.8157, 0.8392,  ..., 0.7490, 0.8549, 0.8510]],

        [[0.3804, 0.3882, 0.3922,  ..., 0.6314, 0.6392, 0.6471],
         [0.3686, 0.3569, 0.3490,  ..., 0.6314, 0.6353, 0.6314],
         [0.3608, 0.3569, 0.3569,  ..., 0.6078, 0.6157, 0.6157],
         ...,
         [0.8078, 0.8078, 0.8118,  ..., 0.4000, 0.6863, 0.7725],
         [0.8078, 0.7922, 0.8275,  ..., 0.7490, 0.7569, 0.6235],
         [0.8235, 0.8157, 0.8392,  ..., 0.7490, 0.8549, 0.8510]],

        [[0.3804, 0.3882, 0.3922,  ..., 0.6314, 0.6392, 0.6471],
         [0.3686, 0.3569, 0.3490,  ..., 0.6314, 0.6353, 0.6314],
         [0.3608, 0.3569, 0.3569,  ..., 0.6078, 0.6157, 0.6157],
         ...,
         [0.8078, 0.8078, 0.8118,  ..., 0.4000, 0.6863, 0.7725],
         [0.8078, 0.7922, 0.8275,  ..., 0.7490, 0.7569, 0.6235],
         [0.8235, 0.8157, 0.8392,  ..., 0.7490, 0.8549, 0.8510]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[  1.,  63., 365., 279.]], device='cuda:2'), 'labels': tensor([57], device='cuda:2'), 'image_id': tensor([18178], device='cuda:2'), 'area': tensor([78624.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}, {'boxes': tensor([[  0.,   0., 499., 333.]], device='cuda:2'), 'labels': tensor([46], device='cuda:2'), 'image_id': tensor([28447], device='cuda:2'), 'area': tensor([166167.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(4.6052, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.2087, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.1273, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.1254, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:5.06654167175293
[GPU:2] Losses reduced:4.887511730194092
[GPU:2] Loss value:4.887511730194092
[GPU:2] Images:[tensor([[[0.0471, 0.0118, 0.0510,  ..., 0.9490, 0.8706, 0.4353],
         [0.0118, 0.0471, 0.0235,  ..., 0.4314, 0.2039, 0.0627],
         [0.0235, 0.0275, 0.0314,  ..., 0.2196, 0.1255, 0.0471],
         ...,
         [0.1569, 0.1608, 0.1725,  ..., 0.0784, 0.0863, 0.0627],
         [0.1490, 0.1137, 0.1490,  ..., 0.0431, 0.0980, 0.1216],
         [0.0784, 0.0863, 0.1451,  ..., 0.0745, 0.1137, 0.1020]],

        [[0.0275, 0.0549, 0.0588,  ..., 0.9843, 0.8902, 0.4549],
         [0.0196, 0.0314, 0.0392,  ..., 0.4745, 0.2431, 0.1059],
         [0.0314, 0.0314, 0.0000,  ..., 0.2353, 0.1412, 0.0706],
         ...,
         [0.2706, 0.2863, 0.2588,  ..., 0.1804, 0.1882, 0.1647],
         [0.2196, 0.2157, 0.2431,  ..., 0.1412, 0.1922, 0.2039],
         [0.1647, 0.1922, 0.2549,  ..., 0.1725, 0.2000, 0.1804]],

        [[0.0431, 0.0000, 0.0549,  ..., 0.9647, 0.9137, 0.4784],
         [0.0157, 0.0196, 0.0431,  ..., 0.4196, 0.2078, 0.0510],
         [0.0118, 0.0078, 0.0000,  ..., 0.2706, 0.1765, 0.0627],
         ...,
         [0.0824, 0.0941, 0.0784,  ..., 0.0431, 0.0510, 0.0275],
         [0.0549, 0.0275, 0.0471,  ..., 0.0235, 0.0667, 0.0824],
         [0.0157, 0.0157, 0.0627,  ..., 0.0196, 0.0510, 0.0353]]],
       device='cuda:2'), tensor([[[0.0000, 0.0078, 0.0118,  ..., 0.0078, 0.0078, 0.0039],
         [0.0118, 0.0235, 0.0353,  ..., 0.0314, 0.0235, 0.0039],
         [0.0078, 0.0275, 0.0510,  ..., 0.0510, 0.0314, 0.0039],
         ...,
         [0.0078, 0.0235, 0.0471,  ..., 0.0431, 0.0235, 0.0039],
         [0.0078, 0.0157, 0.0235,  ..., 0.0314, 0.0275, 0.0118],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0039, 0.0000]],

        [[0.0000, 0.0078, 0.0078,  ..., 0.0118, 0.0078, 0.0039],
         [0.0118, 0.0235, 0.0314,  ..., 0.0353, 0.0235, 0.0039],
         [0.0118, 0.0314, 0.0549,  ..., 0.0549, 0.0314, 0.0039],
         ...,
         [0.0118, 0.0275, 0.0510,  ..., 0.0471, 0.0275, 0.0078],
         [0.0078, 0.0196, 0.0275,  ..., 0.0353, 0.0314, 0.0157],
         [0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0039, 0.0000]],

        [[0.0078, 0.0157, 0.0275,  ..., 0.0196, 0.0157, 0.0118],
         [0.0196, 0.0314, 0.0510,  ..., 0.0431, 0.0314, 0.0118],
         [0.0275, 0.0471, 0.0706,  ..., 0.0706, 0.0392, 0.0118],
         ...,
         [0.0196, 0.0431, 0.0706,  ..., 0.0627, 0.0431, 0.0235],
         [0.0157, 0.0353, 0.0431,  ..., 0.0510, 0.0392, 0.0235],
         [0.0118, 0.0235, 0.0275,  ..., 0.0118, 0.0039, 0.0000]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[349., 236., 374., 254.],
        [400., 218., 429., 235.],
        [341., 238., 373., 290.],
        [398., 218., 453., 332.]], device='cuda:2'), 'labels': tensor([2, 2, 3, 3], device='cuda:2'), 'image_id': tensor([3530], device='cuda:2'), 'area': tensor([ 450.,  493., 1664., 6270.], device='cuda:2'), 'iscrowd': tensor([0, 0, 0, 0], device='cuda:2')}, {'boxes': tensor([[ 77., 107., 317., 440.]], device='cuda:2'), 'labels': tensor([1], device='cuda:2'), 'image_id': tensor([19585], device='cuda:2'), 'area': tensor([79920.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(0.2157, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0677, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.4162, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0340, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:0.7336227893829346
[GPU:2] Losses reduced:0.6107518672943115
[GPU:2] Loss value:0.6107518672943115
[GPU:2] Images:[tensor([[[0.0471, 0.1255, 0.1686,  ..., 0.1529, 0.2275, 0.4667],
         [0.2941, 0.4627, 0.3922,  ..., 0.2275, 0.2078, 0.4078],
         [0.5216, 0.4510, 0.4314,  ..., 0.2902, 0.3529, 0.3882],
         ...,
         [0.2706, 0.2353, 0.1137,  ..., 0.0235, 0.1412, 0.3961],
         [0.2627, 0.2157, 0.1804,  ..., 0.2863, 0.4039, 0.3255],
         [0.2196, 0.2314, 0.1765,  ..., 0.3255, 0.4078, 0.0118]],

        [[0.0784, 0.1529, 0.2000,  ..., 0.1922, 0.2706, 0.5098],
         [0.3176, 0.4902, 0.4235,  ..., 0.2627, 0.2510, 0.4549],
         [0.5490, 0.4824, 0.4706,  ..., 0.3255, 0.3961, 0.4353],
         ...,
         [0.2863, 0.2431, 0.1216,  ..., 0.0784, 0.1804, 0.4431],
         [0.2784, 0.2275, 0.1882,  ..., 0.3647, 0.4706, 0.3882],
         [0.2353, 0.2431, 0.1882,  ..., 0.4118, 0.4824, 0.0824]],

        [[0.1686, 0.2275, 0.2510,  ..., 0.2000, 0.2784, 0.5176],
         [0.4039, 0.5608, 0.4745,  ..., 0.2824, 0.2588, 0.4549],
         [0.6118, 0.5333, 0.5098,  ..., 0.3451, 0.4039, 0.4353],
         ...,
         [0.3294, 0.2941, 0.1804,  ..., 0.1922, 0.2784, 0.5059],
         [0.3255, 0.2863, 0.2471,  ..., 0.4627, 0.5490, 0.4392],
         [0.2824, 0.3020, 0.2471,  ..., 0.5059, 0.5490, 0.1216]]],
       device='cuda:2'), tensor([[[0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039]],

        [[0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039]],

        [[0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0039]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[ 43.,  28., 367., 255.]], device='cuda:2'), 'labels': tensor([90], device='cuda:2'), 'image_id': tensor([12624], device='cuda:2'), 'area': tensor([73548.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}, {'boxes': tensor([[ 53.,  14., 489., 194.]], device='cuda:2'), 'labels': tensor([5], device='cuda:2'), 'image_id': tensor([137], device='cuda:2'), 'area': tensor([78480.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(1.5305, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0774, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.2804, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0069, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:1.8951284885406494
[GPU:2] Losses reduced:1.3450931310653687
[GPU:2] Loss value:1.3450931310653687
[GPU:2] Images:[tensor([[[0.0078, 0.0314, 0.0000,  ..., 1.0000, 1.0000, 1.0000],
         [0.0275, 0.0000, 0.0000,  ..., 1.0000, 1.0000, 1.0000],
         [0.0000, 0.0196, 0.0000,  ..., 1.0000, 1.0000, 1.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.3608, 0.5412, 0.6980],
         [0.0039, 0.0118, 0.0039,  ..., 0.5412, 0.2980, 0.2667],
         [0.0000, 0.0039, 0.0000,  ..., 0.5608, 0.6510, 0.4588]],

        [[0.0353, 0.0314, 0.0157,  ..., 1.0000, 1.0000, 1.0000],
         [0.0000, 0.0118, 0.0078,  ..., 1.0000, 1.0000, 1.0000],
         [0.0196, 0.0000, 0.0000,  ..., 1.0000, 1.0000, 1.0000],
         ...,
         [0.0078, 0.0000, 0.0000,  ..., 0.3412, 0.5294, 0.7137],
         [0.0000, 0.0000, 0.0039,  ..., 0.6078, 0.3608, 0.3216],
         [0.0000, 0.0000, 0.0039,  ..., 0.6078, 0.6549, 0.4745]],

        [[0.0078, 0.0392, 0.0000,  ..., 1.0000, 1.0000, 1.0000],
         [0.0118, 0.0000, 0.0275,  ..., 1.0000, 1.0000, 1.0000],
         [0.0039, 0.0000, 0.0000,  ..., 1.0000, 1.0000, 1.0000],
         ...,
         [0.0078, 0.0078, 0.0078,  ..., 0.2157, 0.4000, 0.5843],
         [0.0000, 0.0000, 0.0000,  ..., 0.4431, 0.2078, 0.1843],
         [0.0000, 0.0000, 0.0000,  ..., 0.4588, 0.4902, 0.3451]]],
       device='cuda:2'), tensor([[[0.0745, 0.0588, 0.1059,  ..., 0.7961, 0.7961, 0.7961],
         [0.1255, 0.1569, 0.2078,  ..., 0.7882, 0.7882, 0.7882],
         [0.1059, 0.2392, 0.4667,  ..., 0.7804, 0.7804, 0.7843],
         ...,
         [0.6353, 0.6549, 0.6235,  ..., 0.5255, 0.5608, 0.4627],
         [0.5843, 0.6431, 0.6275,  ..., 0.4549, 0.5647, 0.4588],
         [0.5725, 0.6314, 0.6275,  ..., 0.4510, 0.5608, 0.4392]],

        [[0.0863, 0.0824, 0.0863,  ..., 0.8118, 0.8118, 0.8118],
         [0.0510, 0.0549, 0.0745,  ..., 0.8039, 0.8039, 0.8039],
         [0.0314, 0.0235, 0.1373,  ..., 0.7961, 0.7961, 0.8000],
         ...,
         [0.6157, 0.6353, 0.6078,  ..., 0.4667, 0.5294, 0.4314],
         [0.5647, 0.6235, 0.6118,  ..., 0.3961, 0.5333, 0.4275],
         [0.5529, 0.6118, 0.6118,  ..., 0.3922, 0.5294, 0.4078]],

        [[0.1529, 0.1451, 0.1647,  ..., 0.8588, 0.8588, 0.8588],
         [0.1373, 0.1529, 0.1725,  ..., 0.8510, 0.8510, 0.8510],
         [0.1059, 0.1373, 0.2706,  ..., 0.8431, 0.8431, 0.8471],
         ...,
         [0.3569, 0.3686, 0.3294,  ..., 0.2431, 0.2118, 0.1490],
         [0.3059, 0.3569, 0.3333,  ..., 0.1725, 0.2157, 0.1451],
         [0.2941, 0.3451, 0.3333,  ..., 0.1686, 0.2118, 0.1255]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[164., 104., 313., 222.],
        [  1.,  92., 100., 280.],
        [108., 119., 173., 271.],
        [203., 122., 252., 234.]], device='cuda:2'), 'labels': tensor([60,  3,  3,  3], device='cuda:2'), 'image_id': tensor([4915], device='cuda:2'), 'area': tensor([17582., 18612.,  9880.,  5488.], device='cuda:2'), 'iscrowd': tensor([0, 0, 0, 0], device='cuda:2')}, {'boxes': tensor([[ 14.,   5., 188., 187.]], device='cuda:2'), 'labels': tensor([4], device='cuda:2'), 'image_id': tensor([24739], device='cuda:2'), 'area': tensor([31668.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(0.8259, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.2306, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.0820, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0244, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:1.162901759147644
[GPU:2] Losses reduced:0.6417111158370972
[GPU:2] Loss value:0.6417111158370972
[GPU:2] Images:[tensor([[[0.7686, 0.8000, 0.8078,  ..., 0.6157, 0.6235, 0.6157],
         [0.6863, 0.7137, 0.7176,  ..., 0.5255, 0.5373, 0.5373],
         [0.7176, 0.7373, 0.7373,  ..., 0.5922, 0.5961, 0.6000],
         ...,
         [0.4039, 0.3961, 0.4000,  ..., 0.2784, 0.2667, 0.2510],
         [0.4353, 0.4196, 0.3961,  ..., 0.2627, 0.2627, 0.2431],
         [0.4431, 0.4392, 0.4157,  ..., 0.2706, 0.2706, 0.2510]],

        [[0.7412, 0.7333, 0.7333,  ..., 0.5725, 0.5882, 0.5961],
         [0.6510, 0.6392, 0.6353,  ..., 0.4667, 0.4667, 0.4510],
         [0.6667, 0.6706, 0.6745,  ..., 0.5373, 0.5373, 0.5333],
         ...,
         [0.4157, 0.4314, 0.4314,  ..., 0.2471, 0.2275, 0.2392],
         [0.4000, 0.4235, 0.4118,  ..., 0.2392, 0.2392, 0.2353],
         [0.4039, 0.4275, 0.4235,  ..., 0.2510, 0.2471, 0.2431]],

        [[0.6667, 0.6627, 0.6667,  ..., 0.6039, 0.5922, 0.5843],
         [0.5843, 0.5804, 0.5686,  ..., 0.4863, 0.4667, 0.4627],
         [0.6353, 0.6314, 0.6118,  ..., 0.5333, 0.5490, 0.5961],
         ...,
         [0.3804, 0.3569, 0.3412,  ..., 0.1961, 0.1804, 0.1804],
         [0.3647, 0.3686, 0.3569,  ..., 0.1765, 0.1843, 0.1882],
         [0.3647, 0.3922, 0.4039,  ..., 0.1765, 0.1922, 0.1961]]],
       device='cuda:2'), tensor([[[0.3569, 0.2196, 0.2745,  ..., 0.3961, 0.5255, 0.4706],
         [0.3725, 0.2275, 0.2706,  ..., 0.4000, 0.4392, 0.5176],
         [0.3804, 0.2353, 0.2627,  ..., 0.3255, 0.4000, 0.5451],
         ...,
         [0.7176, 0.6941, 0.7098,  ..., 0.8863, 0.7294, 0.7373],
         [0.7294, 0.7725, 0.7255,  ..., 0.6902, 0.6275, 0.7569],
         [0.7059, 0.7216, 0.7412,  ..., 0.6627, 0.7255, 0.7373]],

        [[0.3373, 0.2078, 0.2627,  ..., 0.4157, 0.5216, 0.4588],
         [0.3412, 0.2078, 0.2549,  ..., 0.4353, 0.4431, 0.4980],
         [0.3490, 0.2000, 0.2392,  ..., 0.3686, 0.4039, 0.5176],
         ...,
         [0.6902, 0.6706, 0.6980,  ..., 0.8392, 0.6706, 0.6863],
         [0.7059, 0.7490, 0.7020,  ..., 0.6118, 0.5569, 0.6471],
         [0.6627, 0.6784, 0.6863,  ..., 0.6078, 0.6745, 0.6588]],

        [[0.3137, 0.1804, 0.2431,  ..., 0.4000, 0.5020, 0.4314],
         [0.3294, 0.1922, 0.2431,  ..., 0.4157, 0.4196, 0.4745],
         [0.3412, 0.2039, 0.2392,  ..., 0.3451, 0.3804, 0.4941],
         ...,
         [0.6510, 0.6235, 0.6392,  ..., 0.7529, 0.5569, 0.6118],
         [0.6510, 0.6941, 0.6549,  ..., 0.5059, 0.5098, 0.5608],
         [0.5843, 0.6078, 0.6353,  ..., 0.5020, 0.6078, 0.6235]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[ 55., 221., 445., 385.]], device='cuda:2'), 'labels': tensor([75], device='cuda:2'), 'image_id': tensor([15593], device='cuda:2'), 'area': tensor([63960.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}, {'boxes': tensor([[ 41.,   0., 303., 491.]], device='cuda:2'), 'labels': tensor([66], device='cuda:2'), 'image_id': tensor([25870], device='cuda:2'), 'area': tensor([128642.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(0.2579, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0575, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.0649, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0407, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:0.42105036973953247
[GPU:2] Losses reduced:0.4756322503089905
[GPU:2] Loss value:0.4756322503089905
[GPU:2] Images:[tensor([[[0.6745, 0.4784, 0.7020,  ..., 0.8549, 0.8549, 0.8588],
         [0.4471, 0.6667, 0.4000,  ..., 0.8588, 0.8588, 0.8588],
         [0.6275, 0.4980, 0.5608,  ..., 0.8627, 0.8627, 0.8627],
         ...,
         [0.2549, 0.2353, 0.3255,  ..., 0.7843, 0.8667, 0.9804],
         [0.8353, 0.4706, 0.1059,  ..., 0.5765, 0.7686, 0.8824],
         [0.8471, 0.8392, 0.2824,  ..., 0.7765, 0.8275, 0.6863]],

        [[0.7412, 0.4863, 0.7647,  ..., 0.9961, 0.9961, 1.0000],
         [0.5098, 0.7216, 0.4941,  ..., 1.0000, 1.0000, 1.0000],
         [0.6157, 0.5725, 0.5569,  ..., 0.9961, 0.9961, 0.9961],
         ...,
         [0.1922, 0.2118, 0.2745,  ..., 0.7294, 0.8196, 0.9059],
         [0.8078, 0.4588, 0.0902,  ..., 0.4549, 0.6667, 0.7961],
         [0.8118, 0.7412, 0.2824,  ..., 0.6471, 0.7843, 0.5373]],

        [[0.7725, 0.5843, 0.8157,  ..., 0.9961, 0.9961, 1.0000],
         [0.6000, 0.7333, 0.5961,  ..., 1.0000, 1.0000, 1.0000],
         [0.6588, 0.6392, 0.5882,  ..., 1.0000, 1.0000, 1.0000],
         ...,
         [0.2353, 0.2588, 0.3137,  ..., 0.6784, 0.8353, 0.8392],
         [0.7451, 0.4314, 0.0863,  ..., 0.4471, 0.6784, 0.7451],
         [0.7843, 0.7216, 0.2431,  ..., 0.6196, 0.6980, 0.4941]]],
       device='cuda:2'), tensor([[[0.5490, 0.4000, 0.4118,  ..., 0.8471, 0.6431, 0.7059],
         [0.3373, 0.5961, 0.7725,  ..., 0.5686, 0.4235, 0.5490],
         [0.5412, 0.4000, 0.4157,  ..., 0.4745, 0.5412, 0.5137],
         ...,
         [0.7020, 0.1529, 0.0000,  ..., 0.2588, 0.2824, 0.3569],
         [0.1176, 0.0863, 0.0980,  ..., 0.2314, 0.1686, 0.2627],
         [0.1686, 0.1451, 0.1451,  ..., 0.0471, 0.2980, 0.1373]],

        [[1.0000, 0.7059, 0.7569,  ..., 0.9686, 0.9373, 0.8627],
         [0.4941, 0.6157, 0.7255,  ..., 0.6235, 0.7333, 0.6039],
         [0.6902, 0.6706, 0.8078,  ..., 0.5020, 0.7529, 0.6431],
         ...,
         [0.8118, 0.3020, 0.2039,  ..., 0.4902, 0.4980, 0.6392],
         [0.1137, 0.1137, 0.2745,  ..., 0.4627, 0.4745, 0.5451],
         [0.4471, 0.4549, 0.4706,  ..., 0.5255, 0.8275, 0.5647]],

        [[0.2824, 0.0000, 0.0000,  ..., 0.1137, 0.3059, 0.2314],
         [0.1451, 0.3529, 0.3961,  ..., 0.0392, 0.1725, 0.2627],
         [0.2471, 0.3137, 0.5216,  ..., 0.0941, 0.1725, 0.1843],
         ...,
         [0.7255, 0.2039, 0.0510,  ..., 0.0000, 0.0275, 0.0118],
         [0.0000, 0.0000, 0.0431,  ..., 0.0000, 0.0353, 0.0118],
         [0.0314, 0.0275, 0.0078,  ..., 0.1294, 0.5176, 0.0667]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[161.,  93., 297., 299.],
        [ 36.,  66., 179., 249.]], device='cuda:2'), 'labels': tensor([1, 1], device='cuda:2'), 'image_id': tensor([3280], device='cuda:2'), 'area': tensor([28016., 26169.], device='cuda:2'), 'iscrowd': tensor([0, 0], device='cuda:2')}, {'boxes': tensor([[129., 306., 205., 378.],
        [139., 190., 206., 245.]], device='cuda:2'), 'labels': tensor([97, 97], device='cuda:2'), 'image_id': tensor([28765], device='cuda:2'), 'area': tensor([5472., 3685.], device='cuda:2'), 'iscrowd': tensor([0, 0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(4.6228, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.1750, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.0609, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0164, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:4.875144004821777
[GPU:2] Losses reduced:4.807239055633545
[GPU:2] Loss value:4.807239055633545
[GPU:2] Images:[tensor([[[0.2118, 0.2157, 0.2157,  ..., 0.2588, 0.2549, 0.2510],
         [0.2118, 0.2118, 0.2157,  ..., 0.2549, 0.2510, 0.2471],
         [0.2118, 0.2157, 0.2157,  ..., 0.2824, 0.2784, 0.2745],
         ...,
         [0.2980, 0.3098, 0.3137,  ..., 0.4627, 0.4549, 0.4471],
         [0.2980, 0.3059, 0.3098,  ..., 0.4588, 0.4510, 0.4431],
         [0.2941, 0.3059, 0.3098,  ..., 0.4549, 0.4471, 0.4392]],

        [[0.2196, 0.2235, 0.2235,  ..., 0.2667, 0.2627, 0.2588],
         [0.2196, 0.2196, 0.2235,  ..., 0.2627, 0.2588, 0.2549],
         [0.2196, 0.2235, 0.2235,  ..., 0.2863, 0.2824, 0.2784],
         ...,
         [0.2941, 0.3059, 0.3098,  ..., 0.4510, 0.4431, 0.4353],
         [0.2941, 0.3020, 0.3059,  ..., 0.4471, 0.4431, 0.4353],
         [0.2902, 0.3020, 0.3059,  ..., 0.4510, 0.4431, 0.4353]],

        [[0.2157, 0.2196, 0.2196,  ..., 0.2627, 0.2588, 0.2549],
         [0.2157, 0.2157, 0.2196,  ..., 0.2588, 0.2549, 0.2510],
         [0.2157, 0.2196, 0.2196,  ..., 0.2941, 0.2902, 0.2863],
         ...,
         [0.2784, 0.2902, 0.2941,  ..., 0.5176, 0.5098, 0.5020],
         [0.2784, 0.2863, 0.2902,  ..., 0.5137, 0.4980, 0.4902],
         [0.2745, 0.2863, 0.2902,  ..., 0.5059, 0.4980, 0.4902]]],
       device='cuda:2'), tensor([[[0.0157, 0.0549, 0.0941,  ..., 0.0431, 0.0471, 0.0235],
         [0.1098, 0.1098, 0.1255,  ..., 0.0510, 0.0549, 0.0314],
         [0.0980, 0.1020, 0.1255,  ..., 0.0588, 0.0627, 0.0392],
         ...,
         [0.1255, 0.1843, 0.0980,  ..., 0.0941, 0.0745, 0.0510],
         [0.1529, 0.1529, 0.1020,  ..., 0.0824, 0.0667, 0.0431],
         [0.1294, 0.1412, 0.1412,  ..., 0.0667, 0.0588, 0.0314]],

        [[0.0235, 0.0549, 0.0745,  ..., 0.0275, 0.0314, 0.0078],
         [0.1176, 0.1098, 0.1137,  ..., 0.0353, 0.0392, 0.0157],
         [0.1059, 0.1020, 0.1255,  ..., 0.0431, 0.0471, 0.0235],
         ...,
         [0.1373, 0.2039, 0.1176,  ..., 0.0824, 0.0627, 0.0392],
         [0.1608, 0.1647, 0.1216,  ..., 0.0706, 0.0549, 0.0314],
         [0.1373, 0.1529, 0.1608,  ..., 0.0549, 0.0471, 0.0196]],

        [[0.0000, 0.0157, 0.0510,  ..., 0.0235, 0.0275, 0.0039],
         [0.0667, 0.0706, 0.0863,  ..., 0.0235, 0.0353, 0.0118],
         [0.0549, 0.0627, 0.0863,  ..., 0.0314, 0.0431, 0.0196],
         ...,
         [0.0549, 0.1176, 0.0392,  ..., 0.0471, 0.0353, 0.0118],
         [0.0784, 0.0824, 0.0431,  ..., 0.0431, 0.0275, 0.0039],
         [0.0549, 0.0706, 0.0824,  ..., 0.0275, 0.0196, 0.0000]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[  2., 122., 312., 322.]], device='cuda:2'), 'labels': tensor([51], device='cuda:2'), 'image_id': tensor([28858], device='cuda:2'), 'area': tensor([62000.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}, {'boxes': tensor([[ 50.,   4.,  83., 109.],
        [ 26.,  11.,  55., 109.]], device='cuda:2'), 'labels': tensor([10, 10], device='cuda:2'), 'image_id': tensor([15483], device='cuda:2'), 'area': tensor([3465., 2842.], device='cuda:2'), 'iscrowd': tensor([0, 0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(8141.9600, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(141.0732, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.0196, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0048, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:8283.0576171875
[GPU:2] Losses reduced:11360.7509765625
[GPU:2] Loss value:11360.7509765625
[GPU:2] Images:[tensor([[[0.0118, 0.0039, 0.0078,  ..., 0.2235, 0.3059, 0.3765],
         [0.0039, 0.0039, 0.0039,  ..., 0.0863, 0.1294, 0.1725],
         [0.0118, 0.0157, 0.0275,  ..., 0.0941, 0.0824, 0.1098],
         ...,
         [0.0667, 0.0000, 0.1137,  ..., 0.4588, 0.2471, 0.2745],
         [0.0941, 0.0000, 0.0039,  ..., 0.5882, 0.3059, 0.2275],
         [0.0784, 0.0392, 0.0118,  ..., 0.5412, 0.3725, 0.2980]],

        [[0.0353, 0.0431, 0.0471,  ..., 0.1137, 0.2118, 0.3529],
         [0.0431, 0.0471, 0.0510,  ..., 0.0353, 0.0588, 0.1294],
         [0.0510, 0.0627, 0.0745,  ..., 0.1412, 0.0784, 0.0941],
         ...,
         [0.0941, 0.1490, 0.2549,  ..., 0.4627, 0.2471, 0.2667],
         [0.0980, 0.0627, 0.0824,  ..., 0.5333, 0.1451, 0.1529],
         [0.0706, 0.0510, 0.0627,  ..., 0.5333, 0.3529, 0.1686]],

        [[0.0196, 0.0118, 0.0118,  ..., 0.1725, 0.2667, 0.3529],
         [0.0000, 0.0000, 0.0000,  ..., 0.0627, 0.1059, 0.1608],
         [0.0078, 0.0078, 0.0196,  ..., 0.0863, 0.0588, 0.0824],
         ...,
         [0.0235, 0.0000, 0.0824,  ..., 0.3059, 0.0980, 0.1843],
         [0.0431, 0.0000, 0.0000,  ..., 0.4275, 0.0275, 0.0000],
         [0.0235, 0.0078, 0.0000,  ..., 0.3804, 0.2353, 0.1412]]],
       device='cuda:2'), tensor([[[0.0039, 0.0157, 0.0157,  ..., 0.4471, 0.3686, 0.2902],
         [0.0078, 0.0078, 0.0157,  ..., 0.4784, 0.4745, 0.4235],
         [0.0314, 0.0275, 0.0275,  ..., 0.4824, 0.4627, 0.4039],
         ...,
         [0.1137, 0.1098, 0.1647,  ..., 0.7451, 0.8314, 0.7804],
         [0.1176, 0.1373, 0.1765,  ..., 0.6824, 0.7373, 0.8196],
         [0.1137, 0.1569, 0.1725,  ..., 0.6863, 0.7922, 0.8745]],

        [[0.0118, 0.0157, 0.0118,  ..., 0.3176, 0.2902, 0.2431],
         [0.0157, 0.0157, 0.0235,  ..., 0.3451, 0.3333, 0.2980],
         [0.0196, 0.0157, 0.0235,  ..., 0.3608, 0.3373, 0.2824],
         ...,
         [0.1333, 0.1176, 0.1765,  ..., 0.6667, 0.6941, 0.6980],
         [0.1373, 0.1490, 0.1843,  ..., 0.6314, 0.6549, 0.6784],
         [0.1412, 0.1765, 0.1882,  ..., 0.6588, 0.6863, 0.7216]],

        [[0.0000, 0.0078, 0.0039,  ..., 0.1961, 0.1843, 0.1490],
         [0.0000, 0.0000, 0.0039,  ..., 0.2471, 0.2706, 0.2549],
         [0.0000, 0.0000, 0.0078,  ..., 0.2510, 0.2471, 0.2039],
         ...,
         [0.1176, 0.0980, 0.1333,  ..., 0.4196, 0.4824, 0.4902],
         [0.1098, 0.1059, 0.1294,  ..., 0.4157, 0.4392, 0.4902],
         [0.0706, 0.0980, 0.0980,  ..., 0.4784, 0.5176, 0.5529]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[ 39., 116., 289., 273.]], device='cuda:2'), 'labels': tensor([64], device='cuda:2'), 'image_id': tensor([13387], device='cuda:2'), 'area': tensor([39250.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}, {'boxes': tensor([[145.,   0., 438., 341.]], device='cuda:2'), 'labels': tensor([4], device='cuda:2'), 'image_id': tensor([14491], device='cuda:2'), 'area': tensor([99913.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(14292629., device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(525654.8750, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(2.8750, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.1454, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:14818287.0
[GPU:2] Losses reduced:12019711.0
[GPU:2] Loss value:12019711.0
[GPU:2] Images:[tensor([[[0.0235, 0.0235, 0.0235,  ..., 0.0235, 0.0235, 0.0235],
         [0.0235, 0.0235, 0.0235,  ..., 0.0235, 0.0235, 0.0235],
         [0.0235, 0.0235, 0.0235,  ..., 0.0235, 0.0235, 0.0235],
         ...,
         [0.0745, 0.0078, 0.0157,  ..., 0.0549, 0.0510, 0.0353],
         [0.0235, 0.0314, 0.0196,  ..., 0.0549, 0.0549, 0.0510],
         [0.0118, 0.1020, 0.0510,  ..., 0.0627, 0.0745, 0.0745]],

        [[0.0235, 0.0235, 0.0235,  ..., 0.0235, 0.0235, 0.0235],
         [0.0235, 0.0235, 0.0235,  ..., 0.0235, 0.0235, 0.0235],
         [0.0235, 0.0235, 0.0235,  ..., 0.0235, 0.0235, 0.0235],
         ...,
         [0.0784, 0.0078, 0.0157,  ..., 0.0353, 0.0353, 0.0196],
         [0.0314, 0.0314, 0.0196,  ..., 0.0353, 0.0392, 0.0353],
         [0.0196, 0.1020, 0.0510,  ..., 0.0431, 0.0588, 0.0588]],

        [[0.0235, 0.0235, 0.0235,  ..., 0.0235, 0.0235, 0.0235],
         [0.0235, 0.0235, 0.0235,  ..., 0.0235, 0.0235, 0.0235],
         [0.0235, 0.0235, 0.0235,  ..., 0.0235, 0.0235, 0.0235],
         ...,
         [0.0588, 0.0000, 0.0157,  ..., 0.0235, 0.0235, 0.0078],
         [0.0118, 0.0235, 0.0196,  ..., 0.0235, 0.0275, 0.0235],
         [0.0000, 0.0941, 0.0510,  ..., 0.0314, 0.0471, 0.0471]]],
       device='cuda:2'), tensor([[[0.7255, 0.5843, 0.8118,  ..., 0.1608, 0.0510, 0.5333],
         [0.7882, 0.6196, 0.6235,  ..., 0.2039, 0.4039, 0.4863],
         [0.7059, 0.5922, 0.6353,  ..., 0.3137, 0.5294, 0.5098],
         ...,
         [0.6314, 0.5569, 0.5569,  ..., 0.8549, 0.8510, 0.5647],
         [0.4863, 0.4941, 0.2706,  ..., 0.7176, 0.8392, 0.6275],
         [0.5882, 0.4784, 0.3412,  ..., 0.7137, 0.8118, 0.5294]],

        [[0.6118, 0.4549, 0.6902,  ..., 0.1490, 0.0235, 0.5608],
         [0.6000, 0.4510, 0.5647,  ..., 0.2549, 0.4549, 0.4706],
         [0.6039, 0.4588, 0.5569,  ..., 0.3490, 0.5569, 0.4902],
         ...,
         [0.5216, 0.4549, 0.5294,  ..., 0.7804, 0.7451, 0.4510],
         [0.3529, 0.3686, 0.2510,  ..., 0.6078, 0.7255, 0.5020],
         [0.4431, 0.3216, 0.3451,  ..., 0.5725, 0.6784, 0.4000]],

        [[0.3765, 0.2431, 0.5098,  ..., 0.0275, 0.1569, 0.3490],
         [0.3569, 0.2510, 0.4118,  ..., 0.0863, 0.2745, 0.2235],
         [0.3804, 0.2118, 0.4588,  ..., 0.1804, 0.2510, 0.1686],
         ...,
         [0.3765, 0.2549, 0.4157,  ..., 0.5137, 0.5294, 0.2941],
         [0.2549, 0.1373, 0.2667,  ..., 0.4235, 0.4667, 0.3412],
         [0.2275, 0.1804, 0.3608,  ..., 0.4784, 0.4275, 0.2784]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[143.,  17., 258., 463.]], device='cuda:2'), 'labels': tensor([7], device='cuda:2'), 'image_id': tensor([14998], device='cuda:2'), 'area': tensor([51290.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}, {'boxes': tensor([[ 53., 157., 177., 319.],
        [295., 134., 385., 238.],
        [271., 257., 301., 284.]], device='cuda:2'), 'labels': tensor([1, 1, 1], device='cuda:2'), 'image_id': tensor([27960], device='cuda:2'), 'area': tensor([20088.,  9360.,   810.], device='cuda:2'), 'iscrowd': tensor([0, 0, 0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(4.5399e+22, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(4.8647e+20, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(581.1529, device='cuda:2',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(352.8581, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:4.588528058783486e+22
[GPU:2] Losses reduced:4.557383415560405e+22
[GPU:2] Loss value:4.557383415560405e+22
[GPU:2] Images:[tensor([[[0.0196, 0.0275, 0.0314,  ..., 0.3176, 0.3098, 0.3020],
         [0.0314, 0.0392, 0.0392,  ..., 0.3020, 0.3059, 0.2980],
         [0.0078, 0.0275, 0.0392,  ..., 0.2941, 0.2902, 0.2902],
         ...,
         [0.1373, 0.1529, 0.1686,  ..., 0.5216, 0.5216, 0.4941],
         [0.1216, 0.1216, 0.1216,  ..., 0.5216, 0.5176, 0.4863],
         [0.1529, 0.1490, 0.1451,  ..., 0.5255, 0.5137, 0.4863]],

        [[0.0118, 0.0118, 0.0078,  ..., 0.2706, 0.2745, 0.2667],
         [0.0235, 0.0235, 0.0157,  ..., 0.2667, 0.2706, 0.2706],
         [0.0000, 0.0078, 0.0196,  ..., 0.2549, 0.2588, 0.2588],
         ...,
         [0.1216, 0.1373, 0.1412,  ..., 0.4706, 0.4745, 0.4471],
         [0.1059, 0.1059, 0.0941,  ..., 0.4745, 0.4706, 0.4392],
         [0.1373, 0.1333, 0.1176,  ..., 0.4549, 0.4392, 0.4118]],

        [[0.0157, 0.0157, 0.0157,  ..., 0.2078, 0.2078, 0.2000],
         [0.0275, 0.0275, 0.0235,  ..., 0.2078, 0.2118, 0.2078],
         [0.0118, 0.0235, 0.0353,  ..., 0.2157, 0.2157, 0.2157],
         ...,
         [0.0863, 0.1020, 0.1098,  ..., 0.4078, 0.4118, 0.3843],
         [0.0706, 0.0706, 0.0627,  ..., 0.4118, 0.4078, 0.3765],
         [0.0941, 0.0902, 0.0784,  ..., 0.4000, 0.3843, 0.3569]]],
       device='cuda:2'), tensor([[[0.0902, 0.1255, 0.1686,  ..., 0.0980, 0.0588, 0.0196],
         [0.0863, 0.1176, 0.1647,  ..., 0.1294, 0.0863, 0.0314],
         [0.0980, 0.1255, 0.1608,  ..., 0.1451, 0.1059, 0.0235],
         ...,
         [0.2627, 0.3020, 0.3137,  ..., 0.4000, 0.3961, 0.4039],
         [0.2667, 0.3059, 0.3137,  ..., 0.4392, 0.4314, 0.4431],
         [0.2980, 0.2941, 0.2863,  ..., 0.3961, 0.3804, 0.4000]],

        [[0.0078, 0.0157, 0.0157,  ..., 0.1804, 0.1373, 0.0902],
         [0.0039, 0.0078, 0.0118,  ..., 0.2118, 0.1608, 0.1020],
         [0.0039, 0.0078, 0.0078,  ..., 0.2157, 0.1686, 0.0824],
         ...,
         [0.3020, 0.3490, 0.3686,  ..., 0.4078, 0.4039, 0.4118],
         [0.3020, 0.3529, 0.3765,  ..., 0.4392, 0.4314, 0.4392],
         [0.3216, 0.3333, 0.3529,  ..., 0.4157, 0.4000, 0.4078]],

        [[0.0000, 0.0118, 0.0353,  ..., 0.0118, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0314,  ..., 0.0431, 0.0353, 0.0078],
         [0.0000, 0.0078, 0.0275,  ..., 0.0667, 0.0549, 0.0000],
         ...,
         [0.5412, 0.5843, 0.6078,  ..., 0.6471, 0.6431, 0.6510],
         [0.5333, 0.5882, 0.6078,  ..., 0.6745, 0.6667, 0.6745],
         [0.5647, 0.5647, 0.5725,  ..., 0.6353, 0.6196, 0.6314]]],
       device='cuda:2')]
[GPU:2] Targets:[{'boxes': tensor([[176.,  83., 499., 265.]], device='cuda:2'), 'labels': tensor([51], device='cuda:2'), 'image_id': tensor([16926], device='cuda:2'), 'area': tensor([58786.], device='cuda:2'), 'iscrowd': tensor([0], device='cuda:2')}, {'boxes': tensor([[ 36.,  45., 153., 156.],
        [178., 175., 300., 311.],
        [ 51., 127., 169., 256.],
        [321., 248., 442., 374.],
        [403., 179., 433., 213.],
        [156., 260., 236., 318.]], device='cuda:2'), 'labels': tensor([43, 43, 43, 43, 43, 43], device='cuda:2'), 'image_id': tensor([24358], device='cuda:2'), 'area': tensor([12987., 16592., 15222., 15246.,  1020.,  4640.], device='cuda:2'), 'iscrowd': tensor([0, 0, 0, 0, 0, 0], device='cuda:2')}]
[GPU:2] Loss dict:{'loss_classifier': tensor(nan, device='cuda:2', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(nan, device='cuda:2', grad_fn=<DivBackward0>), 'loss_objectness': tensor(nan, device='cuda:2', grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(1.4615e+20, device='cuda:2', grad_fn=<DivBackward0>)}
[GPU:2] Sum of losses:nan
[GPU:2] Losses reduced:nan
[GPU:2] Loss value:nan
[GPU:2] Loss is nan, stopping training
{'loss_box_reg': tensor(nan, device='cuda:2'), 'loss_classifier': tensor(nan, device='cuda:2'), 'loss_objectness': tensor(nan, device='cuda:2'), 'loss_rpn_box_reg': tensor(1.5284e+20, device='cuda:2')}
[GPU:1] Images:[tensor([[[0.8706, 0.8706, 0.8706,  ..., 0.8157, 0.8196, 0.8275],
         [0.8706, 0.8706, 0.8706,  ..., 0.8157, 0.8235, 0.8275],
         [0.8706, 0.8745, 0.8745,  ..., 0.8196, 0.8235, 0.8235],
         ...,
         [0.5686, 0.5804, 0.5765,  ..., 0.4980, 0.4392, 0.4471],
         [0.5765, 0.5922, 0.5882,  ..., 0.4824, 0.3961, 0.4235],
         [0.5882, 0.6039, 0.6078,  ..., 0.4000, 0.2510, 0.2667]],

        [[0.8706, 0.8706, 0.8706,  ..., 0.7922, 0.7961, 0.8039],
         [0.8706, 0.8706, 0.8706,  ..., 0.7922, 0.8000, 0.8039],
         [0.8706, 0.8745, 0.8745,  ..., 0.7961, 0.8000, 0.8000],
         ...,
         [0.7137, 0.7098, 0.7059,  ..., 0.6667, 0.6471, 0.6627],
         [0.7255, 0.7216, 0.7176,  ..., 0.6471, 0.6039, 0.6392],
         [0.7373, 0.7373, 0.7412,  ..., 0.5882, 0.4941, 0.5176]],

        [[0.8392, 0.8392, 0.8392,  ..., 0.7294, 0.7333, 0.7412],
         [0.8392, 0.8392, 0.8392,  ..., 0.7294, 0.7373, 0.7412],
         [0.8392, 0.8431, 0.8431,  ..., 0.7333, 0.7373, 0.7373],
         ...,
         [0.7373, 0.7373, 0.7255,  ..., 0.7333, 0.7098, 0.7451],
         [0.7373, 0.7412, 0.7373,  ..., 0.7333, 0.6667, 0.7176],
         [0.7412, 0.7451, 0.7490,  ..., 0.6745, 0.5529, 0.5647]]],
       device='cuda:1'), tensor([[[0.0588, 0.0510, 0.0549,  ..., 0.2039, 0.2118, 0.2118],
         [0.0549, 0.0549, 0.0588,  ..., 0.2157, 0.2157, 0.2118],
         [0.0510, 0.0549, 0.0627,  ..., 0.2118, 0.2039, 0.2039],
         ...,
         [0.7059, 0.7020, 0.7294,  ..., 0.3098, 0.4784, 0.3294],
         [0.7137, 0.7137, 0.7216,  ..., 0.1961, 0.2706, 0.3686],
         [0.7098, 0.7255, 0.7333,  ..., 0.1569, 0.0588, 0.1020]],

        [[0.0549, 0.0471, 0.0510,  ..., 0.1255, 0.1333, 0.1333],
         [0.0510, 0.0510, 0.0549,  ..., 0.1373, 0.1373, 0.1333],
         [0.0471, 0.0510, 0.0588,  ..., 0.1333, 0.1255, 0.1255],
         ...,
         [0.6902, 0.6902, 0.7137,  ..., 0.2471, 0.3765, 0.1922],
         [0.7020, 0.7020, 0.7059,  ..., 0.1451, 0.2196, 0.2863],
         [0.6941, 0.7137, 0.7176,  ..., 0.1255, 0.0471, 0.0784]],

        [[0.0353, 0.0275, 0.0314,  ..., 0.0314, 0.0392, 0.0392],
         [0.0314, 0.0314, 0.0353,  ..., 0.0431, 0.0431, 0.0392],
         [0.0275, 0.0314, 0.0392,  ..., 0.0392, 0.0314, 0.0314],
         ...,
         [0.5765, 0.5686, 0.6000,  ..., 0.1490, 0.2706, 0.0824],
         [0.5804, 0.5725, 0.5922,  ..., 0.1137, 0.1529, 0.2039],
         [0.5804, 0.5922, 0.6039,  ..., 0.0745, 0.0275, 0.0863]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[  4.,  20., 316., 477.]], device='cuda:1'), 'labels': tensor([4], device='cuda:1'), 'image_id': tensor([23117], device='cuda:1'), 'area': tensor([142584.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[  0.,  62., 347., 332.]], device='cuda:1'), 'labels': tensor([46], device='cuda:1'), 'image_id': tensor([22624], device='cuda:1'), 'area': tensor([93690.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(4.6033, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(1.1668e-05, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.6933, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0872, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:5.383864402770996
[GPU:1] Losses reduced:5.325780391693115
[GPU:1] Loss value:5.325780391693115
[GPU:1] Epoch: [0]  [   0/3750]  eta: 8:01:31  loss: 5.3258 (5.3258)  loss_box_reg: 0.0025 (0.0025)  loss_classifier: 4.6025 (4.6025)  loss_objectness: 0.6936 (0.6936)  loss_rpn_box_reg: 0.0272 (0.0272)  time: 7.7044  data: 2.1126  max mem: 7124
[GPU:1] Images:[tensor([[[0.5216, 0.5020, 0.5216,  ..., 0.5529, 0.5490, 0.5451],
         [0.5255, 0.5059, 0.5255,  ..., 0.5569, 0.5529, 0.5490],
         [0.5373, 0.5137, 0.5294,  ..., 0.5608, 0.5569, 0.5529],
         ...,
         [0.5686, 0.5451, 0.5529,  ..., 0.0549, 0.0471, 0.0392],
         [0.5725, 0.5451, 0.5529,  ..., 0.0667, 0.0353, 0.0471],
         [0.5765, 0.5490, 0.5569,  ..., 0.0549, 0.0314, 0.0510]],

        [[0.5020, 0.4824, 0.5020,  ..., 0.5490, 0.5451, 0.5412],
         [0.5059, 0.4863, 0.5059,  ..., 0.5529, 0.5490, 0.5451],
         [0.5176, 0.4941, 0.5098,  ..., 0.5569, 0.5529, 0.5490],
         ...,
         [0.5176, 0.4941, 0.5020,  ..., 0.0510, 0.0431, 0.0392],
         [0.5216, 0.4941, 0.5020,  ..., 0.0627, 0.0353, 0.0471],
         [0.5255, 0.4980, 0.5059,  ..., 0.0471, 0.0275, 0.0510]],

        [[0.4157, 0.3961, 0.4157,  ..., 0.4706, 0.4667, 0.4627],
         [0.4196, 0.4000, 0.4196,  ..., 0.4745, 0.4706, 0.4667],
         [0.4314, 0.4078, 0.4235,  ..., 0.4784, 0.4745, 0.4706],
         ...,
         [0.4549, 0.4314, 0.4392,  ..., 0.0706, 0.0627, 0.0471],
         [0.4588, 0.4314, 0.4392,  ..., 0.0824, 0.0431, 0.0549],
         [0.4627, 0.4353, 0.4431,  ..., 0.0667, 0.0471, 0.0588]]],
       device='cuda:1'), tensor([[[0.4471, 0.3882, 0.4784,  ..., 0.3922, 0.3333, 0.2078],
         [0.4431, 0.5294, 0.4549,  ..., 0.4000, 0.3255, 0.2314],
         [0.5608, 0.5098, 0.5569,  ..., 0.2941, 0.2706, 0.2039],
         ...,
         [0.0745, 0.0706, 0.0824,  ..., 0.3529, 0.3098, 0.2902],
         [0.0706, 0.0627, 0.0784,  ..., 0.3412, 0.3255, 0.3098],
         [0.0706, 0.0588, 0.0706,  ..., 0.3294, 0.3294, 0.3176]],

        [[0.4039, 0.3137, 0.4000,  ..., 0.3529, 0.3020, 0.2039],
         [0.4039, 0.4706, 0.3882,  ..., 0.3569, 0.2941, 0.2118],
         [0.5255, 0.4863, 0.5098,  ..., 0.2431, 0.2235, 0.1804],
         ...,
         [0.0588, 0.0549, 0.0588,  ..., 0.4157, 0.3765, 0.3490],
         [0.0549, 0.0471, 0.0549,  ..., 0.4235, 0.4000, 0.3765],
         [0.0549, 0.0431, 0.0471,  ..., 0.4196, 0.4118, 0.3922]],

        [[0.3961, 0.3294, 0.4353,  ..., 0.2471, 0.2118, 0.0941],
         [0.4000, 0.4824, 0.4196,  ..., 0.2706, 0.2196, 0.1255],
         [0.5294, 0.4941, 0.5255,  ..., 0.1804, 0.1765, 0.1255],
         ...,
         [0.0549, 0.0510, 0.0588,  ..., 0.3020, 0.2510, 0.2275],
         [0.0510, 0.0431, 0.0549,  ..., 0.3020, 0.2824, 0.2510],
         [0.0510, 0.0392, 0.0471,  ..., 0.3059, 0.2902, 0.2745]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[ 95.,  38., 441., 362.]], device='cuda:1'), 'labels': tensor([75], device='cuda:1'), 'image_id': tensor([19383], device='cuda:1'), 'area': tensor([112104.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[  2.,  84., 419., 374.]], device='cuda:1'), 'labels': tensor([72], device='cuda:1'), 'image_id': tensor([5407], device='cuda:1'), 'area': tensor([120930.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(4.0830, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(5.2261e-05, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.6806, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0184, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:4.782068729400635
[GPU:1] Losses reduced:4.789564609527588
[GPU:1] Loss value:4.789564609527588
[GPU:1] Images:[tensor([[[0.0863, 0.0824, 0.0980,  ..., 0.7255, 0.7176, 0.7294],
         [0.0902, 0.0706, 0.0745,  ..., 0.7216, 0.7176, 0.7255],
         [0.0392, 0.0353, 0.0745,  ..., 0.7373, 0.7176, 0.6902],
         ...,
         [0.8667, 0.8471, 0.8353,  ..., 0.9216, 0.9020, 0.8824],
         [0.8745, 0.7804, 0.8667,  ..., 0.8941, 0.9020, 0.9294],
         [0.8392, 0.8902, 0.7686,  ..., 0.8510, 0.8510, 0.8588]],

        [[0.0275, 0.0275, 0.0431,  ..., 0.4471, 0.4392, 0.4745],
         [0.0510, 0.0353, 0.0353,  ..., 0.4353, 0.4196, 0.4471],
         [0.0235, 0.0118, 0.0353,  ..., 0.4588, 0.4510, 0.4353],
         ...,
         [0.5294, 0.5451, 0.4784,  ..., 0.5529, 0.6118, 0.6000],
         [0.5373, 0.4784, 0.5098,  ..., 0.5922, 0.5490, 0.6157],
         [0.5059, 0.5922, 0.4196,  ..., 0.5882, 0.5294, 0.5490]],

        [[0.0157, 0.0235, 0.0314,  ..., 0.3765, 0.3686, 0.3961],
         [0.0549, 0.0392, 0.0314,  ..., 0.3686, 0.3569, 0.3765],
         [0.0275, 0.0118, 0.0275,  ..., 0.3882, 0.3765, 0.3569],
         ...,
         [0.4392, 0.4431, 0.4039,  ..., 0.4431, 0.4980, 0.5020],
         [0.4471, 0.3765, 0.4353,  ..., 0.5137, 0.4471, 0.5255],
         [0.4235, 0.4980, 0.3490,  ..., 0.5529, 0.4431, 0.4824]]],
       device='cuda:1'), tensor([[[0.6510, 0.6314, 0.6196,  ..., 0.7529, 0.7529, 0.7529],
         [0.6627, 0.6667, 0.6784,  ..., 0.7608, 0.7569, 0.7569],
         [0.6824, 0.6902, 0.7216,  ..., 0.7529, 0.7529, 0.7529],
         ...,
         [0.5804, 0.6667, 0.6902,  ..., 0.5647, 0.5255, 0.6353],
         [0.7333, 0.6863, 0.6863,  ..., 0.7843, 0.7765, 0.7647],
         [0.7804, 0.7294, 0.6824,  ..., 0.8118, 0.8118, 0.8196]],

        [[0.6000, 0.5922, 0.5882,  ..., 0.6980, 0.6980, 0.6980],
         [0.6000, 0.6039, 0.6157,  ..., 0.7020, 0.6980, 0.6980],
         [0.6118, 0.6196, 0.6510,  ..., 0.7020, 0.6941, 0.6941],
         ...,
         [0.4706, 0.6314, 0.6157,  ..., 0.5451, 0.5098, 0.6314],
         [0.6627, 0.7059, 0.6431,  ..., 0.7451, 0.7490, 0.7373],
         [0.7961, 0.7686, 0.6745,  ..., 0.7529, 0.7529, 0.7569]],

        [[0.4667, 0.4549, 0.4471,  ..., 0.5216, 0.5216, 0.5216],
         [0.4588, 0.4627, 0.4745,  ..., 0.5333, 0.5294, 0.5294],
         [0.4549, 0.4627, 0.4941,  ..., 0.5373, 0.5333, 0.5333],
         ...,
         [0.3765, 0.5020, 0.5490,  ..., 0.4706, 0.4627, 0.5529],
         [0.6078, 0.6275, 0.6275,  ..., 0.6392, 0.6471, 0.6353],
         [0.6667, 0.6706, 0.5922,  ..., 0.5922, 0.5843, 0.6157]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[316.,  49., 471., 293.],
        [  9.,  43., 225., 325.]], device='cuda:1'), 'labels': tensor([4, 4], device='cuda:1'), 'image_id': tensor([3854], device='cuda:1'), 'area': tensor([37820., 60912.], device='cuda:1'), 'iscrowd': tensor([0, 0], device='cuda:1')}, {'boxes': tensor([[118., 122., 346., 291.]], device='cuda:1'), 'labels': tensor([1], device='cuda:1'), 'image_id': tensor([1616], device='cuda:1'), 'area': tensor([38532.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(0.7613, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0644, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.6468, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0048, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:1.477262258529663
[GPU:1] Losses reduced:1.4989787340164185
[GPU:1] Loss value:1.4989787340164185
[GPU:1] Images:[tensor([[[0.4431, 0.4510, 0.4588,  ..., 0.3333, 0.3412, 0.3373],
         [0.4353, 0.4353, 0.4392,  ..., 0.3412, 0.3451, 0.3412],
         [0.4353, 0.4353, 0.4353,  ..., 0.3412, 0.3451, 0.3451],
         ...,
         [0.3137, 0.3098, 0.3137,  ..., 0.3843, 0.3804, 0.3882],
         [0.3098, 0.3098, 0.3137,  ..., 0.3961, 0.4039, 0.4078],
         [0.3098, 0.3098, 0.3137,  ..., 0.4039, 0.4157, 0.4196]],

        [[0.3765, 0.3804, 0.3882,  ..., 0.2745, 0.2745, 0.2706],
         [0.3725, 0.3725, 0.3765,  ..., 0.2824, 0.2784, 0.2745],
         [0.3843, 0.3843, 0.3843,  ..., 0.2824, 0.2784, 0.2784],
         ...,
         [0.2667, 0.2627, 0.2588,  ..., 0.3098, 0.3176, 0.3255],
         [0.2510, 0.2549, 0.2588,  ..., 0.3216, 0.3294, 0.3412],
         [0.2510, 0.2549, 0.2588,  ..., 0.3255, 0.3373, 0.3529]],

        [[0.3137, 0.3255, 0.3333,  ..., 0.1922, 0.1961, 0.1922],
         [0.3137, 0.3137, 0.3176,  ..., 0.2078, 0.2078, 0.2039],
         [0.3216, 0.3216, 0.3216,  ..., 0.2078, 0.2078, 0.2078],
         ...,
         [0.1725, 0.1686, 0.1569,  ..., 0.1843, 0.1882, 0.1961],
         [0.1608, 0.1529, 0.1569,  ..., 0.2039, 0.2118, 0.2235],
         [0.1608, 0.1529, 0.1569,  ..., 0.2196, 0.2314, 0.2431]]],
       device='cuda:1'), tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0078, 0.0000],
         ...,
         [0.0000, 0.0039, 0.0039,  ..., 0.5255, 0.5059, 0.5333],
         [0.0000, 0.0000, 0.0000,  ..., 0.4902, 0.5137, 0.5216],
         [0.0000, 0.0000, 0.0000,  ..., 0.5137, 0.4863, 0.5098]],

        [[0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0078, 0.0000],
         ...,
         [0.0000, 0.0039, 0.0039,  ..., 0.6706, 0.6471, 0.6706],
         [0.0000, 0.0000, 0.0000,  ..., 0.6353, 0.6510, 0.6588],
         [0.0000, 0.0000, 0.0000,  ..., 0.6627, 0.6392, 0.6667]],

        [[0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0078, 0.0000],
         ...,
         [0.0000, 0.0039, 0.0039,  ..., 0.7843, 0.7333, 0.7451],
         [0.0000, 0.0000, 0.0000,  ..., 0.7412, 0.7608, 0.7451],
         [0.0000, 0.0000, 0.0000,  ..., 0.7529, 0.7686, 0.7686]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[ 85.,  21., 424., 310.]], device='cuda:1'), 'labels': tensor([42], device='cuda:1'), 'image_id': tensor([4866], device='cuda:1'), 'area': tensor([97971.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[  1., 216., 434., 374.],
        [133., 131., 215., 204.],
        [147.,  13., 412., 374.]], device='cuda:1'), 'labels': tensor([34, 35,  3], device='cuda:1'), 'image_id': tensor([7659], device='cuda:1'), 'area': tensor([68414.,  5986., 95665.], device='cuda:1'), 'iscrowd': tensor([0, 0, 0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(3.0514, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.1869, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.4937, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0215, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:3.753474712371826
[GPU:1] Losses reduced:2.3331806659698486
[GPU:1] Loss value:2.3331806659698486
[GPU:1] Images:[tensor([[[0.4941, 0.4941, 0.4941,  ..., 0.5059, 0.5020, 0.4980],
         [0.4941, 0.4941, 0.4941,  ..., 0.5098, 0.5059, 0.5059],
         [0.4941, 0.4902, 0.4941,  ..., 0.5098, 0.5098, 0.5098],
         ...,
         [0.1451, 0.1569, 0.1647,  ..., 0.2392, 0.2784, 0.3294],
         [0.1176, 0.0941, 0.1059,  ..., 0.2549, 0.2471, 0.2431],
         [0.4745, 0.3294, 0.3608,  ..., 0.2863, 0.2667, 0.2588]],

        [[0.6157, 0.6157, 0.6157,  ..., 0.6196, 0.6157, 0.6118],
         [0.6157, 0.6157, 0.6157,  ..., 0.6235, 0.6196, 0.6196],
         [0.6157, 0.6118, 0.6157,  ..., 0.6235, 0.6235, 0.6235],
         ...,
         [0.1294, 0.1529, 0.1490,  ..., 0.2588, 0.3020, 0.3412],
         [0.1333, 0.1059, 0.1098,  ..., 0.2549, 0.2431, 0.2392],
         [0.4353, 0.2863, 0.3137,  ..., 0.2863, 0.2627, 0.2549]],

        [[0.7373, 0.7373, 0.7373,  ..., 0.7373, 0.7333, 0.7294],
         [0.7373, 0.7373, 0.7373,  ..., 0.7412, 0.7373, 0.7373],
         [0.7373, 0.7333, 0.7373,  ..., 0.7412, 0.7412, 0.7412],
         ...,
         [0.1176, 0.1373, 0.1373,  ..., 0.2314, 0.2627, 0.2980],
         [0.1451, 0.1255, 0.1294,  ..., 0.2549, 0.2353, 0.2235],
         [0.3294, 0.2000, 0.2275,  ..., 0.2784, 0.2471, 0.2392]]],
       device='cuda:1'), tensor([[[0.8941, 0.9412, 0.9490,  ..., 0.9529, 0.9451, 0.8980],
         [0.9137, 0.9647, 0.9686,  ..., 0.9725, 0.9608, 0.9176],
         [0.9137, 0.9647, 0.9686,  ..., 0.9725, 0.9608, 0.9176],
         ...,
         [0.9137, 0.9529, 0.9647,  ..., 0.9608, 0.9490, 0.9098],
         [0.8902, 0.9294, 0.9412,  ..., 0.9490, 0.9373, 0.8980],
         [0.8471, 0.8863, 0.8902,  ..., 0.8863, 0.8745, 0.8392]],

        [[0.8980, 0.9451, 0.9529,  ..., 0.9569, 0.9490, 0.9020],
         [0.9176, 0.9686, 0.9725,  ..., 0.9765, 0.9647, 0.9216],
         [0.9176, 0.9686, 0.9725,  ..., 0.9765, 0.9647, 0.9216],
         ...,
         [0.9176, 0.9569, 0.9686,  ..., 0.9647, 0.9529, 0.9137],
         [0.8941, 0.9333, 0.9451,  ..., 0.9529, 0.9412, 0.9020],
         [0.8510, 0.8902, 0.8941,  ..., 0.8902, 0.8784, 0.8431]],

        [[0.9137, 0.9608, 0.9686,  ..., 0.9725, 0.9647, 0.9098],
         [0.9333, 0.9843, 0.9882,  ..., 0.9922, 0.9804, 0.9294],
         [0.9333, 0.9843, 0.9882,  ..., 0.9922, 0.9804, 0.9294],
         ...,
         [0.9333, 0.9725, 0.9843,  ..., 0.9804, 0.9686, 0.9216],
         [0.9098, 0.9490, 0.9608,  ..., 0.9686, 0.9569, 0.9098],
         [0.8667, 0.9059, 0.9098,  ..., 0.9059, 0.8941, 0.8510]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[ 64.,  92., 301., 456.]], device='cuda:1'), 'labels': tensor([64], device='cuda:1'), 'image_id': tensor([17034], device='cuda:1'), 'area': tensor([86268.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[ 37.,  69., 481., 426.]], device='cuda:1'), 'labels': tensor([34], device='cuda:1'), 'image_id': tensor([6402], device='cuda:1'), 'area': tensor([158508.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(5.7155, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.2195, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.2385, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0281, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:6.201608657836914
[GPU:1] Losses reduced:7.243494510650635
[GPU:1] Loss value:7.243494510650635
[GPU:1] Images:[tensor([[[0.1725, 0.1765, 0.1922,  ..., 0.3843, 0.7804, 0.4353],
         [0.1608, 0.1725, 0.1882,  ..., 0.2902, 0.6667, 0.6667],
         [0.1569, 0.1725, 0.1882,  ..., 0.2588, 0.4863, 0.8000],
         ...,
         [0.1961, 0.2000, 0.2039,  ..., 0.7137, 0.6510, 0.6549],
         [0.1961, 0.2039, 0.2078,  ..., 0.6431, 0.6078, 0.6431],
         [0.1961, 0.2039, 0.2078,  ..., 0.6078, 0.5922, 0.6392]],

        [[0.2353, 0.2392, 0.2549,  ..., 0.4235, 0.8157, 0.4706],
         [0.2235, 0.2353, 0.2510,  ..., 0.3216, 0.6941, 0.6941],
         [0.2196, 0.2353, 0.2510,  ..., 0.2824, 0.5059, 0.8196],
         ...,
         [0.2235, 0.2275, 0.2314,  ..., 0.6471, 0.5765, 0.5765],
         [0.2235, 0.2314, 0.2353,  ..., 0.5765, 0.5333, 0.5647],
         [0.2235, 0.2314, 0.2353,  ..., 0.5412, 0.5216, 0.5608]],

        [[0.2353, 0.2392, 0.2549,  ..., 0.4275, 0.8353, 0.4980],
         [0.2196, 0.2314, 0.2471,  ..., 0.3647, 0.7569, 0.7686],
         [0.2078, 0.2235, 0.2392,  ..., 0.3686, 0.6196, 0.9373],
         ...,
         [0.2471, 0.2510, 0.2549,  ..., 0.6157, 0.5490, 0.5490],
         [0.2471, 0.2549, 0.2588,  ..., 0.5451, 0.5059, 0.5373],
         [0.2471, 0.2549, 0.2588,  ..., 0.5020, 0.4824, 0.5255]]],
       device='cuda:1'), tensor([[[0.2510, 0.1686, 0.1098,  ..., 0.3294, 0.3451, 0.3137],
         [0.4039, 0.4431, 0.3176,  ..., 0.3529, 0.3373, 0.3059],
         [0.1333, 0.2196, 0.4196,  ..., 0.3412, 0.3098, 0.3216],
         ...,
         [0.1647, 0.1216, 0.1255,  ..., 0.5020, 0.4392, 0.3843],
         [0.1294, 0.1137, 0.1176,  ..., 0.4471, 0.3961, 0.3882],
         [0.1451, 0.1373, 0.1294,  ..., 0.3686, 0.3529, 0.3608]],

        [[0.3176, 0.2078, 0.1569,  ..., 0.4431, 0.4392, 0.4078],
         [0.5216, 0.5765, 0.4118,  ..., 0.4588, 0.4196, 0.3922],
         [0.2471, 0.4431, 0.5804,  ..., 0.4471, 0.4118, 0.4039],
         ...,
         [0.2078, 0.1608, 0.1451,  ..., 0.1451, 0.1529, 0.1490],
         [0.1765, 0.1569, 0.1608,  ..., 0.1373, 0.1333, 0.1451],
         [0.2000, 0.1961, 0.1882,  ..., 0.1137, 0.1137, 0.1098]],

        [[0.1020, 0.0745, 0.0784,  ..., 0.3255, 0.3137, 0.2667],
         [0.1294, 0.1451, 0.0431,  ..., 0.3373, 0.2902, 0.2510],
         [0.0275, 0.0745, 0.1176,  ..., 0.3098, 0.2667, 0.2745],
         ...,
         [0.1843, 0.1176, 0.1176,  ..., 0.2039, 0.1961, 0.1882],
         [0.1686, 0.1255, 0.1373,  ..., 0.1608, 0.1686, 0.1961],
         [0.2000, 0.1686, 0.1608,  ..., 0.1294, 0.1451, 0.1647]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[189.,  35., 377., 332.]], device='cuda:1'), 'labels': tensor([1], device='cuda:1'), 'image_id': tensor([4861], device='cuda:1'), 'area': tensor([55836.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[  1.,  25., 461., 372.]], device='cuda:1'), 'labels': tensor([26], device='cuda:1'), 'image_id': tensor([11972], device='cuda:1'), 'area': tensor([159620.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(1.9066, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0646, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.1945, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0430, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:2.2087490558624268
[GPU:1] Losses reduced:2.0587098598480225
[GPU:1] Loss value:2.0587098598480225
[GPU:1] Images:[tensor([[[0.0000, 0.0000, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0118, 0.0000, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0314, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0314, 0.0039,  ..., 0.0078, 0.0078, 0.0157],
         [0.0039, 0.0078, 0.0196,  ..., 0.0000, 0.0000, 0.0000]],

        [[0.1647, 0.1686, 0.1804,  ..., 0.3725, 0.3725, 0.3843],
         [0.1843, 0.1686, 0.1765,  ..., 0.3804, 0.3804, 0.3922],
         [0.1686, 0.1647, 0.1765,  ..., 0.3725, 0.3686, 0.3765],
         ...,
         [0.5569, 0.5882, 0.6235,  ..., 0.6039, 0.6000, 0.6039],
         [0.6000, 0.6196, 0.6235,  ..., 0.5961, 0.5922, 0.5882],
         [0.5961, 0.5765, 0.6039,  ..., 0.6000, 0.5922, 0.5882]],

        [[0.2784, 0.2667, 0.2784,  ..., 0.4980, 0.4902, 0.4824],
         [0.2902, 0.2941, 0.3020,  ..., 0.5059, 0.4941, 0.4941],
         [0.2627, 0.2549, 0.2667,  ..., 0.4902, 0.4784, 0.4745],
         ...,
         [0.6941, 0.6353, 0.6980,  ..., 0.6431, 0.6157, 0.6196],
         [0.6392, 0.6157, 0.6706,  ..., 0.6902, 0.6863, 0.6863],
         [0.6784, 0.6824, 0.7216,  ..., 0.7098, 0.6824, 0.6471]]],
       device='cuda:1'), tensor([[[0.8941, 0.8510, 0.9373,  ..., 0.8039, 0.8039, 0.8039],
         [0.8980, 0.8549, 0.9412,  ..., 0.8078, 0.8039, 0.8039],
         [0.9059, 0.8588, 0.9412,  ..., 0.8118, 0.8078, 0.8039],
         ...,
         [0.5137, 0.5059, 0.4863,  ..., 0.9216, 0.9020, 0.8863],
         [0.5294, 0.5098, 0.4941,  ..., 0.9216, 0.9294, 0.8980],
         [0.5333, 0.5137, 0.4902,  ..., 0.8902, 0.9176, 0.9098]],

        [[0.5922, 0.5451, 0.6314,  ..., 0.3608, 0.3608, 0.3608],
         [0.5961, 0.5490, 0.6353,  ..., 0.3647, 0.3608, 0.3608],
         [0.6000, 0.5529, 0.6353,  ..., 0.3686, 0.3647, 0.3608],
         ...,
         [0.1529, 0.1451, 0.1412,  ..., 0.4118, 0.3843, 0.3647],
         [0.1569, 0.1490, 0.1373,  ..., 0.4196, 0.4196, 0.3843],
         [0.1608, 0.1529, 0.1333,  ..., 0.3961, 0.4275, 0.4157]],

        [[0.2863, 0.2510, 0.3490,  ..., 0.1255, 0.1255, 0.1255],
         [0.2902, 0.2549, 0.3529,  ..., 0.1294, 0.1255, 0.1255],
         [0.3059, 0.2627, 0.3529,  ..., 0.1333, 0.1294, 0.1255],
         ...,
         [0.0627, 0.0549, 0.0549,  ..., 0.1176, 0.0902, 0.0549],
         [0.0706, 0.0588, 0.0549,  ..., 0.1255, 0.1216, 0.0706],
         [0.0745, 0.0627, 0.0510,  ..., 0.0980, 0.1137, 0.0863]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[106.,  89., 420., 288.]], device='cuda:1'), 'labels': tensor([15], device='cuda:1'), 'image_id': tensor([17282], device='cuda:1'), 'area': tensor([62486.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[ 80.,  41., 118.,  87.],
        [203.,   1., 276., 112.],
        [ 22., 226., 168., 492.],
        [207., 217., 346., 439.],
        [ 72., 232., 322., 498.]], device='cuda:1'), 'labels': tensor([28, 28, 23, 23, 22], device='cuda:1'), 'image_id': tensor([15151], device='cuda:1'), 'area': tensor([ 1748.,  8103., 38836., 30858., 66500.], device='cuda:1'), 'iscrowd': tensor([0, 0, 0, 0, 0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(1.6063, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.2096, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.3829, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0216, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:2.2202794551849365
[GPU:1] Losses reduced:1.471348524093628
[GPU:1] Loss value:1.471348524093628
[GPU:1] Images:[tensor([[[0.3529, 0.3569, 0.3569,  ..., 0.3608, 0.3569, 0.3569],
         [0.3608, 0.3647, 0.3647,  ..., 0.3490, 0.3490, 0.3490],
         [0.3569, 0.3569, 0.3569,  ..., 0.3529, 0.3569, 0.3569],
         ...,
         [0.3961, 0.3882, 0.3882,  ..., 0.4078, 0.4196, 0.3961],
         [0.4078, 0.4078, 0.4000,  ..., 0.4078, 0.4157, 0.3961],
         [0.4196, 0.4118, 0.4118,  ..., 0.4078, 0.4118, 0.3961]],

        [[0.5451, 0.5490, 0.5490,  ..., 0.5294, 0.5255, 0.5255],
         [0.5529, 0.5569, 0.5569,  ..., 0.5412, 0.5412, 0.5412],
         [0.5490, 0.5490, 0.5490,  ..., 0.5412, 0.5451, 0.5451],
         ...,
         [0.6039, 0.6039, 0.6039,  ..., 0.5922, 0.5922, 0.5961],
         [0.6000, 0.6000, 0.6000,  ..., 0.5922, 0.5882, 0.5961],
         [0.5922, 0.5961, 0.5961,  ..., 0.5922, 0.5843, 0.6000]],

        [[0.7059, 0.7098, 0.7098,  ..., 0.6980, 0.6941, 0.7020],
         [0.7216, 0.7255, 0.7255,  ..., 0.6980, 0.6980, 0.6980],
         [0.7176, 0.7176, 0.7176,  ..., 0.6902, 0.6941, 0.6941],
         ...,
         [0.7608, 0.7569, 0.7569,  ..., 0.7647, 0.7686, 0.7647],
         [0.7686, 0.7686, 0.7686,  ..., 0.7647, 0.7647, 0.7647],
         [0.7686, 0.7686, 0.7686,  ..., 0.7647, 0.7608, 0.7569]]],
       device='cuda:1'), tensor([[[0.4471, 0.4392, 0.5765,  ..., 0.6431, 0.6431, 0.7137],
         [0.4745, 0.6039, 0.4745,  ..., 0.7176, 0.7412, 0.7490],
         [0.6353, 0.5137, 0.4745,  ..., 0.7020, 0.7216, 0.6902],
         ...,
         [0.7490, 0.6431, 0.5451,  ..., 0.6431, 0.6588, 0.6510],
         [0.6431, 0.6510, 0.5216,  ..., 0.6510, 0.6824, 0.6784],
         [0.5490, 0.8000, 0.6510,  ..., 0.6706, 0.6706, 0.6863]],

        [[0.4745, 0.4549, 0.5647,  ..., 0.6745, 0.6627, 0.7176],
         [0.4549, 0.5647, 0.4314,  ..., 0.7255, 0.7412, 0.7412],
         [0.5882, 0.4667, 0.4471,  ..., 0.6941, 0.7176, 0.6863],
         ...,
         [0.7529, 0.6431, 0.5490,  ..., 0.6627, 0.6863, 0.7059],
         [0.6471, 0.6549, 0.5137,  ..., 0.6392, 0.6745, 0.6980],
         [0.5608, 0.8039, 0.6392,  ..., 0.6118, 0.6471, 0.6941]],

        [[0.3451, 0.3098, 0.5922,  ..., 0.6824, 0.6745, 0.8000],
         [0.3804, 0.5961, 0.4980,  ..., 0.7725, 0.7804, 0.7961],
         [0.6039, 0.5059, 0.4235,  ..., 0.7451, 0.7490, 0.6784],
         ...,
         [0.7725, 0.6824, 0.6196,  ..., 0.6784, 0.7255, 0.7176],
         [0.6235, 0.6745, 0.6000,  ..., 0.6667, 0.7176, 0.7725],
         [0.4941, 0.8235, 0.7451,  ..., 0.7020, 0.7020, 0.7529]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[ 60., 101., 267., 258.]], device='cuda:1'), 'labels': tensor([1], device='cuda:1'), 'image_id': tensor([5650], device='cuda:1'), 'area': tensor([32499.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[  4.,  70., 489., 258.]], device='cuda:1'), 'labels': tensor([32], device='cuda:1'), 'image_id': tensor([21917], device='cuda:1'), 'area': tensor([91180.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(0.1489, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.1691, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.1302, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0544, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:0.502625048160553
[GPU:1] Losses reduced:0.567929208278656
[GPU:1] Loss value:0.567929208278656
[GPU:1] Images:[tensor([[[0.1725, 0.1725, 0.1725,  ..., 0.4275, 0.4196, 0.4118],
         [0.1647, 0.1647, 0.1647,  ..., 0.4196, 0.4118, 0.4078],
         [0.1529, 0.1529, 0.1529,  ..., 0.4157, 0.4078, 0.4000],
         ...,
         [0.3294, 0.3529, 0.3569,  ..., 0.0353, 0.0392, 0.0353],
         [0.2902, 0.3333, 0.3647,  ..., 0.0431, 0.0431, 0.0392],
         [0.2275, 0.2745, 0.3294,  ..., 0.0471, 0.0392, 0.0353]],

        [[0.0510, 0.0510, 0.0510,  ..., 0.2941, 0.2863, 0.2784],
         [0.0510, 0.0510, 0.0510,  ..., 0.2863, 0.2784, 0.2745],
         [0.0549, 0.0549, 0.0549,  ..., 0.2824, 0.2745, 0.2667],
         ...,
         [0.2353, 0.2588, 0.2627,  ..., 0.0235, 0.0275, 0.0235],
         [0.1529, 0.1961, 0.2275,  ..., 0.0196, 0.0196, 0.0157],
         [0.0902, 0.1373, 0.1922,  ..., 0.0235, 0.0157, 0.0118]],

        [[0.0392, 0.0392, 0.0392,  ..., 0.2902, 0.2824, 0.2745],
         [0.0353, 0.0353, 0.0353,  ..., 0.2824, 0.2745, 0.2706],
         [0.0353, 0.0353, 0.0353,  ..., 0.2784, 0.2706, 0.2627],
         ...,
         [0.1882, 0.2118, 0.2157,  ..., 0.0588, 0.0627, 0.0588],
         [0.1294, 0.1725, 0.2039,  ..., 0.0588, 0.0588, 0.0549],
         [0.0745, 0.1216, 0.1765,  ..., 0.0627, 0.0549, 0.0510]]],
       device='cuda:1'), tensor([[[0.4706, 0.4549, 0.4510,  ..., 0.4706, 0.4588, 0.4588],
         [0.4588, 0.4667, 0.4667,  ..., 0.4706, 0.4588, 0.4588],
         [0.4510, 0.4667, 0.4745,  ..., 0.4667, 0.4627, 0.4549],
         ...,
         [0.2706, 0.2667, 0.2627,  ..., 0.2549, 0.2941, 0.2902],
         [0.2784, 0.2706, 0.2784,  ..., 0.2863, 0.4902, 0.5020],
         [0.2941, 0.2784, 0.2902,  ..., 0.1843, 0.2980, 0.5020]],

        [[0.3725, 0.3569, 0.3451,  ..., 0.3647, 0.3529, 0.3412],
         [0.3725, 0.3686, 0.3608,  ..., 0.3647, 0.3529, 0.3412],
         [0.3647, 0.3686, 0.3765,  ..., 0.3608, 0.3451, 0.3373],
         ...,
         [0.1686, 0.1647, 0.1608,  ..., 0.1765, 0.2078, 0.2000],
         [0.1765, 0.1686, 0.1765,  ..., 0.2196, 0.4196, 0.4235],
         [0.1882, 0.1765, 0.1882,  ..., 0.0902, 0.1961, 0.3961]],

        [[0.2863, 0.2706, 0.2627,  ..., 0.2510, 0.2392, 0.2314],
         [0.2824, 0.2824, 0.2784,  ..., 0.2510, 0.2392, 0.2314],
         [0.2745, 0.2824, 0.2902,  ..., 0.2471, 0.2353, 0.2275],
         ...,
         [0.1098, 0.1059, 0.1020,  ..., 0.1412, 0.1569, 0.1373],
         [0.1255, 0.1176, 0.1176,  ..., 0.1412, 0.3333, 0.3294],
         [0.1451, 0.1255, 0.1294,  ..., 0.0510, 0.1373, 0.3216]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[  1.,   1., 499., 374.]], device='cuda:1'), 'labels': tensor([11], device='cuda:1'), 'image_id': tensor([26250], device='cuda:1'), 'area': tensor([185754.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[ 70.,  98., 277., 310.]], device='cuda:1'), 'labels': tensor([1], device='cuda:1'), 'image_id': tensor([24409], device='cuda:1'), 'area': tensor([43884.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(4.5121, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.1889, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.1148, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0726, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:4.888307571411133
[GPU:1] Losses reduced:4.887511730194092
[GPU:1] Loss value:4.887511730194092
[GPU:1] Images:[tensor([[[0.5373, 0.3725, 0.3216,  ..., 0.7451, 0.7765, 0.7412],
         [0.5176, 0.5843, 0.3922,  ..., 0.7608, 0.6667, 0.5608],
         [0.4667, 0.5451, 0.6196,  ..., 0.6588, 0.5451, 0.3569],
         ...,
         [0.7216, 0.7020, 0.6706,  ..., 0.5176, 0.5137, 0.5137],
         [0.7294, 0.7137, 0.6784,  ..., 0.5216, 0.5176, 0.5176],
         [0.7373, 0.7294, 0.6902,  ..., 0.5255, 0.5216, 0.5216]],

        [[0.5765, 0.4196, 0.3804,  ..., 0.7882, 0.8275, 0.8078],
         [0.5569, 0.6235, 0.4392,  ..., 0.8039, 0.7255, 0.6275],
         [0.4706, 0.5569, 0.6235,  ..., 0.7020, 0.5922, 0.3961],
         ...,
         [0.7333, 0.7098, 0.6745,  ..., 0.6902, 0.6863, 0.6863],
         [0.7451, 0.7255, 0.6863,  ..., 0.6941, 0.6902, 0.6902],
         [0.7451, 0.7333, 0.6941,  ..., 0.6980, 0.6941, 0.6941]],

        [[0.1255, 0.0275, 0.0078,  ..., 0.3765, 0.4039, 0.3686],
         [0.0275, 0.1412, 0.0157,  ..., 0.3922, 0.3137, 0.2275],
         [0.0000, 0.0118, 0.1216,  ..., 0.3412, 0.2706, 0.1176],
         ...,
         [0.0471, 0.0392, 0.0353,  ..., 0.8275, 0.8235, 0.8235],
         [0.0588, 0.0627, 0.0549,  ..., 0.8314, 0.8275, 0.8275],
         [0.0745, 0.0902, 0.0902,  ..., 0.8353, 0.8314, 0.8314]]],
       device='cuda:1'), tensor([[[1., 1., 1.,  ..., 1., 1., 1.],
         [1., 1., 1.,  ..., 1., 1., 1.],
         [1., 1., 1.,  ..., 1., 1., 1.],
         ...,
         [1., 1., 1.,  ..., 1., 1., 1.],
         [1., 1., 1.,  ..., 1., 1., 1.],
         [1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.],
         [1., 1., 1.,  ..., 1., 1., 1.],
         [1., 1., 1.,  ..., 1., 1., 1.],
         ...,
         [1., 1., 1.,  ..., 1., 1., 1.],
         [1., 1., 1.,  ..., 1., 1., 1.],
         [1., 1., 1.,  ..., 1., 1., 1.]],

        [[1., 1., 1.,  ..., 1., 1., 1.],
         [1., 1., 1.,  ..., 1., 1., 1.],
         [1., 1., 1.,  ..., 1., 1., 1.],
         ...,
         [1., 1., 1.,  ..., 1., 1., 1.],
         [1., 1., 1.,  ..., 1., 1., 1.],
         [1., 1., 1.,  ..., 1., 1., 1.]]], device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[184., 115., 259., 336.]], device='cuda:1'), 'labels': tensor([1], device='cuda:1'), 'image_id': tensor([12291], device='cuda:1'), 'area': tensor([16575.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[ 90., 117., 328., 350.]], device='cuda:1'), 'labels': tensor([1], device='cuda:1'), 'image_id': tensor([16574], device='cuda:1'), 'area': tensor([55454.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(0.2042, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0759, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.2931, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0044, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:0.5776087045669556
[GPU:1] Losses reduced:0.6107518672943115
[GPU:1] Loss value:0.6107518672943115
[GPU:1] Images:[tensor([[[0.2235, 0.2235, 0.2235,  ..., 0.2392, 0.2196, 0.1922],
         [0.2431, 0.2510, 0.2627,  ..., 0.2588, 0.2431, 0.2118],
         [0.2118, 0.2196, 0.2392,  ..., 0.2784, 0.2627, 0.2353],
         ...,
         [0.2863, 0.2941, 0.3059,  ..., 0.2706, 0.2588, 0.2471],
         [0.2745, 0.2824, 0.2902,  ..., 0.2667, 0.2627, 0.2510],
         [0.2706, 0.2745, 0.2784,  ..., 0.2510, 0.2431, 0.2314]],

        [[0.1725, 0.1725, 0.1725,  ..., 0.2000, 0.1804, 0.1529],
         [0.1922, 0.2000, 0.2118,  ..., 0.2196, 0.2039, 0.1725],
         [0.1608, 0.1686, 0.1843,  ..., 0.2392, 0.2235, 0.1961],
         ...,
         [0.2392, 0.2471, 0.2588,  ..., 0.2196, 0.2196, 0.2078],
         [0.2275, 0.2353, 0.2431,  ..., 0.2275, 0.2235, 0.2118],
         [0.2196, 0.2235, 0.2314,  ..., 0.2118, 0.2039, 0.1922]],

        [[0.1373, 0.1373, 0.1373,  ..., 0.1647, 0.1451, 0.1176],
         [0.1569, 0.1647, 0.1765,  ..., 0.1843, 0.1686, 0.1373],
         [0.1255, 0.1333, 0.1490,  ..., 0.2039, 0.1882, 0.1608],
         ...,
         [0.1922, 0.2000, 0.2118,  ..., 0.1843, 0.1804, 0.1686],
         [0.1804, 0.1882, 0.1961,  ..., 0.1882, 0.1843, 0.1725],
         [0.1843, 0.1882, 0.1843,  ..., 0.1725, 0.1647, 0.1529]]],
       device='cuda:1'), tensor([[[0.3490, 0.3490, 0.3490,  ..., 0.3490, 0.3490, 0.3490],
         [0.3490, 0.3490, 0.3490,  ..., 0.3490, 0.3490, 0.3490],
         [0.3490, 0.3490, 0.3490,  ..., 0.3490, 0.3490, 0.3490],
         ...,
         [0.3490, 0.3490, 0.3490,  ..., 0.3490, 0.3490, 0.3490],
         [0.3490, 0.3490, 0.3490,  ..., 0.3490, 0.3490, 0.3490],
         [0.3490, 0.3490, 0.3490,  ..., 0.3490, 0.3490, 0.3490]],

        [[0.2627, 0.2627, 0.2627,  ..., 0.2627, 0.2627, 0.2627],
         [0.2627, 0.2627, 0.2627,  ..., 0.2627, 0.2627, 0.2627],
         [0.2627, 0.2627, 0.2627,  ..., 0.2627, 0.2627, 0.2627],
         ...,
         [0.2627, 0.2627, 0.2627,  ..., 0.2627, 0.2627, 0.2627],
         [0.2627, 0.2627, 0.2627,  ..., 0.2627, 0.2627, 0.2627],
         [0.2627, 0.2627, 0.2627,  ..., 0.2627, 0.2627, 0.2627]],

        [[0.1098, 0.1098, 0.1098,  ..., 0.1098, 0.1098, 0.1098],
         [0.1098, 0.1098, 0.1098,  ..., 0.1098, 0.1098, 0.1098],
         [0.1098, 0.1098, 0.1098,  ..., 0.1098, 0.1098, 0.1098],
         ...,
         [0.1098, 0.1098, 0.1098,  ..., 0.1020, 0.1098, 0.1098],
         [0.1098, 0.1098, 0.1098,  ..., 0.1020, 0.1098, 0.1098],
         [0.1098, 0.1098, 0.1098,  ..., 0.1020, 0.1098, 0.1098]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[  2.,   0., 499., 332.]], device='cuda:1'), 'labels': tensor([65], device='cuda:1'), 'image_id': tensor([6167], device='cuda:1'), 'area': tensor([165004.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[  4.,   4., 271., 394.]], device='cuda:1'), 'labels': tensor([74], device='cuda:1'), 'image_id': tensor([27453], device='cuda:1'), 'area': tensor([104130.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(0.1787, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0039, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.3598, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.2052, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:0.7476205825805664
[GPU:1] Losses reduced:1.3450931310653687
[GPU:1] Loss value:1.3450931310653687
[GPU:1] Images:[tensor([[[0.0000, 0.1961, 0.2157,  ..., 0.0824, 0.0745, 0.0039],
         [0.0275, 0.7529, 0.8353,  ..., 0.3451, 0.2667, 0.0039],
         [0.0157, 0.6235, 0.6941,  ..., 0.3294, 0.2353, 0.0039],
         ...,
         [0.0235, 0.4157, 0.4902,  ..., 0.4627, 0.5216, 0.0118],
         [0.0392, 0.4275, 0.5373,  ..., 0.5804, 0.6000, 0.0471],
         [0.0000, 0.1529, 0.1647,  ..., 0.1843, 0.1922, 0.0000]],

        [[0.0039, 0.2000, 0.2471,  ..., 0.0941, 0.0902, 0.0000],
         [0.0392, 0.7765, 0.8745,  ..., 0.3647, 0.2902, 0.0078],
         [0.0353, 0.6510, 0.7451,  ..., 0.3569, 0.2588, 0.0000],
         ...,
         [0.0000, 0.3216, 0.3686,  ..., 0.3373, 0.4000, 0.0039],
         [0.0196, 0.3529, 0.4314,  ..., 0.4549, 0.4784, 0.0157],
         [0.0000, 0.0980, 0.0941,  ..., 0.1176, 0.1294, 0.0039]],

        [[0.0000, 0.2706, 0.2980,  ..., 0.0196, 0.0000, 0.0314],
         [0.0118, 0.8314, 0.9216,  ..., 0.2392, 0.1490, 0.0000],
         [0.0118, 0.7255, 0.8118,  ..., 0.2353, 0.1176, 0.0000],
         ...,
         [0.0000, 0.2196, 0.2549,  ..., 0.2471, 0.2784, 0.0157],
         [0.0000, 0.2353, 0.3137,  ..., 0.3020, 0.2980, 0.0000],
         [0.0431, 0.0549, 0.0549,  ..., 0.0863, 0.0667, 0.0627]]],
       device='cuda:1'), tensor([[[0.9216, 0.9569, 0.9765,  ..., 0.8706, 0.8667, 0.8510],
         [0.9490, 0.9569, 0.9412,  ..., 0.8824, 0.8667, 0.8431],
         [0.9451, 0.9216, 0.9059,  ..., 0.8863, 0.8706, 0.8471],
         ...,
         [0.9882, 0.9882, 0.9882,  ..., 0.9882, 0.9882, 0.9882],
         [0.9882, 0.9882, 0.9882,  ..., 0.9882, 0.9882, 0.9882],
         [0.9843, 0.9843, 0.9843,  ..., 0.9882, 0.9882, 0.9882]],

        [[0.8941, 0.9333, 0.9451,  ..., 0.8667, 0.8549, 0.8314],
         [0.9373, 0.9490, 0.9255,  ..., 0.8784, 0.8510, 0.8235],
         [0.9373, 0.9137, 0.8980,  ..., 0.8863, 0.8667, 0.8314],
         ...,
         [0.9961, 0.9961, 0.9961,  ..., 0.9961, 0.9961, 0.9961],
         [0.9961, 0.9961, 0.9961,  ..., 0.9961, 0.9961, 0.9961],
         [0.9922, 0.9922, 0.9922,  ..., 0.9961, 0.9961, 0.9961]],

        [[0.8549, 0.8863, 0.8941,  ..., 0.8510, 0.8353, 0.8157],
         [0.9020, 0.9020, 0.8784,  ..., 0.8627, 0.8392, 0.8118],
         [0.8863, 0.8627, 0.8471,  ..., 0.8784, 0.8588, 0.8275],
         ...,
         [0.9922, 0.9922, 0.9922,  ..., 0.9922, 0.9922, 0.9922],
         [0.9922, 0.9922, 0.9922,  ..., 0.9922, 0.9922, 0.9922],
         [0.9882, 0.9882, 0.9882,  ..., 0.9922, 0.9922, 0.9922]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[102.,   7., 182., 113.]], device='cuda:1'), 'labels': tensor([24], device='cuda:1'), 'image_id': tensor([12032], device='cuda:1'), 'area': tensor([8480.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[  1.,   0., 500., 374.]], device='cuda:1'), 'labels': tensor([4], device='cuda:1'), 'image_id': tensor([15313], device='cuda:1'), 'area': tensor([186626.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(0.3001, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0617, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.1027, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0874, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:0.5519318580627441
[GPU:1] Losses reduced:0.6417111158370972
[GPU:1] Loss value:0.6417111158370972
[GPU:1] Images:[tensor([[[0.6824, 0.7216, 0.8745,  ..., 1.0000, 0.9922, 0.9961],
         [0.7020, 0.7137, 0.7608,  ..., 0.9843, 0.9804, 1.0000],
         [0.6706, 0.6078, 0.6667,  ..., 0.9882, 0.9804, 0.9804],
         ...,
         [0.9804, 0.9059, 0.5490,  ..., 0.5725, 0.5804, 0.5843],
         [1.0000, 0.8392, 0.5333,  ..., 0.5804, 0.5882, 0.5961],
         [0.9216, 0.6588, 0.4980,  ..., 0.5843, 0.5922, 0.6157]],

        [[0.6235, 0.6941, 0.8588,  ..., 0.8157, 0.8549, 0.8706],
         [0.7059, 0.6902, 0.6863,  ..., 0.7804, 0.8588, 0.9098],
         [0.6078, 0.5804, 0.6275,  ..., 0.8196, 0.8980, 0.9373],
         ...,
         [0.9922, 0.7059, 0.3294,  ..., 0.4353, 0.4314, 0.4314],
         [0.9922, 0.5765, 0.3529,  ..., 0.4392, 0.4275, 0.4353],
         [0.7608, 0.4118, 0.4118,  ..., 0.4431, 0.4314, 0.4431]],

        [[0.2980, 0.2471, 0.3765,  ..., 0.5059, 0.4863, 0.4667],
         [0.3412, 0.3137, 0.2863,  ..., 0.4549, 0.5020, 0.5451],
         [0.2667, 0.2353, 0.2471,  ..., 0.4588, 0.5333, 0.5882],
         ...,
         [0.7843, 0.4902, 0.1294,  ..., 0.2863, 0.2784, 0.2784],
         [0.9412, 0.4627, 0.1569,  ..., 0.3059, 0.3020, 0.3176],
         [0.5020, 0.2118, 0.1843,  ..., 0.3176, 0.3216, 0.3373]]],
       device='cuda:1'), tensor([[[0.6078, 0.6118, 0.6157,  ..., 0.6039, 0.6000, 0.6039],
         [0.6118, 0.6196, 0.6196,  ..., 0.6118, 0.6118, 0.6078],
         [0.6078, 0.6078, 0.6078,  ..., 0.6157, 0.6235, 0.6118],
         ...,
         [0.4941, 0.4863, 0.5176,  ..., 0.5804, 0.5725, 0.5490],
         [0.5373, 0.5098, 0.4980,  ..., 0.5216, 0.5333, 0.5373],
         [0.5333, 0.5098, 0.5137,  ..., 0.5529, 0.5608, 0.5490]],

        [[0.6196, 0.6235, 0.6275,  ..., 0.6275, 0.6235, 0.6275],
         [0.6235, 0.6314, 0.6314,  ..., 0.6235, 0.6235, 0.6196],
         [0.6196, 0.6196, 0.6196,  ..., 0.6235, 0.6314, 0.6196],
         ...,
         [0.5294, 0.5216, 0.5451,  ..., 0.6078, 0.6000, 0.5843],
         [0.5882, 0.5529, 0.5412,  ..., 0.5608, 0.5608, 0.5529],
         [0.5686, 0.5451, 0.5490,  ..., 0.5804, 0.5843, 0.5725]],

        [[0.6784, 0.6824, 0.6863,  ..., 0.6824, 0.6784, 0.6824],
         [0.6824, 0.6902, 0.6902,  ..., 0.6824, 0.6824, 0.6784],
         [0.6784, 0.6784, 0.6784,  ..., 0.6824, 0.6902, 0.6784],
         ...,
         [0.5569, 0.5490, 0.5843,  ..., 0.6471, 0.6392, 0.6196],
         [0.6118, 0.5765, 0.5569,  ..., 0.5961, 0.6000, 0.5961],
         [0.5961, 0.5725, 0.5765,  ..., 0.6196, 0.6314, 0.6275]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[ 77.,   0., 500., 357.]], device='cuda:1'), 'labels': tensor([4], device='cuda:1'), 'image_id': tensor([21226], device='cuda:1'), 'area': tensor([151011.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[206., 101., 304., 207.]], device='cuda:1'), 'labels': tensor([69], device='cuda:1'), 'image_id': tensor([23466], device='cuda:1'), 'area': tensor([10388.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(0.3631, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0591, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.0606, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0345, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:0.5172818899154663
[GPU:1] Losses reduced:0.4756322503089905
[GPU:1] Loss value:0.4756322503089905
[GPU:1] Images:[tensor([[[0.1882, 0.1882, 0.1843,  ..., 0.2314, 0.2314, 0.2275],
         [0.1922, 0.1922, 0.1843,  ..., 0.2392, 0.2392, 0.2353],
         [0.1843, 0.1882, 0.1843,  ..., 0.2510, 0.2471, 0.2471],
         ...,
         [0.3373, 0.3412, 0.3333,  ..., 0.0314, 0.0314, 0.0353],
         [0.3451, 0.3451, 0.3373,  ..., 0.0196, 0.0235, 0.0275],
         [0.3490, 0.3490, 0.3451,  ..., 0.0196, 0.0235, 0.0275]],

        [[0.1176, 0.1176, 0.1216,  ..., 0.3294, 0.3294, 0.3255],
         [0.1216, 0.1294, 0.1216,  ..., 0.3294, 0.3294, 0.3255],
         [0.1216, 0.1255, 0.1216,  ..., 0.3216, 0.3255, 0.3255],
         ...,
         [0.3373, 0.3412, 0.3412,  ..., 0.0392, 0.0392, 0.0431],
         [0.3451, 0.3451, 0.3451,  ..., 0.0353, 0.0392, 0.0431],
         [0.3490, 0.3490, 0.3529,  ..., 0.0353, 0.0392, 0.0431]],

        [[0.0706, 0.0706, 0.0706,  ..., 0.3569, 0.3569, 0.3529],
         [0.0745, 0.0784, 0.0706,  ..., 0.3608, 0.3608, 0.3569],
         [0.0706, 0.0745, 0.0706,  ..., 0.3608, 0.3608, 0.3608],
         ...,
         [0.3373, 0.3412, 0.3373,  ..., 0.0353, 0.0353, 0.0392],
         [0.3451, 0.3451, 0.3412,  ..., 0.0314, 0.0353, 0.0392],
         [0.3490, 0.3490, 0.3490,  ..., 0.0314, 0.0353, 0.0392]]],
       device='cuda:1'), tensor([[[0.9961, 0.9961, 0.9961,  ..., 0.9922, 0.9961, 0.9961],
         [1.0000, 1.0000, 0.9922,  ..., 0.9961, 0.9961, 0.9961],
         [0.9922, 0.9922, 0.9961,  ..., 1.0000, 0.9961, 0.9961],
         ...,
         [1.0000, 0.9882, 1.0000,  ..., 0.9843, 0.9961, 1.0000],
         [0.9961, 0.9961, 0.9961,  ..., 0.9961, 0.9961, 0.9961],
         [0.9961, 0.9961, 0.9961,  ..., 0.9961, 0.9961, 0.9961]],

        [[0.9961, 0.9961, 0.9961,  ..., 0.9922, 0.9961, 0.9961],
         [1.0000, 1.0000, 0.9922,  ..., 0.9961, 0.9961, 0.9961],
         [0.9922, 0.9922, 0.9961,  ..., 1.0000, 0.9961, 0.9961],
         ...,
         [1.0000, 0.9882, 1.0000,  ..., 0.9843, 0.9961, 1.0000],
         [0.9961, 0.9961, 0.9961,  ..., 0.9961, 0.9961, 0.9961],
         [0.9961, 0.9961, 0.9961,  ..., 0.9961, 0.9961, 0.9961]],

        [[0.9961, 0.9961, 0.9961,  ..., 0.9922, 0.9961, 0.9961],
         [1.0000, 1.0000, 0.9922,  ..., 0.9961, 0.9961, 0.9961],
         [0.9922, 0.9922, 0.9961,  ..., 1.0000, 0.9961, 0.9961],
         ...,
         [0.9922, 0.9804, 0.9922,  ..., 0.9843, 0.9961, 1.0000],
         [0.9882, 0.9882, 0.9882,  ..., 0.9961, 0.9961, 0.9961],
         [0.9882, 0.9882, 0.9882,  ..., 0.9961, 0.9961, 0.9961]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[ 44., 209., 166., 304.]], device='cuda:1'), 'labels': tensor([62], device='cuda:1'), 'image_id': tensor([21705], device='cuda:1'), 'area': tensor([11590.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[  8.,  17.,  95., 100.]], device='cuda:1'), 'labels': tensor([4], device='cuda:1'), 'image_id': tensor([3467], device='cuda:1'), 'area': tensor([7221.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(4.3157, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0877, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.0295, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0036, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:4.436445713043213
[GPU:1] Losses reduced:4.807239055633545
[GPU:1] Loss value:4.807239055633545
[GPU:1] Images:[tensor([[[0.5961, 0.5843, 0.5765,  ..., 0.7686, 0.7647, 0.7647],
         [0.5961, 0.5882, 0.5804,  ..., 0.7647, 0.7686, 0.7725],
         [0.5961, 0.5882, 0.5922,  ..., 0.7451, 0.7490, 0.7529],
         ...,
         [0.3333, 0.3529, 0.3804,  ..., 0.4510, 0.4118, 0.3882],
         [0.3333, 0.3412, 0.3686,  ..., 0.4039, 0.4235, 0.4549],
         [0.3412, 0.3451, 0.3608,  ..., 0.4235, 0.4157, 0.4275]],

        [[0.6588, 0.6471, 0.6392,  ..., 0.8275, 0.8235, 0.8235],
         [0.6588, 0.6510, 0.6471,  ..., 0.8392, 0.8431, 0.8471],
         [0.6549, 0.6549, 0.6588,  ..., 0.8275, 0.8314, 0.8353],
         ...,
         [0.3647, 0.3804, 0.4157,  ..., 0.4863, 0.4471, 0.4235],
         [0.3569, 0.3686, 0.3922,  ..., 0.4392, 0.4588, 0.4902],
         [0.3529, 0.3608, 0.3843,  ..., 0.4588, 0.4510, 0.4627]],

        [[0.7176, 0.7059, 0.6980,  ..., 0.9098, 0.9059, 0.9059],
         [0.7216, 0.7137, 0.7098,  ..., 0.9059, 0.9098, 0.9137],
         [0.7294, 0.7255, 0.7294,  ..., 0.8941, 0.8980, 0.9020],
         ...,
         [0.4157, 0.4118, 0.4039,  ..., 0.5059, 0.4667, 0.4431],
         [0.4118, 0.4000, 0.3843,  ..., 0.4588, 0.4784, 0.5098],
         [0.4118, 0.3961, 0.3765,  ..., 0.4784, 0.4706, 0.4824]]],
       device='cuda:1'), tensor([[[0.6314, 0.6314, 0.6314,  ..., 0.6118, 0.6078, 0.6039],
         [0.6235, 0.6275, 0.6275,  ..., 0.5961, 0.6078, 0.6039],
         [0.6275, 0.6275, 0.6314,  ..., 0.6000, 0.6157, 0.6118],
         ...,
         [0.6627, 0.6588, 0.6549,  ..., 0.6157, 0.6157, 0.6157],
         [0.6627, 0.6588, 0.6549,  ..., 0.6235, 0.6157, 0.6118],
         [0.6706, 0.6706, 0.6627,  ..., 0.6275, 0.6196, 0.6078]],

        [[0.6314, 0.6314, 0.6314,  ..., 0.6118, 0.6078, 0.6039],
         [0.6235, 0.6275, 0.6275,  ..., 0.5961, 0.6078, 0.6039],
         [0.6275, 0.6275, 0.6314,  ..., 0.5961, 0.6157, 0.6118],
         ...,
         [0.6627, 0.6588, 0.6549,  ..., 0.6118, 0.6118, 0.6118],
         [0.6627, 0.6588, 0.6549,  ..., 0.6235, 0.6157, 0.6118],
         [0.6706, 0.6706, 0.6627,  ..., 0.6275, 0.6196, 0.6078]],

        [[0.6314, 0.6314, 0.6314,  ..., 0.6118, 0.6078, 0.5961],
         [0.6235, 0.6275, 0.6275,  ..., 0.5961, 0.6000, 0.5961],
         [0.6275, 0.6275, 0.6314,  ..., 0.5882, 0.6078, 0.6039],
         ...,
         [0.6627, 0.6588, 0.6549,  ..., 0.6039, 0.6039, 0.6039],
         [0.6627, 0.6588, 0.6549,  ..., 0.6157, 0.6078, 0.6039],
         [0.6706, 0.6706, 0.6627,  ..., 0.6196, 0.6118, 0.6000]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[178.,  74., 385., 374.]], device='cuda:1'), 'labels': tensor([4], device='cuda:1'), 'image_id': tensor([26756], device='cuda:1'), 'area': tensor([62100.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[ 43.,  94., 381., 282.]], device='cuda:1'), 'labels': tensor([1], device='cuda:1'), 'image_id': tensor([12819], device='cuda:1'), 'area': tensor([63544.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(16250.8115, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(243.8779, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.0301, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0044, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:16494.72265625
[GPU:1] Losses reduced:11360.7509765625
[GPU:1] Loss value:11360.7509765625
[GPU:1] Images:[tensor([[[0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         ...,
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020]],

        [[0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         ...,
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020]],

        [[0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         ...,
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020],
         [0.1020, 0.1020, 0.1020,  ..., 0.1020, 0.1020, 0.1020]]],
       device='cuda:1'), tensor([[[0.5843, 0.5804, 0.5490,  ..., 0.1725, 0.1647, 0.1529],
         [0.6588, 0.6627, 0.6549,  ..., 0.1569, 0.1569, 0.1529],
         [0.4902, 0.4941, 0.4784,  ..., 0.1333, 0.1294, 0.1333],
         ...,
         [0.4549, 0.4549, 0.4549,  ..., 0.4392, 0.4392, 0.4431],
         [0.4588, 0.4588, 0.4667,  ..., 0.4157, 0.4157, 0.4196],
         [0.4431, 0.4431, 0.4706,  ..., 0.3765, 0.3765, 0.3765]],

        [[0.6078, 0.6039, 0.6000,  ..., 0.2118, 0.2039, 0.1922],
         [0.6863, 0.6902, 0.7098,  ..., 0.2039, 0.2039, 0.2000],
         [0.5255, 0.5294, 0.5373,  ..., 0.1922, 0.1882, 0.1922],
         ...,
         [0.5020, 0.5020, 0.5020,  ..., 0.4667, 0.4667, 0.4706],
         [0.5098, 0.5098, 0.5137,  ..., 0.4431, 0.4431, 0.4471],
         [0.5137, 0.5137, 0.5176,  ..., 0.4039, 0.4039, 0.4039]],

        [[0.6078, 0.6039, 0.5647,  ..., 0.1137, 0.1059, 0.0941],
         [0.6549, 0.6588, 0.6510,  ..., 0.1176, 0.1176, 0.1137],
         [0.4588, 0.4627, 0.4627,  ..., 0.1176, 0.1137, 0.1176],
         ...,
         [0.4627, 0.4627, 0.4627,  ..., 0.4353, 0.4353, 0.4392],
         [0.4706, 0.4706, 0.4745,  ..., 0.4118, 0.4118, 0.4157],
         [0.4667, 0.4667, 0.4784,  ..., 0.3725, 0.3725, 0.3725]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[ 19.,  71., 453., 328.]], device='cuda:1'), 'labels': tensor([1], device='cuda:1'), 'image_id': tensor([811], device='cuda:1'), 'area': tensor([111538.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[227.,  83., 392., 210.]], device='cuda:1'), 'labels': tensor([63], device='cuda:1'), 'image_id': tensor([11495], device='cuda:1'), 'area': tensor([20955.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(11264984., device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(580613.1250, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(2.6223, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.1527, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:11845600.0
[GPU:1] Losses reduced:12019711.0
[GPU:1] Loss value:12019711.0
[GPU:1] Images:[tensor([[[0.3373, 0.3412, 0.3412,  ..., 0.1412, 0.0902, 0.0588],
         [0.3373, 0.3412, 0.3412,  ..., 0.1294, 0.0902, 0.0706],
         [0.3412, 0.3412, 0.3412,  ..., 0.1216, 0.0902, 0.0824],
         ...,
         [0.2706, 0.2980, 0.2667,  ..., 0.2510, 0.2314, 0.2314],
         [0.2784, 0.2706, 0.2235,  ..., 0.1922, 0.1804, 0.1882],
         [0.2588, 0.2314, 0.1882,  ..., 0.1725, 0.1529, 0.1569]],

        [[0.3020, 0.3059, 0.3059,  ..., 0.1255, 0.0745, 0.0431],
         [0.3020, 0.3059, 0.3059,  ..., 0.1137, 0.0745, 0.0549],
         [0.3059, 0.3059, 0.3059,  ..., 0.1059, 0.0745, 0.0667],
         ...,
         [0.2039, 0.2314, 0.2000,  ..., 0.2000, 0.1804, 0.1804],
         [0.2157, 0.2078, 0.1608,  ..., 0.1412, 0.1294, 0.1373],
         [0.1961, 0.1686, 0.1255,  ..., 0.1176, 0.0980, 0.1020]],

        [[0.2353, 0.2392, 0.2392,  ..., 0.1137, 0.0627, 0.0314],
         [0.2353, 0.2392, 0.2392,  ..., 0.1020, 0.0627, 0.0431],
         [0.2392, 0.2392, 0.2392,  ..., 0.0941, 0.0627, 0.0549],
         ...,
         [0.1647, 0.1922, 0.1608,  ..., 0.1686, 0.1490, 0.1490],
         [0.1647, 0.1569, 0.1098,  ..., 0.1176, 0.1059, 0.1137],
         [0.1373, 0.1098, 0.0667,  ..., 0.1059, 0.0863, 0.0902]]],
       device='cuda:1'), tensor([[[0.6745, 0.6588, 0.6392,  ..., 1.0000, 0.9686, 0.9725],
         [0.6157, 0.5882, 0.6392,  ..., 0.8471, 0.7216, 0.9294],
         [0.5843, 0.6078, 0.6980,  ..., 0.6314, 0.8706, 1.0000],
         ...,
         [0.5961, 0.6235, 0.6118,  ..., 0.0941, 0.1176, 0.1569],
         [0.8118, 0.5608, 0.5490,  ..., 0.1686, 0.1020, 0.0941],
         [0.7765, 0.5843, 0.5922,  ..., 0.2824, 0.2549, 0.1804]],

        [[0.6196, 0.6118, 0.6078,  ..., 0.9569, 0.9216, 0.9451],
         [0.6157, 0.5765, 0.6118,  ..., 0.7804, 0.6667, 0.8784],
         [0.5765, 0.5843, 0.6471,  ..., 0.5608, 0.8196, 0.9843],
         ...,
         [0.5608, 0.5529, 0.4941,  ..., 0.0627, 0.0863, 0.1255],
         [0.7647, 0.5059, 0.4667,  ..., 0.1333, 0.0667, 0.0667],
         [0.7373, 0.5373, 0.5255,  ..., 0.2431, 0.2235, 0.1569]],

        [[0.4745, 0.4549, 0.4275,  ..., 0.8980, 0.8588, 0.8745],
         [0.4196, 0.3765, 0.4078,  ..., 0.7176, 0.6157, 0.8431],
         [0.3529, 0.3569, 0.4314,  ..., 0.5059, 0.7882, 0.9725],
         ...,
         [0.5412, 0.5529, 0.5255,  ..., 0.0549, 0.0784, 0.1137],
         [0.7647, 0.5059, 0.4941,  ..., 0.1137, 0.0392, 0.0275],
         [0.7412, 0.5529, 0.5490,  ..., 0.2078, 0.1804, 0.1098]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[ 96.,  83., 432., 290.]], device='cuda:1'), 'labels': tensor([4], device='cuda:1'), 'image_id': tensor([29368], device='cuda:1'), 'area': tensor([69552.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[128.,  68., 391., 302.]], device='cuda:1'), 'labels': tensor([1], device='cuda:1'), 'image_id': tensor([19374], device='cuda:1'), 'area': tensor([61542.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(4.5584e+22, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(3.5936e+20, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(468.3172, device='cuda:1',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(266.2624, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:4.594293116666483e+22
[GPU:1] Losses reduced:4.557383415560405e+22
[GPU:1] Loss value:4.557383415560405e+22
[GPU:1] Images:[tensor([[[0.1765, 0.1922, 0.1961,  ..., 0.1804, 0.1765, 0.1765],
         [0.1765, 0.1843, 0.1843,  ..., 0.1882, 0.1765, 0.1765],
         [0.1765, 0.1804, 0.1765,  ..., 0.1804, 0.1804, 0.1804],
         ...,
         [0.5333, 0.5647, 0.5882,  ..., 0.4549, 0.4275, 0.3725],
         [0.5922, 0.5333, 0.7333,  ..., 0.4275, 0.3804, 0.3843],
         [0.5059, 0.6235, 0.7373,  ..., 0.3765, 0.4118, 0.4941]],

        [[0.1569, 0.1725, 0.1843,  ..., 0.1686, 0.1647, 0.1647],
         [0.1569, 0.1647, 0.1725,  ..., 0.1765, 0.1647, 0.1647],
         [0.1569, 0.1608, 0.1647,  ..., 0.1608, 0.1686, 0.1686],
         ...,
         [0.5882, 0.6196, 0.6549,  ..., 0.4863, 0.4510, 0.3961],
         [0.6471, 0.5882, 0.8000,  ..., 0.4588, 0.4039, 0.4078],
         [0.5608, 0.6784, 0.8039,  ..., 0.4039, 0.4314, 0.5137]],

        [[0.1451, 0.1608, 0.1647,  ..., 0.1412, 0.1451, 0.1451],
         [0.1451, 0.1529, 0.1529,  ..., 0.1569, 0.1451, 0.1451],
         [0.1451, 0.1490, 0.1451,  ..., 0.1451, 0.1490, 0.1490],
         ...,
         [0.3804, 0.4118, 0.4431,  ..., 0.3333, 0.3098, 0.2549],
         [0.4392, 0.3804, 0.5961,  ..., 0.3137, 0.2706, 0.2745],
         [0.3529, 0.4706, 0.6000,  ..., 0.2706, 0.3059, 0.3882]]],
       device='cuda:1'), tensor([[[0.2431, 0.3686, 0.5490,  ..., 0.8000, 0.6235, 0.8353],
         [0.2353, 0.3059, 0.5647,  ..., 0.8118, 0.7333, 0.8275],
         [0.3098, 0.4431, 0.4667,  ..., 0.8118, 0.7843, 0.7804],
         ...,
         [0.8314, 0.7333, 0.6510,  ..., 0.3922, 0.5333, 0.4627],
         [0.6667, 0.6588, 0.7294,  ..., 0.4118, 0.5490, 0.3373],
         [0.8314, 0.7020, 0.5294,  ..., 0.4588, 0.5725, 0.4275]],

        [[0.4157, 0.5098, 0.6745,  ..., 0.6078, 0.4314, 0.6431],
         [0.3961, 0.4353, 0.6745,  ..., 0.6196, 0.5412, 0.6353],
         [0.4471, 0.5529, 0.5569,  ..., 0.6235, 0.5961, 0.5922],
         ...,
         [0.8039, 0.7059, 0.6235,  ..., 0.2039, 0.3333, 0.2471],
         [0.6353, 0.6314, 0.7098,  ..., 0.2275, 0.3490, 0.1294],
         [0.7725, 0.6510, 0.4941,  ..., 0.2824, 0.3804, 0.2196]],

        [[0.1765, 0.4000, 0.5804,  ..., 0.4471, 0.2706, 0.4824],
         [0.1686, 0.3294, 0.5882,  ..., 0.4627, 0.3843, 0.4784],
         [0.2196, 0.4549, 0.4863,  ..., 0.4667, 0.4392, 0.4353],
         ...,
         [0.7333, 0.6431, 0.5608,  ..., 0.1176, 0.2275, 0.1255],
         [0.5922, 0.5922, 0.6863,  ..., 0.1255, 0.2353, 0.0039],
         [0.6902, 0.5765, 0.4353,  ..., 0.1608, 0.2549, 0.0863]]],
       device='cuda:1')]
[GPU:1] Targets:[{'boxes': tensor([[ 20.,  13., 220., 164.]], device='cuda:1'), 'labels': tensor([4], device='cuda:1'), 'image_id': tensor([9740], device='cuda:1'), 'area': tensor([30200.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}, {'boxes': tensor([[ 71.,  26., 429., 325.]], device='cuda:1'), 'labels': tensor([72], device='cuda:1'), 'image_id': tensor([23488], device='cuda:1'), 'area': tensor([107042.], device='cuda:1'), 'iscrowd': tensor([0], device='cuda:1')}]
[GPU:1] Loss dict:{'loss_classifier': tensor(nan, device='cuda:1', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(nan, device='cuda:1', grad_fn=<DivBackward0>), 'loss_objectness': tensor(nan, device='cuda:1', grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(1.8414e+20, device='cuda:1', grad_fn=<DivBackward0>)}
[GPU:1] Sum of losses:nan
[GPU:1] Losses reduced:nan
[GPU:1] Loss value:nan
[GPU:1] Loss is nan, stopping training
{'loss_box_reg': tensor(nan, device='cuda:1'), 'loss_classifier': tensor(nan, device='cuda:1'), 'loss_objectness': tensor(nan, device='cuda:1'), 'loss_rpn_box_reg': tensor(1.5284e+20, device='cuda:1')}
[GPU:3] Images:[tensor([[[0.2471, 0.1804, 0.1608,  ..., 0.3490, 0.2745, 0.3451],
         [0.2275, 0.1961, 0.2078,  ..., 0.4039, 0.2941, 0.2863],
         [0.2118, 0.1922, 0.2000,  ..., 0.2706, 0.2510, 0.2902],
         ...,
         [0.7216, 0.7176, 0.7216,  ..., 0.7882, 0.7647, 0.6588],
         [0.8118, 0.7686, 0.6314,  ..., 0.7451, 0.7608, 0.7725],
         [0.7765, 0.7098, 0.5569,  ..., 0.8000, 0.8000, 0.7961]],

        [[0.2039, 0.2039, 0.2314,  ..., 0.5333, 0.4275, 0.3647],
         [0.2157, 0.2706, 0.4078,  ..., 0.5137, 0.3804, 0.2824],
         [0.2118, 0.2275, 0.3451,  ..., 0.3098, 0.2353, 0.2941],
         ...,
         [0.7255, 0.7725, 0.7294,  ..., 0.8784, 0.7804, 0.6353],
         [0.7725, 0.7765, 0.6078,  ..., 0.7725, 0.7294, 0.7882],
         [0.7725, 0.7255, 0.5294,  ..., 0.8078, 0.7451, 0.7843]],

        [[0.2706, 0.4314, 0.4275,  ..., 0.3922, 0.4941, 0.4510],
         [0.3294, 0.3294, 0.2784,  ..., 0.4275, 0.3333, 0.2745],
         [0.3059, 0.2235, 0.2745,  ..., 0.3176, 0.2902, 0.2314],
         ...,
         [0.6941, 0.6706, 0.6784,  ..., 0.7686, 0.8157, 0.7373],
         [0.6745, 0.6314, 0.6078,  ..., 0.7412, 0.7216, 0.7333],
         [0.6000, 0.5255, 0.6902,  ..., 0.7961, 0.6941, 0.6471]]],
       device='cuda:3'), tensor([[[0.4980, 0.4902, 0.4941,  ..., 0.1333, 0.1176, 0.1098],
         [0.5059, 0.5059, 0.5098,  ..., 0.1373, 0.1176, 0.1059],
         [0.5255, 0.5255, 0.5255,  ..., 0.1294, 0.1059, 0.0941],
         ...,
         [0.2196, 0.2235, 0.2275,  ..., 0.2353, 0.2235, 0.2275],
         [0.2196, 0.2275, 0.2314,  ..., 0.2431, 0.2431, 0.2471],
         [0.2157, 0.2275, 0.2275,  ..., 0.2588, 0.2588, 0.2588]],

        [[0.9608, 0.9647, 0.9686,  ..., 0.2588, 0.2549, 0.2549],
         [0.9647, 0.9647, 0.9686,  ..., 0.2627, 0.2549, 0.2510],
         [0.9686, 0.9686, 0.9686,  ..., 0.2549, 0.2431, 0.2431],
         ...,
         [0.1725, 0.1765, 0.1804,  ..., 0.3333, 0.3216, 0.3255],
         [0.1725, 0.1804, 0.1843,  ..., 0.3412, 0.3333, 0.3412],
         [0.1686, 0.1804, 0.1922,  ..., 0.3490, 0.3529, 0.3529]],

        [[1.0000, 1.0000, 1.0000,  ..., 0.3569, 0.3333, 0.3176],
         [1.0000, 1.0000, 0.9961,  ..., 0.3608, 0.3294, 0.3137],
         [1.0000, 1.0000, 0.9922,  ..., 0.3451, 0.3176, 0.2941],
         ...,
         [0.1255, 0.1294, 0.1255,  ..., 0.0157, 0.0000, 0.0000],
         [0.1176, 0.1176, 0.1216,  ..., 0.0235, 0.0118, 0.0039],
         [0.1137, 0.1176, 0.1255,  ..., 0.0353, 0.0235, 0.0157]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[ 74.,  27., 499., 228.]], device='cuda:3'), 'labels': tensor([62], device='cuda:3'), 'image_id': tensor([26406], device='cuda:3'), 'area': tensor([85425.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[165., 117., 277., 219.]], device='cuda:3'), 'labels': tensor([67], device='cuda:3'), 'image_id': tensor([17785], device='cuda:3'), 'area': tensor([11424.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(4.6005, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0045, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.6937, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0022, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:5.300935745239258
[GPU:3] Losses reduced:5.325780391693115
[GPU:3] Loss value:5.325780391693115
[GPU:3] Epoch: [0]  [   0/3750]  eta: 8:01:30  loss: 5.3258 (5.3258)  loss_box_reg: 0.0025 (0.0025)  loss_classifier: 4.6025 (4.6025)  loss_objectness: 0.6936 (0.6936)  loss_rpn_box_reg: 0.0272 (0.0272)  time: 7.7042  data: 2.5055  max mem: 4344
[GPU:3] Images:[tensor([[[0.3490, 0.3922, 0.3765,  ..., 0.4314, 0.4353, 0.4353],
         [0.3569, 0.3569, 0.3922,  ..., 0.4471, 0.4549, 0.4157],
         [0.3020, 0.3686, 0.3255,  ..., 0.4157, 0.4314, 0.4196],
         ...,
         [0.9333, 0.9137, 0.9686,  ..., 0.9373, 0.9098, 0.8471],
         [0.8706, 0.9059, 0.9059,  ..., 0.9294, 0.9412, 0.9569],
         [0.8941, 0.9255, 0.9686,  ..., 0.9255, 0.9098, 0.8941]],

        [[0.3765, 0.4235, 0.4078,  ..., 0.4941, 0.4902, 0.4784],
         [0.3882, 0.3882, 0.4235,  ..., 0.4980, 0.4941, 0.4549],
         [0.3333, 0.4000, 0.3569,  ..., 0.4706, 0.4745, 0.4549],
         ...,
         [0.8431, 0.8235, 0.8667,  ..., 0.8471, 0.8275, 0.7608],
         [0.7843, 0.8196, 0.8196,  ..., 0.8392, 0.8510, 0.8667],
         [0.8235, 0.8549, 0.9059,  ..., 0.8353, 0.8078, 0.7922]],

        [[0.3451, 0.3804, 0.3647,  ..., 0.3529, 0.3529, 0.3529],
         [0.3373, 0.3373, 0.3725,  ..., 0.3882, 0.3882, 0.3569],
         [0.2902, 0.3569, 0.3137,  ..., 0.3412, 0.3569, 0.3412],
         ...,
         [0.7882, 0.7686, 0.8157,  ..., 0.7843, 0.7608, 0.7059],
         [0.7333, 0.7686, 0.7686,  ..., 0.7765, 0.7882, 0.8039],
         [0.7686, 0.8000, 0.8471,  ..., 0.7647, 0.7490, 0.7333]]],
       device='cuda:3'), tensor([[[0.5216, 0.4588, 0.1569,  ..., 0.5451, 0.4549, 0.2784],
         [0.6000, 0.4588, 0.3255,  ..., 0.5451, 0.4196, 0.0784],
         [0.5843, 0.5176, 0.4863,  ..., 0.6157, 0.5569, 0.0824],
         ...,
         [0.4784, 0.3922, 0.3961,  ..., 0.2902, 0.2039, 0.1569],
         [0.4275, 0.3686, 0.4196,  ..., 0.3961, 0.2941, 0.1490],
         [0.4157, 0.3961, 0.4471,  ..., 0.4078, 0.3059, 0.1255]],

        [[0.4627, 0.4549, 0.1373,  ..., 0.4784, 0.3059, 0.2314],
         [0.5333, 0.4941, 0.2431,  ..., 0.5216, 0.2314, 0.0667],
         [0.5686, 0.4863, 0.4118,  ..., 0.6118, 0.3647, 0.0000],
         ...,
         [0.4824, 0.3922, 0.4000,  ..., 0.2510, 0.1843, 0.0980],
         [0.4275, 0.3725, 0.4196,  ..., 0.4235, 0.3333, 0.1686],
         [0.4157, 0.3922, 0.4392,  ..., 0.3765, 0.2667, 0.0980]],

        [[0.4824, 0.3725, 0.1529,  ..., 0.4157, 0.3882, 0.1843],
         [0.4941, 0.4118, 0.3098,  ..., 0.4588, 0.4196, 0.1098],
         [0.4706, 0.4431, 0.3961,  ..., 0.5412, 0.4824, 0.0745],
         ...,
         [0.4627, 0.3922, 0.4196,  ..., 0.2824, 0.1725, 0.1098],
         [0.4196, 0.3804, 0.4510,  ..., 0.3961, 0.3020, 0.1804],
         [0.4157, 0.4118, 0.4824,  ..., 0.4196, 0.3608, 0.2196]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[376., 123., 404., 145.],
        [100., 156., 121., 171.],
        [283., 145., 312., 160.],
        [320., 141., 344., 156.],
        [ 41., 206., 198., 339.],
        [297., 190., 353., 355.],
        [357., 186., 435., 361.],
        [ 95., 155., 140., 259.]], device='cuda:3'), 'labels': tensor([ 2, 24, 24, 24, 64, 64, 64,  3], device='cuda:3'), 'image_id': tensor([12427], device='cuda:3'), 'area': tensor([  616.,   315.,   435.,   360., 20881.,  9240., 13650.,  4680.],
       device='cuda:3'), 'iscrowd': tensor([0, 0, 0, 0, 0, 0, 0, 0], device='cuda:3')}, {'boxes': tensor([[ 90.,  63., 414., 279.]], device='cuda:3'), 'labels': tensor([67], device='cuda:3'), 'image_id': tensor([12236], device='cuda:3'), 'area': tensor([69984.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(4.0805, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0141, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.6820, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0295, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:4.8061909675598145
[GPU:3] Losses reduced:4.789564609527588
[GPU:3] Loss value:4.789564609527588
[GPU:3] Images:[tensor([[[0.1686, 0.1804, 0.1686,  ..., 0.1020, 0.0980, 0.0863],
         [0.1725, 0.1765, 0.1725,  ..., 0.1098, 0.1059, 0.0902],
         [0.1843, 0.1882, 0.2000,  ..., 0.1255, 0.1216, 0.1137],
         ...,
         [0.4118, 0.4549, 0.3294,  ..., 0.5020, 0.4627, 0.4471],
         [0.4118, 0.4549, 0.4314,  ..., 0.5961, 0.5961, 0.5725],
         [0.3255, 0.3608, 0.3843,  ..., 0.5765, 0.6157, 0.6078]],

        [[0.1765, 0.1882, 0.1804,  ..., 0.1255, 0.1216, 0.1216],
         [0.1765, 0.1804, 0.1765,  ..., 0.1333, 0.1294, 0.1255],
         [0.1843, 0.1882, 0.1961,  ..., 0.1490, 0.1451, 0.1373],
         ...,
         [0.4157, 0.4275, 0.3020,  ..., 0.4784, 0.4784, 0.4706],
         [0.3569, 0.3961, 0.3882,  ..., 0.5059, 0.4980, 0.4980],
         [0.3686, 0.3882, 0.4000,  ..., 0.5569, 0.5255, 0.5098]],

        [[0.1725, 0.1765, 0.1529,  ..., 0.1176, 0.1137, 0.1098],
         [0.1529, 0.1569, 0.1529,  ..., 0.1255, 0.1216, 0.1137],
         [0.1451, 0.1569, 0.1765,  ..., 0.1412, 0.1373, 0.1294],
         ...,
         [0.2941, 0.3137, 0.1882,  ..., 0.3451, 0.3333, 0.3216],
         [0.2549, 0.2824, 0.2706,  ..., 0.3843, 0.3804, 0.3725],
         [0.2353, 0.2549, 0.2706,  ..., 0.4078, 0.4000, 0.3882]]],
       device='cuda:3'), tensor([[[0.4627, 0.4471, 0.4157,  ..., 0.4902, 0.2510, 0.0118],
         [0.4549, 0.4431, 0.4196,  ..., 0.4824, 0.2471, 0.0196],
         [0.4549, 0.4471, 0.4196,  ..., 0.1020, 0.0000, 0.0235],
         ...,
         [0.0941, 0.0980, 0.0627,  ..., 0.3176, 0.2314, 0.1490],
         [0.0941, 0.0980, 0.0706,  ..., 0.2510, 0.2980, 0.2588],
         [0.0784, 0.0745, 0.0824,  ..., 0.2667, 0.3294, 0.2549]],

        [[0.9882, 0.9882, 0.9843,  ..., 0.6745, 0.5529, 0.2667],
         [0.9882, 0.9922, 0.9882,  ..., 0.7333, 0.5451, 0.2196],
         [0.9882, 0.9882, 0.9804,  ..., 0.3961, 0.3216, 0.2196],
         ...,
         [0.0863, 0.0902, 0.0471,  ..., 0.7412, 0.6627, 0.5765],
         [0.0980, 0.0902, 0.0627,  ..., 0.7176, 0.7373, 0.6588],
         [0.0706, 0.0667, 0.0667,  ..., 0.7529, 0.7765, 0.6510]],

        [[0.9922, 0.9961, 0.9961,  ..., 0.6980, 0.5922, 0.1882],
         [0.9882, 0.9961, 1.0000,  ..., 0.7412, 0.6078, 0.1922],
         [0.9882, 0.9961, 0.9961,  ..., 0.2275, 0.2157, 0.1725],
         ...,
         [0.2314, 0.2353, 0.1922,  ..., 0.5490, 0.4863, 0.4118],
         [0.1765, 0.1725, 0.1451,  ..., 0.4980, 0.5490, 0.5020],
         [0.1647, 0.1608, 0.1647,  ..., 0.5176, 0.5843, 0.4941]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[319., 117., 475., 207.],
        [  1.,  19., 341., 372.]], device='cuda:3'), 'labels': tensor([72, 72], device='cuda:3'), 'image_id': tensor([16184], device='cuda:3'), 'area': tensor([ 14040., 120020.], device='cuda:3'), 'iscrowd': tensor([0, 0], device='cuda:3')}, {'boxes': tensor([[  2.,  31., 435., 498.]], device='cuda:3'), 'labels': tensor([72], device='cuda:3'), 'image_id': tensor([27941], device='cuda:3'), 'area': tensor([202211.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(0.7201, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0543, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.6482, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0254, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:1.4480011463165283
[GPU:3] Losses reduced:1.4989787340164185
[GPU:3] Loss value:1.4989787340164185
[GPU:3] Images:[tensor([[[0.0039, 0.0196, 0.0078,  ..., 0.0000, 0.0078, 0.0000],
         [0.0235, 0.0039, 0.0431,  ..., 0.0392, 0.0000, 0.0157],
         [0.0039, 0.0353, 0.7059,  ..., 0.3647, 0.0392, 0.0000],
         ...,
         [0.0000, 0.0392, 0.4627,  ..., 0.3765, 0.0353, 0.0000],
         [0.0157, 0.0000, 0.0157,  ..., 0.0392, 0.0000, 0.0078],
         [0.0000, 0.0431, 0.0000,  ..., 0.0000, 0.0196, 0.0078]],

        [[0.0000, 0.0118, 0.0000,  ..., 0.0000, 0.0078, 0.0000],
         [0.0196, 0.0000, 0.0392,  ..., 0.0392, 0.0000, 0.0157],
         [0.0000, 0.0314, 0.7020,  ..., 0.3686, 0.0392, 0.0000],
         ...,
         [0.0000, 0.0392, 0.4627,  ..., 0.3922, 0.0392, 0.0000],
         [0.0157, 0.0000, 0.0157,  ..., 0.0471, 0.0039, 0.0078],
         [0.0000, 0.0431, 0.0000,  ..., 0.0000, 0.0196, 0.0078]],

        [[0.0000, 0.0157, 0.0039,  ..., 0.0000, 0.0078, 0.0000],
         [0.0118, 0.0000, 0.0314,  ..., 0.0314, 0.0000, 0.0157],
         [0.0000, 0.0157, 0.6863,  ..., 0.3490, 0.0314, 0.0000],
         ...,
         [0.0000, 0.0314, 0.4549,  ..., 0.3961, 0.0471, 0.0078],
         [0.0157, 0.0000, 0.0078,  ..., 0.0431, 0.0000, 0.0078],
         [0.0000, 0.0431, 0.0000,  ..., 0.0000, 0.0196, 0.0078]]],
       device='cuda:3'), tensor([[[0.9608, 0.9608, 0.9608,  ..., 0.4667, 0.4667, 0.4667],
         [0.9608, 0.9608, 0.9608,  ..., 0.4706, 0.4706, 0.4706],
         [0.9608, 0.9608, 0.9608,  ..., 0.4706, 0.4706, 0.4706],
         ...,
         [0.1059, 0.0588, 0.0863,  ..., 0.4902, 0.4863, 0.4863],
         [0.1451, 0.2118, 0.2510,  ..., 0.4863, 0.4863, 0.4824],
         [0.2275, 0.1412, 0.0824,  ..., 0.4941, 0.4784, 0.4627]],

        [[0.9608, 0.9608, 0.9608,  ..., 0.3922, 0.3922, 0.3922],
         [0.9608, 0.9608, 0.9608,  ..., 0.3961, 0.3961, 0.3961],
         [0.9608, 0.9608, 0.9608,  ..., 0.3961, 0.3961, 0.3961],
         ...,
         [0.1216, 0.0745, 0.1020,  ..., 0.4510, 0.4471, 0.4471],
         [0.1608, 0.2275, 0.2667,  ..., 0.4471, 0.4471, 0.4431],
         [0.2431, 0.1569, 0.0980,  ..., 0.4549, 0.4392, 0.4235]],

        [[0.9608, 0.9608, 0.9608,  ..., 0.3765, 0.3765, 0.3765],
         [0.9608, 0.9608, 0.9608,  ..., 0.3804, 0.3804, 0.3804],
         [0.9608, 0.9608, 0.9608,  ..., 0.3804, 0.3804, 0.3804],
         ...,
         [0.1333, 0.0863, 0.1137,  ..., 0.4471, 0.4431, 0.4431],
         [0.1725, 0.2392, 0.2784,  ..., 0.4431, 0.4431, 0.4392],
         [0.2549, 0.1686, 0.1098,  ..., 0.4510, 0.4353, 0.4196]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[  4.,   0., 457., 329.]], device='cuda:3'), 'labels': tensor([91], device='cuda:3'), 'image_id': tensor([15731], device='cuda:3'), 'area': tensor([149037.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[ 54.,  24., 348., 229.],
        [  1.,  80.,  54., 143.]], device='cuda:3'), 'labels': tensor([51, 51], device='cuda:3'), 'image_id': tensor([26664], device='cuda:3'), 'area': tensor([60270.,  3339.], device='cuda:3'), 'iscrowd': tensor([0, 0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(1.8506, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.1169, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.5222, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.1280, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:2.6177127361297607
[GPU:3] Losses reduced:2.3331806659698486
[GPU:3] Loss value:2.3331806659698486
[GPU:3] Images:[tensor([[[0.0588, 0.0627, 0.0667,  ..., 0.8706, 0.8706, 0.8588],
         [0.0745, 0.0863, 0.0902,  ..., 0.8196, 0.8157, 0.8549],
         [0.0667, 0.0824, 0.0902,  ..., 0.4275, 0.3961, 0.4745],
         ...,
         [0.2078, 0.1608, 0.3647,  ..., 0.1922, 0.1922, 0.1882],
         [0.1608, 0.3647, 0.4392,  ..., 0.1843, 0.1843, 0.1804],
         [0.3294, 0.3608, 0.3255,  ..., 0.1725, 0.1725, 0.1686]],

        [[0.0549, 0.0588, 0.0627,  ..., 0.8471, 0.8471, 0.8392],
         [0.0706, 0.0824, 0.0863,  ..., 0.7961, 0.7922, 0.8314],
         [0.0627, 0.0784, 0.0863,  ..., 0.4078, 0.3725, 0.4392],
         ...,
         [0.1294, 0.0784, 0.2902,  ..., 0.1804, 0.1804, 0.1765],
         [0.0824, 0.2863, 0.3608,  ..., 0.1725, 0.1725, 0.1686],
         [0.2588, 0.2824, 0.2510,  ..., 0.1608, 0.1608, 0.1569]],

        [[0.0353, 0.0392, 0.0431,  ..., 0.8549, 0.8471, 0.8275],
         [0.0510, 0.0627, 0.0667,  ..., 0.8039, 0.8000, 0.8314],
         [0.0431, 0.0588, 0.0667,  ..., 0.4235, 0.3882, 0.4510],
         ...,
         [0.1020, 0.0118, 0.1725,  ..., 0.1608, 0.1608, 0.1569],
         [0.0392, 0.1922, 0.2235,  ..., 0.1529, 0.1529, 0.1490],
         [0.1804, 0.1765, 0.0941,  ..., 0.1412, 0.1412, 0.1373]]],
       device='cuda:3'), tensor([[[0.0196, 0.0000, 0.0118,  ..., 0.6980, 0.6667, 0.6235],
         [0.0471, 0.0000, 0.0078,  ..., 0.6706, 0.6314, 0.5922],
         [0.0667, 0.0039, 0.0118,  ..., 0.6235, 0.5725, 0.5333],
         ...,
         [0.1529, 0.1725, 0.1961,  ..., 0.0667, 0.0627, 0.0588],
         [0.1451, 0.1529, 0.1725,  ..., 0.0000, 0.0000, 0.0000],
         [0.1294, 0.1451, 0.1569,  ..., 0.0078, 0.0039, 0.0196]],

        [[0.0471, 0.0157, 0.0157,  ..., 0.0824, 0.0980, 0.0980],
         [0.0745, 0.0157, 0.0118,  ..., 0.0784, 0.0980, 0.0980],
         [0.1059, 0.0314, 0.0157,  ..., 0.0980, 0.1020, 0.1020],
         ...,
         [0.3529, 0.3529, 0.3686,  ..., 0.1294, 0.1255, 0.1216],
         [0.3373, 0.3333, 0.3333,  ..., 0.0314, 0.0471, 0.0471],
         [0.3255, 0.3255, 0.3294,  ..., 0.0353, 0.0431, 0.0549]],

        [[0.0706, 0.0314, 0.0235,  ..., 0.0078, 0.0157, 0.0000],
         [0.1059, 0.0392, 0.0275,  ..., 0.0118, 0.0118, 0.0078],
         [0.1451, 0.0627, 0.0353,  ..., 0.0000, 0.0000, 0.0118],
         ...,
         [0.5765, 0.5843, 0.6078,  ..., 0.0275, 0.0196, 0.0157],
         [0.5686, 0.5686, 0.5765,  ..., 0.0000, 0.0000, 0.0000],
         [0.5569, 0.5608, 0.5686,  ..., 0.0039, 0.0118, 0.0353]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[ 91., 105., 385., 374.]], device='cuda:3'), 'labels': tensor([57], device='cuda:3'), 'image_id': tensor([21805], device='cuda:3'), 'area': tensor([79086.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[194.,  88., 215., 135.],
        [ 85., 168., 123., 215.],
        [103., 241., 248., 309.],
        [423.,  70., 496.,  91.],
        [362.,   0., 405.,  33.],
        [ 58.,  43., 126.,  83.],
        [337.,  95., 372., 127.],
        [126.,  92., 151., 176.]], device='cuda:3'), 'labels': tensor([84, 84, 84, 84, 84, 84, 84, 84], device='cuda:3'), 'image_id': tensor([20719], device='cuda:3'), 'area': tensor([ 987., 1786., 9860., 1533., 1419., 2720., 1120., 2100.],
       device='cuda:3'), 'iscrowd': tensor([0, 0, 0, 0, 0, 0, 0, 0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(12.7010, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.3723, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.2217, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0252, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:13.320282936096191
[GPU:3] Losses reduced:7.243494510650635
[GPU:3] Loss value:7.243494510650635
[GPU:3] Images:[tensor([[[0.6392, 0.6353, 0.6392,  ..., 0.6549, 0.6588, 0.6667],
         [0.6392, 0.6431, 0.6431,  ..., 0.6549, 0.6588, 0.6627],
         [0.6431, 0.6510, 0.6510,  ..., 0.6510, 0.6549, 0.6549],
         ...,
         [0.2118, 0.3216, 0.3922,  ..., 0.6353, 0.6039, 0.5647],
         [0.2078, 0.3020, 0.3765,  ..., 0.6431, 0.6078, 0.5569],
         [0.2549, 0.3529, 0.4157,  ..., 0.6471, 0.6039, 0.5490]],

        [[0.6392, 0.6353, 0.6392,  ..., 0.6549, 0.6588, 0.6667],
         [0.6392, 0.6431, 0.6431,  ..., 0.6549, 0.6588, 0.6627],
         [0.6431, 0.6510, 0.6510,  ..., 0.6510, 0.6549, 0.6549],
         ...,
         [0.2118, 0.3216, 0.3922,  ..., 0.6353, 0.6039, 0.5647],
         [0.2078, 0.3020, 0.3765,  ..., 0.6431, 0.6078, 0.5569],
         [0.2549, 0.3529, 0.4157,  ..., 0.6471, 0.6039, 0.5490]],

        [[0.6392, 0.6353, 0.6392,  ..., 0.6549, 0.6588, 0.6667],
         [0.6392, 0.6431, 0.6431,  ..., 0.6549, 0.6588, 0.6627],
         [0.6431, 0.6510, 0.6510,  ..., 0.6510, 0.6549, 0.6549],
         ...,
         [0.2118, 0.3216, 0.3922,  ..., 0.6353, 0.6039, 0.5647],
         [0.2078, 0.3020, 0.3765,  ..., 0.6431, 0.6078, 0.5569],
         [0.2549, 0.3529, 0.4157,  ..., 0.6471, 0.6039, 0.5490]]],
       device='cuda:3'), tensor([[[0.0353, 0.0431, 0.0431,  ..., 0.1961, 0.1412, 0.1059],
         [0.0471, 0.0314, 0.0353,  ..., 0.1176, 0.1216, 0.1098],
         [0.0667, 0.0431, 0.0627,  ..., 0.1098, 0.1529, 0.1922],
         ...,
         [0.5059, 0.5176, 0.5255,  ..., 0.0314, 0.0392, 0.0314],
         [0.5020, 0.5137, 0.5137,  ..., 0.0314, 0.0353, 0.0275],
         [0.5137, 0.5294, 0.5333,  ..., 0.0314, 0.0275, 0.0235]],

        [[0.0471, 0.0549, 0.0549,  ..., 0.2314, 0.1765, 0.1412],
         [0.0667, 0.0510, 0.0549,  ..., 0.1569, 0.1608, 0.1490],
         [0.1020, 0.0784, 0.0980,  ..., 0.1529, 0.1922, 0.2314],
         ...,
         [0.5765, 0.5882, 0.5961,  ..., 0.0392, 0.0471, 0.0392],
         [0.5725, 0.5843, 0.5843,  ..., 0.0392, 0.0431, 0.0353],
         [0.5843, 0.6000, 0.6039,  ..., 0.0392, 0.0353, 0.0314]],

        [[0.0667, 0.0745, 0.0745,  ..., 0.2980, 0.2431, 0.2078],
         [0.0902, 0.0667, 0.0706,  ..., 0.1961, 0.2078, 0.1961],
         [0.1373, 0.1059, 0.1255,  ..., 0.1765, 0.2275, 0.2667],
         ...,
         [0.7176, 0.7294, 0.7373,  ..., 0.0353, 0.0431, 0.0353],
         [0.7137, 0.7255, 0.7255,  ..., 0.0353, 0.0392, 0.0314],
         [0.7255, 0.7412, 0.7451,  ..., 0.0353, 0.0314, 0.0275]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[ 27.,   7., 482., 451.]], device='cuda:3'), 'labels': tensor([4], device='cuda:3'), 'image_id': tensor([13093], device='cuda:3'), 'area': tensor([202020.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[218., 152., 297., 224.]], device='cuda:3'), 'labels': tensor([1], device='cuda:3'), 'image_id': tensor([20610], device='cuda:3'), 'area': tensor([5688.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(0.5518, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0425, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.1827, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0344, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:0.8114546537399292
[GPU:3] Losses reduced:2.0587098598480225
[GPU:3] Loss value:2.0587098598480225
[GPU:3] Images:[tensor([[[0.1804, 0.2157, 0.1843,  ..., 1.0000, 1.0000, 1.0000],
         [0.2157, 0.1725, 0.2235,  ..., 1.0000, 1.0000, 1.0000],
         [0.2118, 0.2235, 0.2000,  ..., 1.0000, 1.0000, 1.0000],
         ...,
         [0.3843, 0.3686, 0.3804,  ..., 0.0824, 0.0824, 0.0824],
         [0.3922, 0.3647, 0.3569,  ..., 0.0863, 0.0863, 0.0824],
         [0.3725, 0.3608, 0.4039,  ..., 0.0863, 0.0863, 0.0824]],

        [[0.2000, 0.2118, 0.2196,  ..., 1.0000, 1.0000, 1.0000],
         [0.2157, 0.2275, 0.2196,  ..., 1.0000, 1.0000, 1.0000],
         [0.2039, 0.2392, 0.2353,  ..., 1.0000, 1.0000, 1.0000],
         ...,
         [0.3647, 0.3647, 0.3922,  ..., 0.0980, 0.0980, 0.0980],
         [0.3843, 0.3686, 0.3882,  ..., 0.1020, 0.1020, 0.0980],
         [0.3765, 0.3765, 0.4275,  ..., 0.1020, 0.1020, 0.0980]],

        [[0.2157, 0.2431, 0.2392,  ..., 1.0000, 1.0000, 1.0000],
         [0.2471, 0.2392, 0.2510,  ..., 1.0000, 1.0000, 1.0000],
         [0.2549, 0.2745, 0.2549,  ..., 1.0000, 1.0000, 1.0000],
         ...,
         [0.3922, 0.3882, 0.4118,  ..., 0.0941, 0.0941, 0.0941],
         [0.4039, 0.3843, 0.3961,  ..., 0.1059, 0.1059, 0.1020],
         [0.3922, 0.3882, 0.4275,  ..., 0.1059, 0.1059, 0.1020]]],
       device='cuda:3'), tensor([[[0.1020, 0.0941, 0.0902,  ..., 0.2902, 0.4118, 0.3098],
         [0.0941, 0.1059, 0.1098,  ..., 0.2549, 0.3137, 0.3804],
         [0.1137, 0.1216, 0.1137,  ..., 0.2902, 0.3529, 0.3725],
         ...,
         [0.4078, 0.1529, 0.2471,  ..., 0.0784, 0.1137, 0.1451],
         [0.2980, 0.2431, 0.1255,  ..., 0.0431, 0.0353, 0.0706],
         [0.0980, 0.1176, 0.0863,  ..., 0.0549, 0.0471, 0.0510]],

        [[0.0980, 0.0902, 0.0902,  ..., 0.3059, 0.4196, 0.3255],
         [0.0902, 0.1020, 0.1098,  ..., 0.2510, 0.3373, 0.3647],
         [0.1098, 0.1176, 0.1137,  ..., 0.2863, 0.3216, 0.3569],
         ...,
         [0.4118, 0.1569, 0.2471,  ..., 0.0863, 0.1333, 0.1647],
         [0.3294, 0.2706, 0.1451,  ..., 0.0510, 0.0549, 0.0941],
         [0.1020, 0.1216, 0.0902,  ..., 0.0392, 0.0392, 0.0510]],

        [[0.1176, 0.1098, 0.0902,  ..., 0.3098, 0.4000, 0.3373],
         [0.1098, 0.1216, 0.1176,  ..., 0.2824, 0.3216, 0.3529],
         [0.1294, 0.1373, 0.1216,  ..., 0.3059, 0.3137, 0.3529],
         ...,
         [0.3882, 0.1333, 0.2392,  ..., 0.0745, 0.1176, 0.1412],
         [0.2706, 0.2392, 0.1686,  ..., 0.0392, 0.0392, 0.0784],
         [0.0824, 0.1294, 0.1098,  ..., 0.0353, 0.0431, 0.0510]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[111.,   0., 360., 305.]], device='cuda:3'), 'labels': tensor([14], device='cuda:3'), 'image_id': tensor([2837], device='cuda:3'), 'area': tensor([75945.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[157.,  32., 352., 269.]], device='cuda:3'), 'labels': tensor([1], device='cuda:3'), 'image_id': tensor([3720], device='cuda:3'), 'area': tensor([46215.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(0.8234, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0876, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.3525, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0020, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:1.2654213905334473
[GPU:3] Losses reduced:1.471348524093628
[GPU:3] Loss value:1.471348524093628
[GPU:3] Images:[tensor([[[0.0588, 0.1294, 0.0784,  ..., 0.8353, 0.8980, 0.9451],
         [0.0627, 0.0588, 0.0431,  ..., 0.8863, 0.7020, 0.5490],
         [0.0588, 0.0235, 0.0392,  ..., 0.1922, 0.1451, 0.1333],
         ...,
         [0.2902, 0.3020, 0.3137,  ..., 0.3216, 0.3176, 0.3176],
         [0.2784, 0.2667, 0.2902,  ..., 0.3373, 0.3373, 0.3216],
         [0.3686, 0.3608, 0.3098,  ..., 0.3176, 0.3255, 0.3020]],

        [[0.0667, 0.1294, 0.0784,  ..., 0.9098, 0.9608, 0.9961],
         [0.0392, 0.0471, 0.0471,  ..., 0.9647, 0.8235, 0.7020],
         [0.0510, 0.0196, 0.0431,  ..., 0.3529, 0.2667, 0.2235],
         ...,
         [0.2941, 0.3137, 0.3255,  ..., 0.3490, 0.3451, 0.3490],
         [0.2824, 0.2706, 0.2941,  ..., 0.3412, 0.3412, 0.3255],
         [0.3608, 0.3569, 0.3176,  ..., 0.3333, 0.3490, 0.3255]],

        [[0.0549, 0.1294, 0.0784,  ..., 0.9765, 1.0000, 1.0000],
         [0.0863, 0.0824, 0.0549,  ..., 0.9608, 0.8039, 0.6824],
         [0.0549, 0.0039, 0.0235,  ..., 0.2902, 0.2039, 0.1529],
         ...,
         [0.2706, 0.2863, 0.2824,  ..., 0.3216, 0.3137, 0.3059],
         [0.2588, 0.2471, 0.2627,  ..., 0.3216, 0.3216, 0.3059],
         [0.2706, 0.2745, 0.2314,  ..., 0.3294, 0.3412, 0.3255]]],
       device='cuda:3'), tensor([[[0.4784, 0.4745, 0.4784,  ..., 0.2039, 0.2078, 0.2118],
         [0.4824, 0.4784, 0.4824,  ..., 0.1882, 0.2000, 0.2000],
         [0.4863, 0.4824, 0.4863,  ..., 0.1608, 0.1765, 0.1804],
         ...,
         [0.3843, 0.3529, 0.3255,  ..., 0.4784, 0.4980, 0.4980],
         [0.3961, 0.3686, 0.3412,  ..., 0.4706, 0.4902, 0.4941],
         [0.3961, 0.3765, 0.3529,  ..., 0.4745, 0.4824, 0.4824]],

        [[0.3412, 0.3451, 0.3490,  ..., 0.1451, 0.1412, 0.1412],
         [0.3451, 0.3490, 0.3529,  ..., 0.1373, 0.1412, 0.1412],
         [0.3490, 0.3529, 0.3569,  ..., 0.1255, 0.1294, 0.1373],
         ...,
         [0.2510, 0.2196, 0.1882,  ..., 0.2824, 0.3098, 0.3176],
         [0.2627, 0.2353, 0.2039,  ..., 0.2745, 0.2941, 0.3059],
         [0.2627, 0.2431, 0.2157,  ..., 0.2706, 0.2863, 0.2863]],

        [[0.2157, 0.2157, 0.2196,  ..., 0.0706, 0.0627, 0.0549],
         [0.2196, 0.2196, 0.2235,  ..., 0.0706, 0.0667, 0.0588],
         [0.2235, 0.2235, 0.2275,  ..., 0.0667, 0.0667, 0.0667],
         ...,
         [0.0627, 0.0392, 0.0235,  ..., 0.1373, 0.1686, 0.1765],
         [0.0745, 0.0549, 0.0392,  ..., 0.1294, 0.1569, 0.1647],
         [0.0745, 0.0627, 0.0510,  ..., 0.1255, 0.1490, 0.1490]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[  1., 149., 499., 374.]], device='cuda:3'), 'labels': tensor([51], device='cuda:3'), 'image_id': tensor([26610], device='cuda:3'), 'area': tensor([112050.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[ 28.,  18., 365., 462.]], device='cuda:3'), 'labels': tensor([74], device='cuda:3'), 'image_id': tensor([10086], device='cuda:3'), 'area': tensor([149628.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(0.1205, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0839, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.1570, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0634, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:0.42485809326171875
[GPU:3] Losses reduced:0.567929208278656
[GPU:3] Loss value:0.567929208278656
[GPU:3] Images:[tensor([[[0.3059, 0.3137, 0.3176,  ..., 0.0353, 0.0353, 0.0314],
         [0.2980, 0.2980, 0.2980,  ..., 0.0314, 0.0353, 0.0353],
         [0.3059, 0.3020, 0.2980,  ..., 0.0275, 0.0314, 0.0431],
         ...,
         [0.6431, 0.6471, 0.6471,  ..., 0.6627, 0.6627, 0.6627],
         [0.6431, 0.6471, 0.6510,  ..., 0.6588, 0.6588, 0.6588],
         [0.6431, 0.6471, 0.6510,  ..., 0.6510, 0.6549, 0.6549]],

        [[0.3529, 0.3490, 0.3529,  ..., 0.0627, 0.0627, 0.0510],
         [0.3412, 0.3412, 0.3412,  ..., 0.0588, 0.0549, 0.0549],
         [0.3490, 0.3529, 0.3490,  ..., 0.0549, 0.0510, 0.0510],
         ...,
         [0.6510, 0.6549, 0.6549,  ..., 0.6588, 0.6588, 0.6588],
         [0.6510, 0.6549, 0.6588,  ..., 0.6549, 0.6549, 0.6549],
         [0.6510, 0.6549, 0.6588,  ..., 0.6471, 0.6510, 0.6510]],

        [[0.1725, 0.1804, 0.1843,  ..., 0.0353, 0.0353, 0.0275],
         [0.1725, 0.1725, 0.1765,  ..., 0.0314, 0.0314, 0.0314],
         [0.1843, 0.1843, 0.1804,  ..., 0.0275, 0.0275, 0.0314],
         ...,
         [0.6980, 0.7020, 0.7020,  ..., 0.6784, 0.6784, 0.6784],
         [0.6980, 0.7020, 0.7059,  ..., 0.6745, 0.6745, 0.6745],
         [0.6980, 0.7020, 0.7059,  ..., 0.6667, 0.6706, 0.6706]]],
       device='cuda:3'), tensor([[[0.0627, 0.0824, 0.0902,  ..., 0.0824, 0.0824, 0.0824],
         [0.0667, 0.0824, 0.0902,  ..., 0.0824, 0.0824, 0.0824],
         [0.0745, 0.0863, 0.0902,  ..., 0.0863, 0.0863, 0.0824],
         ...,
         [0.0353, 0.0353, 0.0353,  ..., 0.0745, 0.0745, 0.0784],
         [0.0353, 0.0353, 0.0353,  ..., 0.0745, 0.0745, 0.0784],
         [0.0314, 0.0353, 0.0353,  ..., 0.0745, 0.0745, 0.0784]],

        [[0.0588, 0.0784, 0.0863,  ..., 0.0588, 0.0588, 0.0588],
         [0.0627, 0.0784, 0.0863,  ..., 0.0588, 0.0588, 0.0588],
         [0.0706, 0.0824, 0.0863,  ..., 0.0627, 0.0627, 0.0588],
         ...,
         [0.0431, 0.0431, 0.0431,  ..., 0.0745, 0.0745, 0.0784],
         [0.0431, 0.0431, 0.0431,  ..., 0.0745, 0.0745, 0.0784],
         [0.0431, 0.0471, 0.0471,  ..., 0.0745, 0.0745, 0.0784]],

        [[0.0902, 0.1098, 0.1176,  ..., 0.1059, 0.1059, 0.1059],
         [0.0941, 0.1098, 0.1176,  ..., 0.1059, 0.1059, 0.1059],
         [0.1020, 0.1137, 0.1176,  ..., 0.1098, 0.1098, 0.1059],
         ...,
         [0.0941, 0.0941, 0.0941,  ..., 0.1137, 0.1137, 0.1176],
         [0.0941, 0.0941, 0.0941,  ..., 0.1137, 0.1137, 0.1176],
         [0.0784, 0.0824, 0.0824,  ..., 0.1137, 0.1137, 0.1176]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[ 98.,  41., 439., 333.]], device='cuda:3'), 'labels': tensor([1], device='cuda:3'), 'image_id': tensor([27566], device='cuda:3'), 'area': tensor([99572.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[ 38.,  27., 218., 187.]], device='cuda:3'), 'labels': tensor([8], device='cuda:3'), 'image_id': tensor([3725], device='cuda:3'), 'area': tensor([28800.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(4.5091, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.1723, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.0852, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0250, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:4.791663646697998
[GPU:3] Losses reduced:4.887511730194092
[GPU:3] Loss value:4.887511730194092
[GPU:3] Images:[tensor([[[0.2039, 0.1686, 0.1922,  ..., 0.0588, 0.0941, 0.1490],
         [0.2157, 0.2157, 0.2078,  ..., 0.0863, 0.1255, 0.1451],
         [0.2157, 0.2314, 0.2000,  ..., 0.0980, 0.1490, 0.1412],
         ...,
         [0.2118, 0.1765, 0.1804,  ..., 0.5020, 0.4941, 0.4902],
         [0.1490, 0.1686, 0.1922,  ..., 0.5137, 0.5059, 0.4980],
         [0.1804, 0.2000, 0.2000,  ..., 0.5059, 0.4980, 0.4902]],

        [[0.2039, 0.1843, 0.2157,  ..., 0.1020, 0.1451, 0.2078],
         [0.2157, 0.2235, 0.2235,  ..., 0.0902, 0.1373, 0.1765],
         [0.2196, 0.2392, 0.2078,  ..., 0.1059, 0.1647, 0.1765],
         ...,
         [0.2235, 0.1882, 0.2000,  ..., 0.5098, 0.5020, 0.4980],
         [0.1647, 0.1922, 0.2314,  ..., 0.5216, 0.5137, 0.5059],
         [0.2118, 0.2588, 0.2667,  ..., 0.5137, 0.5059, 0.4980]],

        [[0.1569, 0.1294, 0.1608,  ..., 0.0392, 0.0745, 0.1255],
         [0.1765, 0.1725, 0.1686,  ..., 0.0588, 0.1020, 0.1255],
         [0.1882, 0.1961, 0.1529,  ..., 0.0510, 0.0980, 0.0941],
         ...,
         [0.1804, 0.1608, 0.1725,  ..., 0.5608, 0.5529, 0.5490],
         [0.1686, 0.1843, 0.2275,  ..., 0.5725, 0.5647, 0.5569],
         [0.1529, 0.1843, 0.2039,  ..., 0.5647, 0.5569, 0.5490]]],
       device='cuda:3'), tensor([[[0.1765, 0.1882, 0.1882,  ..., 0.1216, 0.0863, 0.0588],
         [0.1804, 0.1922, 0.1882,  ..., 0.1294, 0.1059, 0.0706],
         [0.1843, 0.1922, 0.1882,  ..., 0.1529, 0.1294, 0.0980],
         ...,
         [0.7216, 0.7294, 0.7294,  ..., 0.2902, 0.2980, 0.3059],
         [0.7176, 0.7255, 0.7294,  ..., 0.3020, 0.3020, 0.3020],
         [0.7059, 0.7137, 0.7294,  ..., 0.3098, 0.3059, 0.3020]],

        [[0.1961, 0.2078, 0.2235,  ..., 0.1020, 0.0902, 0.0784],
         [0.2000, 0.2118, 0.2235,  ..., 0.1216, 0.1059, 0.0824],
         [0.2000, 0.2078, 0.2235,  ..., 0.1686, 0.1333, 0.0941],
         ...,
         [0.7294, 0.7373, 0.7333,  ..., 0.3725, 0.3843, 0.3922],
         [0.7255, 0.7333, 0.7333,  ..., 0.3843, 0.3882, 0.3882],
         [0.7137, 0.7216, 0.7333,  ..., 0.3922, 0.3922, 0.3882]],

        [[0.2196, 0.2314, 0.2588,  ..., 0.1176, 0.0980, 0.0902],
         [0.2235, 0.2353, 0.2588,  ..., 0.2078, 0.1529, 0.1020],
         [0.2353, 0.2431, 0.2588,  ..., 0.3529, 0.2431, 0.1490],
         ...,
         [0.7255, 0.7333, 0.7137,  ..., 0.4392, 0.4392, 0.4471],
         [0.7216, 0.7294, 0.7137,  ..., 0.4510, 0.4431, 0.4431],
         [0.7098, 0.7176, 0.7137,  ..., 0.4588, 0.4471, 0.4431]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[132.,  69., 264., 245.]], device='cuda:3'), 'labels': tensor([4], device='cuda:3'), 'image_id': tensor([17846], device='cuda:3'), 'area': tensor([23232.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[190.,  68., 403., 278.]], device='cuda:3'), 'labels': tensor([0], device='cuda:3'), 'image_id': tensor([12942], device='cuda:3'), 'area': tensor([44730.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(0.1757, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0499, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.2993, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0055, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:0.5303235054016113
[GPU:3] Losses reduced:0.6107518672943115
[GPU:3] Loss value:0.6107518672943115
[GPU:3] Images:[tensor([[[0.5451, 0.5373, 0.5137,  ..., 0.5137, 0.5216, 0.4863],
         [0.5176, 0.4941, 0.5059,  ..., 0.4549, 0.4863, 0.4824],
         [0.5020, 0.4784, 0.4431,  ..., 0.4824, 0.5216, 0.4863],
         ...,
         [0.4549, 0.4627, 0.4157,  ..., 0.0118, 0.0078, 0.0078],
         [0.4549, 0.4314, 0.4627,  ..., 0.0353, 0.0118, 0.0392],
         [0.4510, 0.4235, 0.4196,  ..., 0.0235, 0.0157, 0.0196]],

        [[0.5216, 0.5333, 0.5333,  ..., 0.5333, 0.5490, 0.5137],
         [0.5255, 0.5255, 0.5647,  ..., 0.5098, 0.5490, 0.5490],
         [0.5216, 0.5255, 0.5176,  ..., 0.5373, 0.5804, 0.5647],
         ...,
         [0.4784, 0.4941, 0.4627,  ..., 0.0078, 0.0039, 0.0039],
         [0.4824, 0.4627, 0.5098,  ..., 0.0353, 0.0118, 0.0392],
         [0.4784, 0.4549, 0.4549,  ..., 0.0196, 0.0118, 0.0196]],

        [[0.5373, 0.5569, 0.6118,  ..., 0.6078, 0.6235, 0.5882],
         [0.5725, 0.5686, 0.6471,  ..., 0.6157, 0.6510, 0.6588],
         [0.6353, 0.6275, 0.6431,  ..., 0.6510, 0.6941, 0.6706],
         ...,
         [0.5255, 0.5451, 0.5176,  ..., 0.0275, 0.0235, 0.0235],
         [0.5216, 0.5059, 0.5725,  ..., 0.0353, 0.0118, 0.0314],
         [0.5020, 0.4980, 0.5216,  ..., 0.0392, 0.0314, 0.0275]]],
       device='cuda:3'), tensor([[[0.9294, 0.5098, 0.2588,  ..., 0.4863, 0.4980, 0.4863],
         [0.7333, 0.4706, 0.4431,  ..., 0.4863, 0.4863, 0.4784],
         [0.8078, 0.5020, 0.4784,  ..., 0.4980, 0.5059, 0.5059],
         ...,
         [0.8157, 0.8118, 0.8078,  ..., 0.6078, 0.6039, 0.6902],
         [0.7922, 0.8078, 0.8392,  ..., 0.7020, 0.6745, 0.7216],
         [0.7725, 0.8039, 0.8549,  ..., 0.7373, 0.6941, 0.6980]],

        [[0.9451, 0.5255, 0.2745,  ..., 0.4902, 0.5020, 0.4941],
         [0.7373, 0.4745, 0.4471,  ..., 0.4902, 0.4902, 0.4824],
         [0.8000, 0.4941, 0.4706,  ..., 0.5059, 0.5098, 0.5098],
         ...,
         [0.7647, 0.7608, 0.7569,  ..., 0.6196, 0.6157, 0.7020],
         [0.7412, 0.7569, 0.7882,  ..., 0.7137, 0.6863, 0.7333],
         [0.7216, 0.7529, 0.8039,  ..., 0.7490, 0.7059, 0.7098]],

        [[0.9490, 0.5294, 0.2784,  ..., 0.4667, 0.4706, 0.4510],
         [0.7451, 0.4824, 0.4627,  ..., 0.4706, 0.4667, 0.4510],
         [0.8118, 0.5137, 0.4902,  ..., 0.4941, 0.4902, 0.4863],
         ...,
         [0.6314, 0.6275, 0.6235,  ..., 0.4431, 0.4392, 0.5255],
         [0.6078, 0.6235, 0.6549,  ..., 0.5373, 0.5098, 0.5569],
         [0.5882, 0.6196, 0.6706,  ..., 0.5725, 0.5294, 0.5333]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[  1., 151., 113., 193.],
        [125., 154., 174., 186.],
        [218., 147., 364., 199.]], device='cuda:3'), 'labels': tensor([11, 11, 11], device='cuda:3'), 'image_id': tensor([19785], device='cuda:3'), 'area': tensor([4704., 1568., 7592.], device='cuda:3'), 'iscrowd': tensor([0, 0, 0], device='cuda:3')}, {'boxes': tensor([[  9.,  10., 127.,  99.]], device='cuda:3'), 'labels': tensor([4], device='cuda:3'), 'image_id': tensor([2809], device='cuda:3'), 'area': tensor([10502.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(1.0372, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0725, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.3465, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0385, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:1.49470055103302
[GPU:3] Losses reduced:1.3450931310653687
[GPU:3] Loss value:1.3450931310653687
[GPU:3] Images:[tensor([[[0.3922, 0.3882, 0.4000,  ..., 0.1294, 0.1098, 0.1373],
         [0.3804, 0.4039, 0.4078,  ..., 0.1373, 0.1216, 0.1137],
         [0.4118, 0.4118, 0.3961,  ..., 0.1333, 0.1333, 0.1137],
         ...,
         [0.1765, 0.1765, 0.1647,  ..., 0.0000, 0.0000, 0.0000],
         [0.1765, 0.1725, 0.1686,  ..., 0.0000, 0.0000, 0.0000],
         [0.1686, 0.1725, 0.1529,  ..., 0.0000, 0.0000, 0.0000]],

        [[0.3529, 0.3490, 0.3608,  ..., 0.1020, 0.0824, 0.1098],
         [0.3412, 0.3647, 0.3686,  ..., 0.1098, 0.0941, 0.0863],
         [0.3725, 0.3725, 0.3569,  ..., 0.1059, 0.1059, 0.0863],
         ...,
         [0.1490, 0.1490, 0.1373,  ..., 0.0000, 0.0000, 0.0000],
         [0.1490, 0.1451, 0.1412,  ..., 0.0000, 0.0000, 0.0000],
         [0.1412, 0.1451, 0.1255,  ..., 0.0000, 0.0000, 0.0000]],

        [[0.3137, 0.3137, 0.3255,  ..., 0.0784, 0.0588, 0.0863],
         [0.3059, 0.3294, 0.3333,  ..., 0.0863, 0.0706, 0.0627],
         [0.3373, 0.3373, 0.3216,  ..., 0.0824, 0.0824, 0.0627],
         ...,
         [0.1098, 0.1098, 0.1059,  ..., 0.0000, 0.0000, 0.0000],
         [0.1098, 0.1137, 0.1098,  ..., 0.0000, 0.0000, 0.0000],
         [0.1020, 0.1137, 0.0941,  ..., 0.0000, 0.0000, 0.0000]]],
       device='cuda:3'), tensor([[[0.5569, 0.5451, 0.5490,  ..., 0.4863, 0.4941, 0.4863],
         [0.5843, 0.5725, 0.5725,  ..., 0.4902, 0.4941, 0.4745],
         [0.5529, 0.5529, 0.5647,  ..., 0.4902, 0.4941, 0.4745],
         ...,
         [0.2000, 0.9490, 0.7686,  ..., 0.8588, 1.0000, 0.7176],
         [0.2588, 0.0196, 0.1176,  ..., 0.9686, 0.7137, 0.5216],
         [0.3176, 0.3373, 0.1765,  ..., 0.3137, 0.4235, 0.6078]],

        [[0.4824, 0.4706, 0.4745,  ..., 0.3647, 0.3725, 0.3647],
         [0.5098, 0.4980, 0.4980,  ..., 0.3686, 0.3725, 0.3529],
         [0.4745, 0.4745, 0.4863,  ..., 0.3686, 0.3725, 0.3529],
         ...,
         [0.1882, 0.9216, 0.7098,  ..., 0.7216, 0.9647, 0.4980],
         [0.2353, 0.0000, 0.0941,  ..., 0.8000, 0.6078, 0.3333],
         [0.2706, 0.3098, 0.1569,  ..., 0.1961, 0.2392, 0.4471]],

        [[0.4902, 0.4784, 0.4824,  ..., 0.4235, 0.4314, 0.4235],
         [0.5176, 0.5059, 0.5059,  ..., 0.4275, 0.4314, 0.4118],
         [0.4824, 0.4824, 0.4941,  ..., 0.4275, 0.4314, 0.4118],
         ...,
         [0.2235, 0.9529, 0.7373,  ..., 0.7451, 0.9725, 0.4000],
         [0.2745, 0.0235, 0.1098,  ..., 0.8667, 0.6667, 0.2784],
         [0.3176, 0.3412, 0.1725,  ..., 0.1961, 0.2706, 0.4235]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[139.,   0., 498., 398.]], device='cuda:3'), 'labels': tensor([34], device='cuda:3'), 'image_id': tensor([24496], device='cuda:3'), 'area': tensor([142882.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[ 14.,   7., 136., 104.]], device='cuda:3'), 'labels': tensor([5], device='cuda:3'), 'image_id': tensor([24746], device='cuda:3'), 'area': tensor([11834.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(0.2340, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0982, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.0824, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0343, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:0.44890955090522766
[GPU:3] Losses reduced:0.6417111158370972
[GPU:3] Loss value:0.6417111158370972
[GPU:3] Images:[tensor([[[0.2588, 0.2510, 0.2471,  ..., 0.5765, 0.5333, 0.4392],
         [0.2196, 0.2353, 0.2549,  ..., 0.3216, 0.5490, 0.5137],
         [0.2078, 0.2118, 0.2235,  ..., 0.1765, 0.5137, 0.5725],
         ...,
         [0.4275, 0.3686, 0.4039,  ..., 0.5412, 0.5961, 0.5725],
         [0.5176, 0.4275, 0.3843,  ..., 0.4078, 0.4196, 0.4588],
         [0.6235, 0.5686, 0.5373,  ..., 0.4431, 0.5059, 0.3843]],

        [[0.2588, 0.2510, 0.2471,  ..., 0.5804, 0.5373, 0.4431],
         [0.2196, 0.2353, 0.2549,  ..., 0.3255, 0.5529, 0.5176],
         [0.2078, 0.2118, 0.2235,  ..., 0.1804, 0.5176, 0.5765],
         ...,
         [0.4078, 0.3490, 0.3843,  ..., 0.5451, 0.6000, 0.5765],
         [0.5020, 0.4118, 0.3686,  ..., 0.4039, 0.4157, 0.4549],
         [0.6196, 0.5647, 0.5333,  ..., 0.4275, 0.4902, 0.3686]],

        [[0.2510, 0.2431, 0.2392,  ..., 0.5961, 0.5529, 0.4588],
         [0.2118, 0.2275, 0.2471,  ..., 0.3412, 0.5686, 0.5333],
         [0.2000, 0.2039, 0.2157,  ..., 0.1882, 0.5255, 0.5843],
         ...,
         [0.3961, 0.3373, 0.3725,  ..., 0.5216, 0.5765, 0.5529],
         [0.4902, 0.4000, 0.3569,  ..., 0.3882, 0.4000, 0.4392],
         [0.6039, 0.5490, 0.5137,  ..., 0.4235, 0.4863, 0.3647]]],
       device='cuda:3'), tensor([[[0.2353, 0.3373, 0.2549,  ..., 0.1725, 0.2039, 0.1098],
         [0.2588, 0.3098, 0.2706,  ..., 0.1961, 0.1294, 0.1294],
         [0.2510, 0.3569, 0.2863,  ..., 0.1647, 0.1725, 0.1725],
         ...,
         [0.4980, 0.4902, 0.4863,  ..., 0.8000, 0.7412, 0.7647],
         [0.5255, 0.5686, 0.5843,  ..., 0.6000, 0.7255, 0.7412],
         [0.5020, 0.5569, 0.4510,  ..., 0.7529, 0.7373, 0.8118]],

        [[0.2000, 0.2745, 0.1922,  ..., 0.1451, 0.1882, 0.0941],
         [0.2314, 0.2588, 0.2314,  ..., 0.1804, 0.1216, 0.1333],
         [0.1961, 0.2902, 0.2275,  ..., 0.1098, 0.1216, 0.1216],
         ...,
         [0.5059, 0.4510, 0.4275,  ..., 0.8157, 0.7529, 0.7686],
         [0.4706, 0.4549, 0.4863,  ..., 0.6196, 0.7412, 0.7529],
         [0.4431, 0.4863, 0.4118,  ..., 0.7451, 0.7255, 0.8078]],

        [[0.1804, 0.2118, 0.1412,  ..., 0.1216, 0.1529, 0.0510],
         [0.1569, 0.2353, 0.1843,  ..., 0.1333, 0.0627, 0.0706],
         [0.1608, 0.2627, 0.2078,  ..., 0.0745, 0.0863, 0.0863],
         ...,
         [0.5529, 0.4549, 0.4392,  ..., 0.8275, 0.7725, 0.7843],
         [0.4667, 0.4235, 0.4667,  ..., 0.5961, 0.7529, 0.7255],
         [0.4157, 0.4392, 0.4039,  ..., 0.7490, 0.7686, 0.7922]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[  2.,  45., 357., 498.]], device='cuda:3'), 'labels': tensor([6], device='cuda:3'), 'image_id': tensor([19522], device='cuda:3'), 'area': tensor([160815.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[ 80.,   1., 499., 374.]], device='cuda:3'), 'labels': tensor([12], device='cuda:3'), 'image_id': tensor([1675], device='cuda:3'), 'area': tensor([156287.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(0.3238, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0923, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.0894, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0561, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:0.5616347193717957
[GPU:3] Losses reduced:0.4756322503089905
[GPU:3] Loss value:0.4756322503089905
[GPU:3] Images:[tensor([[[0.4549, 0.4824, 0.5216,  ..., 0.0039, 0.0039, 0.0039],
         [0.4902, 0.4667, 0.5137,  ..., 0.0039, 0.0039, 0.0039],
         [0.3922, 0.3804, 0.4667,  ..., 0.0039, 0.0039, 0.0000],
         ...,
         [0.9686, 0.9882, 0.9882,  ..., 0.5608, 0.6157, 0.6314],
         [0.9961, 0.9882, 0.8510,  ..., 0.5412, 0.6157, 0.6157],
         [0.9059, 0.9059, 0.6980,  ..., 0.5765, 0.6353, 0.5961]],

        [[0.3333, 0.3333, 0.3804,  ..., 0.0588, 0.0588, 0.0588],
         [0.3529, 0.3451, 0.3647,  ..., 0.0588, 0.0588, 0.0588],
         [0.3137, 0.2706, 0.3098,  ..., 0.0588, 0.0588, 0.0549],
         ...,
         [0.8392, 0.9216, 0.7686,  ..., 0.4667, 0.5098, 0.5098],
         [0.8196, 0.8706, 0.6745,  ..., 0.4314, 0.4980, 0.4902],
         [0.7255, 0.8431, 0.5137,  ..., 0.4667, 0.5137, 0.4667]],

        [[0.2549, 0.2902, 0.3333,  ..., 0.0627, 0.0627, 0.0627],
         [0.2667, 0.2627, 0.2824,  ..., 0.0627, 0.0627, 0.0627],
         [0.2157, 0.1765, 0.2078,  ..., 0.0706, 0.0627, 0.0588],
         ...,
         [0.7647, 0.8196, 0.6627,  ..., 0.3569, 0.3961, 0.3961],
         [0.6549, 0.6745, 0.5451,  ..., 0.3373, 0.4039, 0.4000],
         [0.6314, 0.7098, 0.4039,  ..., 0.3725, 0.4314, 0.3922]]],
       device='cuda:3'), tensor([[[0.8667, 0.8471, 0.8667,  ..., 0.3725, 0.3725, 0.3725],
         [0.8549, 0.8353, 0.8627,  ..., 0.3882, 0.3804, 0.3608],
         [0.8706, 0.8392, 0.8549,  ..., 0.3686, 0.3725, 0.3725],
         ...,
         [0.4039, 0.3961, 0.4000,  ..., 1.0000, 0.9961, 0.9961],
         [0.3725, 0.3922, 0.3686,  ..., 0.8980, 0.8902, 0.8902],
         [0.2941, 0.3294, 0.2902,  ..., 0.8275, 0.8275, 0.8275]],

        [[0.8431, 0.8235, 0.8392,  ..., 0.3725, 0.3725, 0.3725],
         [0.8314, 0.8078, 0.8353,  ..., 0.3882, 0.3804, 0.3608],
         [0.8431, 0.8118, 0.8275,  ..., 0.3686, 0.3725, 0.3725],
         ...,
         [0.2235, 0.2157, 0.2196,  ..., 1.0000, 1.0000, 1.0000],
         [0.1765, 0.1961, 0.1804,  ..., 0.9059, 0.9059, 0.9059],
         [0.1804, 0.2157, 0.1765,  ..., 0.8510, 0.8510, 0.8510]],

        [[0.7804, 0.7608, 0.7765,  ..., 0.3412, 0.3412, 0.3412],
         [0.7686, 0.7451, 0.7725,  ..., 0.3569, 0.3490, 0.3294],
         [0.7804, 0.7490, 0.7647,  ..., 0.3373, 0.3412, 0.3412],
         ...,
         [0.1647, 0.1569, 0.1608,  ..., 1.0000, 1.0000, 1.0000],
         [0.1333, 0.1529, 0.1333,  ..., 0.9020, 0.9020, 0.9020],
         [0.1176, 0.1529, 0.1216,  ..., 0.8510, 0.8510, 0.8510]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[  0.,   1., 495., 327.]], device='cuda:3'), 'labels': tensor([67], device='cuda:3'), 'image_id': tensor([18815], device='cuda:3'), 'area': tensor([161370.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[  3.,   0., 481., 374.]], device='cuda:3'), 'labels': tensor([57], device='cuda:3'), 'image_id': tensor([24526], device='cuda:3'), 'area': tensor([178772.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(4.6861, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0574, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.1159, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0944, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:4.953825950622559
[GPU:3] Losses reduced:4.807239055633545
[GPU:3] Loss value:4.807239055633545
[GPU:3] Images:[tensor([[[0.2000, 0.2000, 0.2000,  ..., 0.2000, 0.2000, 0.2000],
         [0.2000, 0.2000, 0.2000,  ..., 0.2000, 0.2000, 0.2000],
         [0.2000, 0.2000, 0.2000,  ..., 0.2000, 0.2000, 0.2000],
         ...,
         [0.2000, 0.2000, 0.2000,  ..., 0.2000, 0.2000, 0.2000],
         [0.2000, 0.2000, 0.2000,  ..., 0.2000, 0.2000, 0.2000],
         [0.2000, 0.2000, 0.2000,  ..., 0.2000, 0.2000, 0.2000]],

        [[0.4039, 0.4039, 0.4039,  ..., 0.4039, 0.4039, 0.4039],
         [0.4039, 0.4039, 0.4039,  ..., 0.4039, 0.4039, 0.4039],
         [0.4039, 0.4039, 0.4039,  ..., 0.4039, 0.4039, 0.4039],
         ...,
         [0.4039, 0.4039, 0.4039,  ..., 0.4039, 0.4039, 0.4039],
         [0.4039, 0.4039, 0.4039,  ..., 0.4039, 0.4039, 0.4039],
         [0.4039, 0.4039, 0.4039,  ..., 0.4039, 0.4039, 0.4039]],

        [[0.6000, 0.6000, 0.6000,  ..., 0.6000, 0.6000, 0.6000],
         [0.6000, 0.6000, 0.6000,  ..., 0.6000, 0.6000, 0.6000],
         [0.6000, 0.6000, 0.6000,  ..., 0.6000, 0.6000, 0.6000],
         ...,
         [0.6000, 0.6000, 0.6000,  ..., 0.6000, 0.6000, 0.6000],
         [0.6000, 0.6000, 0.6000,  ..., 0.6000, 0.6000, 0.6000],
         [0.6000, 0.6000, 0.6000,  ..., 0.6000, 0.6000, 0.6000]]],
       device='cuda:3'), tensor([[[0.2431, 0.2157, 0.1765,  ..., 0.0275, 0.0157, 0.0000],
         [0.2157, 0.3098, 0.2627,  ..., 0.1059, 0.0471, 0.0196],
         [0.2431, 0.2314, 0.2824,  ..., 0.0471, 0.0157, 0.0000],
         ...,
         [0.5843, 0.4902, 0.4980,  ..., 0.0275, 0.0549, 0.0588],
         [0.6118, 0.5059, 0.5216,  ..., 0.0431, 0.0980, 0.0588],
         [0.5608, 0.5412, 0.5059,  ..., 0.0667, 0.0902, 0.1255]],

        [[0.1843, 0.1882, 0.2000,  ..., 0.0157, 0.0314, 0.0275],
         [0.1569, 0.1922, 0.1412,  ..., 0.0196, 0.0000, 0.0196],
         [0.2078, 0.1647, 0.1725,  ..., 0.0275, 0.0275, 0.0353],
         ...,
         [0.6000, 0.5725, 0.5216,  ..., 0.1725, 0.1294, 0.1882],
         [0.6000, 0.5765, 0.5294,  ..., 0.2078, 0.1608, 0.1608],
         [0.5647, 0.5451, 0.5176,  ..., 0.1333, 0.1647, 0.1686]],

        [[0.1569, 0.0784, 0.1451,  ..., 0.0000, 0.0275, 0.0078],
         [0.1373, 0.1529, 0.0706,  ..., 0.0314, 0.0157, 0.0118],
         [0.1412, 0.1333, 0.1176,  ..., 0.0118, 0.0000, 0.0157],
         ...,
         [0.6039, 0.5373, 0.4667,  ..., 0.1451, 0.1451, 0.1216],
         [0.6275, 0.5765, 0.5255,  ..., 0.2000, 0.1490, 0.1255],
         [0.5843, 0.6157, 0.5922,  ..., 0.1961, 0.1882, 0.1765]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[121.,  39., 298., 544.]], device='cuda:3'), 'labels': tensor([61], device='cuda:3'), 'image_id': tensor([18014], device='cuda:3'), 'area': tensor([89385.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[ 19.,   1., 374., 498.]], device='cuda:3'), 'labels': tensor([3], device='cuda:3'), 'image_id': tensor([20413], device='cuda:3'), 'area': tensor([176435.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(6131.4697, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(110.5255, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.0779, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0519, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:6242.125
[GPU:3] Losses reduced:11360.7509765625
[GPU:3] Loss value:11360.7509765625
[GPU:3] Images:[tensor([[[0.9843, 0.9843, 0.9843,  ..., 0.9137, 0.9137, 0.9098],
         [0.9843, 0.9843, 0.9843,  ..., 0.9137, 0.9137, 0.9137],
         [0.9843, 0.9843, 0.9843,  ..., 0.9137, 0.9137, 0.9137],
         ...,
         [0.6510, 0.6392, 0.6510,  ..., 0.7373, 0.6745, 0.6392],
         [0.7137, 0.7255, 0.7373,  ..., 0.5137, 0.6392, 0.5882],
         [0.6980, 0.6863, 0.7216,  ..., 0.5490, 0.5843, 0.5059]],

        [[0.9843, 0.9843, 0.9843,  ..., 0.9176, 0.9176, 0.9137],
         [0.9843, 0.9843, 0.9843,  ..., 0.9176, 0.9176, 0.9176],
         [0.9843, 0.9843, 0.9843,  ..., 0.9176, 0.9176, 0.9176],
         ...,
         [0.6667, 0.6549, 0.6667,  ..., 0.7490, 0.6863, 0.6510],
         [0.7294, 0.7412, 0.7529,  ..., 0.5255, 0.6510, 0.6000],
         [0.7098, 0.6941, 0.7294,  ..., 0.5569, 0.5922, 0.5137]],

        [[0.9922, 0.9922, 0.9922,  ..., 0.8980, 0.8980, 0.8941],
         [0.9922, 0.9922, 0.9922,  ..., 0.8980, 0.8980, 0.8980],
         [0.9922, 0.9922, 0.9922,  ..., 0.8980, 0.8980, 0.8980],
         ...,
         [0.6000, 0.5882, 0.6000,  ..., 0.6745, 0.6118, 0.5765],
         [0.6627, 0.6745, 0.6941,  ..., 0.4588, 0.5843, 0.5333],
         [0.6431, 0.6392, 0.6745,  ..., 0.5020, 0.5373, 0.4588]]],
       device='cuda:3'), tensor([[[0.1569, 0.4275, 0.3961,  ..., 0.4196, 0.4196, 0.1569],
         [0.4627, 0.9961, 1.0000,  ..., 0.9922, 0.9922, 0.4824],
         [0.3961, 1.0000, 0.9529,  ..., 0.9608, 1.0000, 0.3843],
         ...,
         [0.4000, 0.9922, 0.9608,  ..., 0.9686, 0.9882, 0.4000],
         [0.4510, 1.0000, 1.0000,  ..., 0.9961, 1.0000, 0.4588],
         [0.1490, 0.4392, 0.3882,  ..., 0.4078, 0.4275, 0.1412]],

        [[0.1569, 0.4275, 0.3961,  ..., 0.4196, 0.4196, 0.1569],
         [0.4627, 0.9961, 1.0000,  ..., 0.9922, 0.9922, 0.4824],
         [0.3961, 1.0000, 0.9529,  ..., 0.9608, 1.0000, 0.3843],
         ...,
         [0.4000, 0.9922, 0.9608,  ..., 0.9686, 0.9882, 0.4000],
         [0.4510, 1.0000, 1.0000,  ..., 0.9961, 1.0000, 0.4588],
         [0.1490, 0.4392, 0.3882,  ..., 0.4078, 0.4275, 0.1412]],

        [[0.1569, 0.4275, 0.3961,  ..., 0.4196, 0.4196, 0.1569],
         [0.4627, 0.9961, 1.0000,  ..., 0.9922, 0.9922, 0.4824],
         [0.3961, 1.0000, 0.9529,  ..., 0.9608, 1.0000, 0.3843],
         ...,
         [0.4000, 0.9922, 0.9608,  ..., 0.9686, 0.9882, 0.4000],
         [0.4510, 1.0000, 1.0000,  ..., 0.9961, 1.0000, 0.4588],
         [0.1490, 0.4392, 0.3882,  ..., 0.4078, 0.4275, 0.1412]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[ 48.,  43., 459., 290.]], device='cuda:3'), 'labels': tensor([69], device='cuda:3'), 'image_id': tensor([157], device='cuda:3'), 'area': tensor([101517.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[ 46.,  48., 444., 309.]], device='cuda:3'), 'labels': tensor([48], device='cuda:3'), 'image_id': tensor([578], device='cuda:3'), 'area': tensor([103878.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(14828909., device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(603322.5000, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(6.0310, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.3316, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:15432238.0
[GPU:3] Losses reduced:12019711.0
[GPU:3] Loss value:12019711.0
[GPU:3] Images:[tensor([[[0.1922, 0.1922, 0.1922,  ..., 0.2510, 0.2510, 0.2510],
         [0.1961, 0.1961, 0.1961,  ..., 0.2431, 0.2431, 0.2431],
         [0.1961, 0.1961, 0.1961,  ..., 0.2392, 0.2392, 0.2392],
         ...,
         [0.1725, 0.1725, 0.1725,  ..., 0.9137, 0.9137, 0.9176],
         [0.1725, 0.1725, 0.1725,  ..., 0.9176, 0.9216, 0.9216],
         [0.1686, 0.1725, 0.1725,  ..., 0.9216, 0.9216, 0.9216]],

        [[0.2235, 0.2235, 0.2235,  ..., 0.2863, 0.2863, 0.2863],
         [0.2275, 0.2275, 0.2275,  ..., 0.2784, 0.2784, 0.2784],
         [0.2275, 0.2275, 0.2275,  ..., 0.2667, 0.2667, 0.2667],
         ...,
         [0.1922, 0.1922, 0.1922,  ..., 0.9059, 0.9059, 0.9098],
         [0.1922, 0.1922, 0.1922,  ..., 0.9098, 0.9137, 0.9137],
         [0.1882, 0.1922, 0.1922,  ..., 0.9137, 0.9137, 0.9137]],

        [[0.2667, 0.2667, 0.2667,  ..., 0.3216, 0.3216, 0.3216],
         [0.2706, 0.2706, 0.2706,  ..., 0.3059, 0.3059, 0.3059],
         [0.2706, 0.2706, 0.2706,  ..., 0.2902, 0.2902, 0.2902],
         ...,
         [0.2157, 0.2157, 0.2157,  ..., 0.9098, 0.9098, 0.9137],
         [0.2157, 0.2157, 0.2157,  ..., 0.9137, 0.9176, 0.9176],
         [0.2118, 0.2157, 0.2157,  ..., 0.9176, 0.9176, 0.9176]]],
       device='cuda:3'), tensor([[[0.7843, 0.7373, 0.5529,  ..., 0.6196, 0.6000, 0.6941],
         [0.7294, 0.7961, 0.6078,  ..., 0.7098, 0.7294, 0.7216],
         [0.6941, 0.6863, 0.7569,  ..., 0.7529, 0.7216, 0.7176],
         ...,
         [0.6471, 0.6667, 0.2353,  ..., 0.9059, 0.9490, 0.9216],
         [0.8510, 0.8353, 0.4549,  ..., 1.0000, 0.9255, 0.7216],
         [0.5961, 0.4824, 0.5647,  ..., 0.4706, 0.6784, 0.8510]],

        [[0.6745, 0.6078, 0.4314,  ..., 0.6235, 0.5922, 0.6784],
         [0.6431, 0.6980, 0.5176,  ..., 0.7216, 0.7373, 0.7255],
         [0.6275, 0.6078, 0.6824,  ..., 0.7451, 0.7137, 0.7098],
         ...,
         [0.5451, 0.5451, 0.1059,  ..., 0.7608, 0.8118, 0.8980],
         [0.7608, 0.7255, 0.3294,  ..., 0.9843, 0.8235, 0.7216],
         [0.5608, 0.4275, 0.4902,  ..., 0.2510, 0.4392, 0.7137]],

        [[0.6314, 0.6824, 0.4941,  ..., 0.6431, 0.6784, 0.8157],
         [0.4588, 0.6118, 0.4471,  ..., 0.6784, 0.7255, 0.7451],
         [0.4157, 0.4706, 0.5569,  ..., 0.8275, 0.7961, 0.7922],
         ...,
         [0.6431, 0.6039, 0.1725,  ..., 0.7255, 0.7373, 0.7961],
         [0.6392, 0.7137, 0.4824,  ..., 0.7882, 0.6235, 0.4863],
         [0.3451, 0.3922, 0.6667,  ..., 0.0118, 0.2157, 0.4549]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[ 80., 112., 499., 332.]], device='cuda:3'), 'labels': tensor([1], device='cuda:3'), 'image_id': tensor([1339], device='cuda:3'), 'area': tensor([92180.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[ 29.,   0., 499., 336.]], device='cuda:3'), 'labels': tensor([66], device='cuda:3'), 'image_id': tensor([6091], device='cuda:3'), 'area': tensor([157920.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(4.5506e+22, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(4.6653e+20, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(2243.4739, device='cuda:3',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(1527.4531, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:4.597245676582187e+22
[GPU:3] Losses reduced:4.557383415560405e+22
[GPU:3] Loss value:4.557383415560405e+22
[GPU:3] Images:[tensor([[[0.2667, 0.3216, 0.5098,  ..., 0.3843, 0.3098, 0.3176],
         [0.3922, 0.7255, 0.5333,  ..., 0.3569, 0.3529, 0.3725],
         [0.5529, 0.7765, 0.5686,  ..., 0.3686, 0.3843, 0.3608],
         ...,
         [0.2196, 0.2431, 0.1922,  ..., 0.0706, 0.0706, 0.0824],
         [0.2157, 0.2745, 0.3020,  ..., 0.0667, 0.0627, 0.0745],
         [0.2078, 0.2431, 0.2392,  ..., 0.0667, 0.0588, 0.0706]],

        [[0.3804, 0.4431, 0.6667,  ..., 0.3333, 0.3176, 0.3216],
         [0.3373, 0.5765, 0.6235,  ..., 0.3569, 0.3608, 0.3647],
         [0.4941, 0.7098, 0.6510,  ..., 0.4000, 0.3882, 0.3490],
         ...,
         [0.2392, 0.2431, 0.2275,  ..., 0.0863, 0.0902, 0.1020],
         [0.2196, 0.2627, 0.3373,  ..., 0.0824, 0.0824, 0.0941],
         [0.2000, 0.2392, 0.2392,  ..., 0.0824, 0.0784, 0.0902]],

        [[0.1294, 0.2196, 0.3922,  ..., 0.4353, 0.3765, 0.4000],
         [0.2314, 0.2980, 0.3490,  ..., 0.4510, 0.4431, 0.4510],
         [0.4745, 0.4980, 0.3804,  ..., 0.4902, 0.4980, 0.4549],
         ...,
         [0.2549, 0.2745, 0.2627,  ..., 0.0980, 0.1020, 0.1137],
         [0.2353, 0.2980, 0.3647,  ..., 0.0941, 0.0941, 0.1059],
         [0.2196, 0.2627, 0.2784,  ..., 0.0941, 0.0902, 0.1020]]],
       device='cuda:3'), tensor([[[0.8118, 0.8275, 0.8471,  ..., 0.6157, 0.6275, 0.6235],
         [0.7961, 0.8275, 0.8235,  ..., 0.6235, 0.6353, 0.6235],
         [0.7765, 0.8039, 0.7961,  ..., 0.6431, 0.6549, 0.6275],
         ...,
         [0.3529, 0.3569, 0.3137,  ..., 0.2667, 0.2471, 0.1490],
         [0.3216, 0.3216, 0.3020,  ..., 0.2510, 0.2549, 0.2118],
         [0.2941, 0.2941, 0.3098,  ..., 0.2196, 0.2667, 0.2588]],

        [[0.7373, 0.7529, 0.7725,  ..., 0.5176, 0.5294, 0.5137],
         [0.7216, 0.7529, 0.7490,  ..., 0.5255, 0.5373, 0.5176],
         [0.6980, 0.7255, 0.7216,  ..., 0.5569, 0.5608, 0.5333],
         ...,
         [0.2902, 0.3059, 0.2706,  ..., 0.2078, 0.1843, 0.0941],
         [0.2706, 0.2784, 0.2706,  ..., 0.1882, 0.1961, 0.1529],
         [0.2431, 0.2510, 0.2863,  ..., 0.1608, 0.2039, 0.2039]],

        [[0.7137, 0.7294, 0.7490,  ..., 0.5922, 0.6118, 0.6000],
         [0.6941, 0.7255, 0.7216,  ..., 0.6000, 0.6118, 0.5922],
         [0.6706, 0.6980, 0.6941,  ..., 0.6078, 0.6157, 0.5961],
         ...,
         [0.2392, 0.2392, 0.1922,  ..., 0.2353, 0.2275, 0.1451],
         [0.2078, 0.2000, 0.1882,  ..., 0.1882, 0.2078, 0.1725],
         [0.1765, 0.1725, 0.2000,  ..., 0.1412, 0.2039, 0.2039]]],
       device='cuda:3')]
[GPU:3] Targets:[{'boxes': tensor([[  7.,  81., 373., 498.]], device='cuda:3'), 'labels': tensor([4], device='cuda:3'), 'image_id': tensor([23767], device='cuda:3'), 'area': tensor([152622.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}, {'boxes': tensor([[ 79.,  66., 347., 277.]], device='cuda:3'), 'labels': tensor([4], device='cuda:3'), 'image_id': tensor([3483], device='cuda:3'), 'area': tensor([56548.], device='cuda:3'), 'iscrowd': tensor([0], device='cuda:3')}]
[GPU:3] Loss dict:{'loss_classifier': tensor(nan, device='cuda:3', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(nan, device='cuda:3', grad_fn=<DivBackward0>), 'loss_objectness': tensor(nan, device='cuda:3', grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(2.3512e+20, device='cuda:3', grad_fn=<DivBackward0>)}
[GPU:3] Sum of losses:nan
[GPU:3] Losses reduced:nan
[GPU:3] Loss value:nan
[GPU:3] Loss is nan, stopping training
{'loss_box_reg': tensor(nan, device='cuda:3'), 'loss_classifier': tensor(nan, device='cuda:3'), 'loss_objectness': tensor(nan, device='cuda:3'), 'loss_rpn_box_reg': tensor(1.5284e+20, device='cuda:3')}
[GPU:0] Images:[tensor([[[0.6627, 0.6627, 0.6588,  ..., 0.9490, 0.9569, 0.9490],
         [0.6471, 0.6471, 0.6510,  ..., 0.9569, 0.9451, 0.9569],
         [0.6392, 0.6392, 0.6431,  ..., 0.9451, 0.9569, 0.9373],
         ...,
         [0.6235, 0.6118, 0.5255,  ..., 0.3961, 0.3922, 0.3882],
         [0.6353, 0.6235, 0.5451,  ..., 0.4078, 0.4039, 0.4039],
         [0.6392, 0.6235, 0.5412,  ..., 0.4078, 0.4039, 0.4039]],

        [[0.6941, 0.6941, 0.6941,  ..., 0.9529, 0.9647, 0.9569],
         [0.6784, 0.6784, 0.6863,  ..., 0.9647, 0.9490, 0.9647],
         [0.6706, 0.6706, 0.6784,  ..., 0.9529, 0.9608, 0.9451],
         ...,
         [0.6549, 0.6431, 0.5412,  ..., 0.5020, 0.4941, 0.4902],
         [0.6627, 0.6510, 0.5608,  ..., 0.5098, 0.5059, 0.5059],
         [0.6667, 0.6510, 0.5608,  ..., 0.5098, 0.5059, 0.5059]],

        [[0.6431, 0.6431, 0.6275,  ..., 0.9608, 0.9608, 0.9451],
         [0.6196, 0.6196, 0.6196,  ..., 0.9451, 0.9569, 0.9608],
         [0.6118, 0.6118, 0.6118,  ..., 0.9490, 0.9804, 0.9255],
         ...,
         [0.5098, 0.4980, 0.4431,  ..., 0.2392, 0.2392, 0.2431],
         [0.5294, 0.5176, 0.4549,  ..., 0.2549, 0.2588, 0.2667],
         [0.5373, 0.5216, 0.4431,  ..., 0.2549, 0.2588, 0.2667]]],
       device='cuda:0'), tensor([[[0.4353, 0.4275, 0.4275,  ..., 0.0745, 0.0824, 0.1059],
         [0.4353, 0.4392, 0.4353,  ..., 0.0902, 0.0902, 0.0824],
         [0.4314, 0.4353, 0.4314,  ..., 0.1216, 0.0784, 0.1412],
         ...,
         [0.9255, 0.9529, 0.9490,  ..., 0.0627, 0.0392, 0.0667],
         [0.8902, 0.9098, 0.9412,  ..., 0.0549, 0.0431, 0.0235],
         [0.8980, 0.9098, 0.9647,  ..., 0.0471, 0.0667, 0.0549]],

        [[0.6824, 0.6863, 0.6863,  ..., 0.0980, 0.1020, 0.1137],
         [0.6941, 0.6980, 0.7020,  ..., 0.0980, 0.0941, 0.0588],
         [0.6980, 0.7020, 0.7020,  ..., 0.1216, 0.1255, 0.1882],
         ...,
         [0.8706, 0.8980, 0.8941,  ..., 0.1490, 0.1333, 0.1686],
         [0.8353, 0.8549, 0.8863,  ..., 0.1412, 0.1294, 0.1333],
         [0.8431, 0.8627, 0.9176,  ..., 0.1490, 0.1647, 0.1451]],

        [[0.9843, 0.9843, 0.9843,  ..., 0.0902, 0.0784, 0.1098],
         [0.9922, 0.9961, 0.9961,  ..., 0.0784, 0.0706, 0.0980],
         [0.9922, 0.9961, 0.9961,  ..., 0.1216, 0.0863, 0.1020],
         ...,
         [0.8196, 0.8471, 0.8510,  ..., 0.0588, 0.0314, 0.0627],
         [0.7843, 0.8039, 0.8353,  ..., 0.0510, 0.0392, 0.0431],
         [0.8000, 0.8157, 0.8706,  ..., 0.0431, 0.0784, 0.0667]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[  3.,  96., 316., 498.]], device='cuda:0'), 'labels': tensor([1], device='cuda:0'), 'image_id': tensor([6044], device='cuda:0'), 'area': tensor([125826.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[142.,  89., 381., 307.]], device='cuda:0'), 'labels': tensor([58], device='cuda:0'), 'image_id': tensor([14191], device='cuda:0'), 'area': tensor([52102.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(4.6036, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(1.4697e-05, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.6935, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0159, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:5.31306266784668
[GPU:0] Losses reduced:5.325780391693115
[GPU:0] Loss value:5.325780391693115
[GPU:0] Epoch: [0]  [   0/3750]  eta: 8:03:30  loss: 5.3258 (5.3258)  loss_box_reg: 0.0025 (0.0025)  loss_classifier: 4.6025 (4.6025)  loss_objectness: 0.6936 (0.6936)  loss_rpn_box_reg: 0.0272 (0.0272)  time: 7.7361  data: 2.3749  max mem: 5774
[GPU:0] Images:[tensor([[[0.3373, 0.3373, 0.3412,  ..., 0.2471, 0.2706, 0.2863],
         [0.3373, 0.3373, 0.3412,  ..., 0.2510, 0.2667, 0.2784],
         [0.3373, 0.3373, 0.3412,  ..., 0.2549, 0.2588, 0.2588],
         ...,
         [0.0902, 0.0706, 0.0549,  ..., 0.1059, 0.1137, 0.1137],
         [0.0627, 0.0431, 0.0314,  ..., 0.1098, 0.1176, 0.1176],
         [0.0353, 0.0157, 0.0078,  ..., 0.1137, 0.1176, 0.1176]],

        [[0.6627, 0.6627, 0.6667,  ..., 0.4588, 0.4824, 0.4980],
         [0.6627, 0.6627, 0.6667,  ..., 0.4627, 0.4784, 0.4902],
         [0.6627, 0.6627, 0.6667,  ..., 0.4667, 0.4706, 0.4706],
         ...,
         [0.3922, 0.3725, 0.3569,  ..., 0.4588, 0.4588, 0.4588],
         [0.3647, 0.3451, 0.3333,  ..., 0.4627, 0.4627, 0.4627],
         [0.3373, 0.3176, 0.3098,  ..., 0.4667, 0.4627, 0.4627]],

        [[0.6000, 0.6000, 0.6039,  ..., 0.4078, 0.4314, 0.4471],
         [0.6000, 0.6000, 0.6039,  ..., 0.4118, 0.4275, 0.4392],
         [0.6000, 0.6000, 0.6039,  ..., 0.4157, 0.4196, 0.4196],
         ...,
         [0.3137, 0.2941, 0.2784,  ..., 0.4118, 0.4118, 0.4118],
         [0.2863, 0.2667, 0.2549,  ..., 0.4157, 0.4157, 0.4157],
         [0.2588, 0.2392, 0.2314,  ..., 0.4196, 0.4157, 0.4157]]],
       device='cuda:0'), tensor([[[0.0039, 0.0039, 0.0039,  ..., 0.0902, 0.0863, 0.0824],
         [0.0039, 0.0039, 0.0039,  ..., 0.0863, 0.0824, 0.0784],
         [0.0039, 0.0039, 0.0039,  ..., 0.0824, 0.0784, 0.0745],
         ...,
         [0.5020, 0.4745, 0.4863,  ..., 0.2549, 0.0980, 0.2784],
         [0.4471, 0.4078, 0.4275,  ..., 0.3294, 0.3255, 0.5020],
         [0.3137, 0.3412, 0.3882,  ..., 0.3098, 0.5059, 0.5020]],

        [[0.0039, 0.0039, 0.0039,  ..., 0.0902, 0.0863, 0.0824],
         [0.0039, 0.0039, 0.0039,  ..., 0.0863, 0.0824, 0.0784],
         [0.0039, 0.0039, 0.0039,  ..., 0.0824, 0.0784, 0.0745],
         ...,
         [0.4784, 0.4510, 0.4627,  ..., 0.2078, 0.0549, 0.2392],
         [0.4235, 0.3843, 0.4039,  ..., 0.2824, 0.2824, 0.4627],
         [0.2902, 0.3176, 0.3647,  ..., 0.2627, 0.4627, 0.4627]],

        [[0.0039, 0.0039, 0.0039,  ..., 0.0902, 0.0863, 0.0824],
         [0.0039, 0.0039, 0.0039,  ..., 0.0863, 0.0824, 0.0784],
         [0.0039, 0.0039, 0.0039,  ..., 0.0824, 0.0784, 0.0745],
         ...,
         [0.5176, 0.4902, 0.5020,  ..., 0.2157, 0.0392, 0.2039],
         [0.4706, 0.4314, 0.4510,  ..., 0.2902, 0.2667, 0.4275],
         [0.3373, 0.3647, 0.4196,  ..., 0.2706, 0.4471, 0.4275]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[ 91.,   0., 635., 459.]], device='cuda:0'), 'labels': tensor([63], device='cuda:0'), 'image_id': tensor([28849], device='cuda:0'), 'area': tensor([249696.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[118.,  68., 317., 320.]], device='cuda:0'), 'labels': tensor([4], device='cuda:0'), 'image_id': tensor([14832], device='cuda:0'), 'area': tensor([50148.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(4.0845, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(5.3007e-06, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.6811, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0510, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:4.8165717124938965
[GPU:0] Losses reduced:4.789564609527588
[GPU:0] Loss value:4.789564609527588
[GPU:0] Images:[tensor([[[0.1176, 0.0980, 0.1176,  ..., 0.1294, 0.0706, 0.1294],
         [0.0902, 0.0824, 0.0235,  ..., 0.0510, 0.0824, 0.1098],
         [0.1294, 0.0471, 0.2824,  ..., 0.3059, 0.0314, 0.1020],
         ...,
         [0.1137, 0.0353, 0.2784,  ..., 0.2667, 0.0353, 0.1137],
         [0.0824, 0.0902, 0.0471,  ..., 0.0353, 0.0902, 0.1059],
         [0.1294, 0.1020, 0.1020,  ..., 0.0941, 0.1137, 0.0902]],

        [[0.0353, 0.0471, 0.0667,  ..., 0.0588, 0.0392, 0.0588],
         [0.0392, 0.0745, 0.0118,  ..., 0.0039, 0.0667, 0.0471],
         [0.0549, 0.0118, 0.2431,  ..., 0.2706, 0.0314, 0.0471],
         ...,
         [0.0784, 0.0078, 0.2627,  ..., 0.2667, 0.0039, 0.0745],
         [0.0314, 0.0471, 0.0157,  ..., 0.0157, 0.0471, 0.0549],
         [0.0667, 0.0471, 0.0549,  ..., 0.0431, 0.0588, 0.0353]],

        [[0.0157, 0.0118, 0.0314,  ..., 0.0431, 0.0000, 0.0039],
         [0.0039, 0.0275, 0.0000,  ..., 0.0039, 0.0235, 0.0000],
         [0.0314, 0.0000, 0.2471,  ..., 0.2902, 0.0000, 0.0039],
         ...,
         [0.0431, 0.0000, 0.2510,  ..., 0.2667, 0.0000, 0.0392],
         [0.0078, 0.0314, 0.0078,  ..., 0.0000, 0.0235, 0.0196],
         [0.0157, 0.0039, 0.0078,  ..., 0.0078, 0.0157, 0.0000]]],
       device='cuda:0'), tensor([[[0.0000, 0.0039, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0078, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0078, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],

        [[0.0078, 0.0118, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0078, 0.0157, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0157, 0.0118, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[246.,  91., 438., 314.],
        [ 25.,  23., 303., 298.]], device='cuda:0'), 'labels': tensor([1, 1], device='cuda:0'), 'image_id': tensor([28648], device='cuda:0'), 'area': tensor([42816., 76450.], device='cuda:0'), 'iscrowd': tensor([0, 0], device='cuda:0')}, {'boxes': tensor([[113.,  84., 290., 307.]], device='cuda:0'), 'labels': tensor([1], device='cuda:0'), 'image_id': tensor([11606], device='cuda:0'), 'area': tensor([39471.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(0.7719, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0668, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.6470, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0037, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:1.489500641822815
[GPU:0] Losses reduced:1.4989787340164185
[GPU:0] Loss value:1.4989787340164185
[GPU:0] Images:[tensor([[[0.2902, 0.2902, 0.2941,  ..., 0.2275, 0.2353, 0.2431],
         [0.2824, 0.2902, 0.3020,  ..., 0.2275, 0.2392, 0.2471],
         [0.3451, 0.3529, 0.3608,  ..., 0.2314, 0.2392, 0.2549],
         ...,
         [0.2510, 0.3412, 0.4941,  ..., 0.6745, 0.6588, 0.6392],
         [0.2706, 0.2980, 0.4667,  ..., 0.6706, 0.6471, 0.6235],
         [0.2941, 0.2941, 0.4235,  ..., 0.6706, 0.6431, 0.6118]],

        [[0.3059, 0.3059, 0.3059,  ..., 0.3490, 0.3569, 0.3647],
         [0.3333, 0.3294, 0.3294,  ..., 0.3451, 0.3569, 0.3647],
         [0.3765, 0.3804, 0.3882,  ..., 0.3412, 0.3490, 0.3529],
         ...,
         [0.3608, 0.4588, 0.7686,  ..., 0.5608, 0.5451, 0.5216],
         [0.5216, 0.4078, 0.7451,  ..., 0.5608, 0.5412, 0.5098],
         [0.4902, 0.4902, 0.7373,  ..., 0.5725, 0.5451, 0.5059]],

        [[0.1765, 0.1765, 0.1922,  ..., 0.1137, 0.1216, 0.1294],
         [0.1608, 0.1922, 0.1961,  ..., 0.1098, 0.1216, 0.1294],
         [0.1922, 0.2157, 0.2235,  ..., 0.1137, 0.1176, 0.1255],
         ...,
         [0.1216, 0.2078, 0.2902,  ..., 0.3020, 0.2706, 0.2392],
         [0.1412, 0.2157, 0.2353,  ..., 0.3059, 0.2706, 0.2353],
         [0.1176, 0.2431, 0.2078,  ..., 0.3216, 0.2824, 0.2353]]],
       device='cuda:0'), tensor([[[0.2039, 0.2235, 0.2196,  ..., 0.2039, 0.1804, 0.2118],
         [0.2196, 0.2353, 0.2118,  ..., 0.2118, 0.1882, 0.1882],
         [0.2118, 0.2392, 0.2157,  ..., 0.2000, 0.1882, 0.1765],
         ...,
         [0.5529, 0.5529, 0.5647,  ..., 0.4196, 0.4118, 0.4039],
         [0.5451, 0.5490, 0.5608,  ..., 0.4039, 0.3961, 0.4000],
         [0.5451, 0.5490, 0.5647,  ..., 0.4314, 0.4235, 0.4000]],

        [[0.1569, 0.1765, 0.1686,  ..., 0.1569, 0.1373, 0.1804],
         [0.1725, 0.1882, 0.1608,  ..., 0.1686, 0.1569, 0.1647],
         [0.1647, 0.1922, 0.1647,  ..., 0.1686, 0.1647, 0.1529],
         ...,
         [0.5529, 0.5529, 0.5569,  ..., 0.4078, 0.3922, 0.3804],
         [0.5451, 0.5490, 0.5451,  ..., 0.3922, 0.3765, 0.3765],
         [0.5451, 0.5412, 0.5373,  ..., 0.4118, 0.4039, 0.3765]],

        [[0.0627, 0.0902, 0.0941,  ..., 0.0706, 0.0510, 0.0902],
         [0.0784, 0.1020, 0.0863,  ..., 0.0824, 0.0667, 0.0706],
         [0.0784, 0.1059, 0.0902,  ..., 0.0863, 0.0784, 0.0667],
         ...,
         [0.3490, 0.3569, 0.3647,  ..., 0.3333, 0.3137, 0.2941],
         [0.3412, 0.3529, 0.3569,  ..., 0.3176, 0.2980, 0.2902],
         [0.3412, 0.3490, 0.3569,  ..., 0.3373, 0.3255, 0.2902]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[  0.,  11., 331., 498.]], device='cuda:0'), 'labels': tensor([12], device='cuda:0'), 'image_id': tensor([19], device='cuda:0'), 'area': tensor([161197.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[  0.,   0., 498., 331.]], device='cuda:0'), 'labels': tensor([57], device='cuda:0'), 'image_id': tensor([12589], device='cuda:0'), 'area': tensor([164838.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(0.2545, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0066, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.5445, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.3133, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:1.1188870668411255
[GPU:0] Losses reduced:2.3331806659698486
[GPU:0] Loss value:2.3331806659698486
[GPU:0] Images:[tensor([[[0.2706, 0.2784, 0.2863,  ..., 0.7922, 0.7961, 0.7961],
         [0.2745, 0.2824, 0.2941,  ..., 0.7961, 0.8000, 0.8039],
         [0.2784, 0.2863, 0.2980,  ..., 0.8039, 0.8078, 0.8118],
         ...,
         [0.3255, 0.3255, 0.3255,  ..., 0.4980, 0.4902, 0.4824],
         [0.3255, 0.3255, 0.3255,  ..., 0.5059, 0.4941, 0.4863],
         [0.3294, 0.3294, 0.3294,  ..., 0.5098, 0.5020, 0.4902]],

        [[0.1843, 0.1922, 0.2000,  ..., 0.7804, 0.7843, 0.7843],
         [0.1882, 0.1961, 0.2078,  ..., 0.7843, 0.7882, 0.7922],
         [0.1922, 0.2000, 0.2118,  ..., 0.7922, 0.7961, 0.8000],
         ...,
         [0.1922, 0.1922, 0.1922,  ..., 0.4706, 0.4627, 0.4549],
         [0.1922, 0.1922, 0.1922,  ..., 0.4784, 0.4667, 0.4588],
         [0.1961, 0.1961, 0.1961,  ..., 0.4824, 0.4745, 0.4627]],

        [[0.1333, 0.1412, 0.1490,  ..., 0.7608, 0.7647, 0.7647],
         [0.1373, 0.1451, 0.1569,  ..., 0.7647, 0.7686, 0.7725],
         [0.1412, 0.1490, 0.1608,  ..., 0.7725, 0.7765, 0.7804],
         ...,
         [0.0941, 0.0941, 0.0941,  ..., 0.4471, 0.4392, 0.4314],
         [0.0941, 0.0941, 0.0941,  ..., 0.4549, 0.4431, 0.4353],
         [0.0980, 0.0980, 0.0980,  ..., 0.4588, 0.4510, 0.4392]]],
       device='cuda:0'), tensor([[[0.7882, 0.7843, 0.7686,  ..., 0.3176, 0.4392, 0.4078],
         [0.7373, 0.7294, 0.8824,  ..., 0.3216, 0.4275, 0.4000],
         [0.7922, 0.7412, 0.9098,  ..., 0.3137, 0.4392, 0.4118],
         ...,
         [0.2863, 0.2941, 0.2314,  ..., 0.3137, 0.3294, 0.3765],
         [0.1529, 0.1216, 0.0667,  ..., 0.2392, 0.2784, 0.3255],
         [0.1608, 0.0627, 0.0235,  ..., 0.3412, 0.3529, 0.3255]],

        [[0.7451, 0.7451, 0.7333,  ..., 0.2824, 0.3922, 0.3725],
         [0.7098, 0.7098, 0.8667,  ..., 0.2902, 0.3843, 0.3529],
         [0.7608, 0.7216, 0.8980,  ..., 0.2941, 0.3961, 0.3765],
         ...,
         [0.3529, 0.4000, 0.3569,  ..., 0.4510, 0.4549, 0.4980],
         [0.3020, 0.2706, 0.2078,  ..., 0.4196, 0.4353, 0.4588],
         [0.2667, 0.1765, 0.1333,  ..., 0.4784, 0.4706, 0.4314]],

        [[0.7294, 0.7412, 0.7451,  ..., 0.2941, 0.4000, 0.3529],
         [0.6784, 0.6941, 0.8627,  ..., 0.2784, 0.3686, 0.4000],
         [0.8510, 0.8078, 0.9725,  ..., 0.2706, 0.3725, 0.3961],
         ...,
         [0.2275, 0.1373, 0.1020,  ..., 0.4353, 0.4353, 0.4784],
         [0.0706, 0.0314, 0.0196,  ..., 0.4196, 0.4314, 0.4627],
         [0.1294, 0.0667, 0.0431,  ..., 0.4549, 0.4392, 0.3961]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[  2.,  55., 500., 385.]], device='cuda:0'), 'labels': tensor([4], device='cuda:0'), 'image_id': tensor([20099], device='cuda:0'), 'area': tensor([164340.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[256., 101., 334., 185.]], device='cuda:0'), 'labels': tensor([69], device='cuda:0'), 'image_id': tensor([3262], device='cuda:0'), 'area': tensor([6552.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(6.8857, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.1293, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.1980, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0094, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:7.222344398498535
[GPU:0] Losses reduced:7.243494510650635
[GPU:0] Loss value:7.243494510650635
[GPU:0] Images:[tensor([[[0.3490, 0.3451, 0.3490,  ..., 0.3725, 0.3725, 0.3725],
         [0.3529, 0.3490, 0.3490,  ..., 0.3765, 0.3725, 0.3725],
         [0.3529, 0.3490, 0.3529,  ..., 0.3765, 0.3765, 0.3725],
         ...,
         [0.5882, 0.5804, 0.5882,  ..., 0.6118, 0.5804, 0.6431],
         [0.5882, 0.5922, 0.6000,  ..., 0.6588, 0.6275, 0.6745],
         [0.5882, 0.6039, 0.6118,  ..., 0.6824, 0.6039, 0.6039]],

        [[0.3608, 0.3569, 0.3608,  ..., 0.3922, 0.3922, 0.3922],
         [0.3647, 0.3608, 0.3608,  ..., 0.3961, 0.3922, 0.3922],
         [0.3647, 0.3608, 0.3647,  ..., 0.3961, 0.3961, 0.3922],
         ...,
         [0.5137, 0.5059, 0.5137,  ..., 0.5333, 0.5020, 0.5647],
         [0.5137, 0.5176, 0.5255,  ..., 0.5804, 0.5490, 0.5961],
         [0.5137, 0.5294, 0.5373,  ..., 0.6039, 0.5255, 0.5255]],

        [[0.4196, 0.4157, 0.4196,  ..., 0.4667, 0.4667, 0.4667],
         [0.4235, 0.4196, 0.4196,  ..., 0.4706, 0.4667, 0.4667],
         [0.4235, 0.4196, 0.4235,  ..., 0.4706, 0.4706, 0.4667],
         ...,
         [0.4902, 0.4824, 0.4902,  ..., 0.5059, 0.4745, 0.5373],
         [0.4902, 0.4941, 0.5020,  ..., 0.5529, 0.5216, 0.5686],
         [0.4902, 0.5059, 0.5137,  ..., 0.5765, 0.4980, 0.4980]]],
       device='cuda:0'), tensor([[[0.7804, 0.7608, 0.7843,  ..., 0.7373, 0.7490, 0.7569],
         [0.7882, 0.7647, 0.7843,  ..., 0.7255, 0.7333, 0.7412],
         [0.7843, 0.7647, 0.7804,  ..., 0.7294, 0.7333, 0.7490],
         ...,
         [0.4353, 0.4157, 0.3725,  ..., 0.5961, 0.6078, 0.5804],
         [0.3765, 0.3843, 0.3686,  ..., 0.5569, 0.5529, 0.5373],
         [0.2902, 0.3333, 0.3725,  ..., 0.4314, 0.4314, 0.4471]],

        [[0.7490, 0.7294, 0.7451,  ..., 0.6824, 0.6941, 0.7020],
         [0.7569, 0.7333, 0.7529,  ..., 0.6706, 0.6784, 0.6863],
         [0.7647, 0.7451, 0.7608,  ..., 0.6745, 0.6784, 0.6941],
         ...,
         [0.5333, 0.5216, 0.4745,  ..., 0.6980, 0.7098, 0.6824],
         [0.4784, 0.4824, 0.4745,  ..., 0.6706, 0.6588, 0.6431],
         [0.3922, 0.4353, 0.4706,  ..., 0.5529, 0.5451, 0.5608]],

        [[0.7373, 0.7176, 0.7373,  ..., 0.6784, 0.6902, 0.6980],
         [0.7451, 0.7216, 0.7412,  ..., 0.6667, 0.6745, 0.6824],
         [0.7490, 0.7294, 0.7451,  ..., 0.6627, 0.6667, 0.6824],
         ...,
         [0.6118, 0.6039, 0.5647,  ..., 0.8275, 0.8392, 0.8118],
         [0.5373, 0.5608, 0.5569,  ..., 0.7882, 0.7765, 0.7608],
         [0.4431, 0.5020, 0.5569,  ..., 0.6667, 0.6627, 0.6784]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[ 37.,  12., 316., 486.]], device='cuda:0'), 'labels': tensor([4], device='cuda:0'), 'image_id': tensor([15458], device='cuda:0'), 'area': tensor([132246.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[ 76.,  74., 366., 282.]], device='cuda:0'), 'labels': tensor([53], device='cuda:0'), 'image_id': tensor([75], device='cuda:0'), 'area': tensor([60320.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(2.0723, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.1547, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.1834, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0440, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:2.454462766647339
[GPU:0] Losses reduced:2.0587098598480225
[GPU:0] Loss value:2.0587098598480225
[GPU:0] Images:[tensor([[[0.1098, 0.1333, 0.1333,  ..., 0.4941, 0.4667, 0.4471],
         [0.1137, 0.1490, 0.1608,  ..., 0.4784, 0.4627, 0.4392],
         [0.1333, 0.1686, 0.1765,  ..., 0.4745, 0.4588, 0.4196],
         ...,
         [0.0824, 0.0667, 0.0824,  ..., 0.8157, 0.8118, 0.8078],
         [0.0706, 0.0549, 0.0745,  ..., 0.8118, 0.8039, 0.8000],
         [0.0588, 0.0471, 0.0667,  ..., 0.8039, 0.8039, 0.7961]],

        [[0.0863, 0.1098, 0.1098,  ..., 0.4157, 0.3922, 0.3843],
         [0.0902, 0.1176, 0.1333,  ..., 0.4039, 0.4039, 0.3882],
         [0.1020, 0.1294, 0.1294,  ..., 0.4000, 0.4000, 0.3804],
         ...,
         [0.0627, 0.0471, 0.0627,  ..., 0.7255, 0.7216, 0.7255],
         [0.0588, 0.0392, 0.0588,  ..., 0.7216, 0.7137, 0.7137],
         [0.0549, 0.0431, 0.0627,  ..., 0.7137, 0.7137, 0.7216]],

        [[0.0314, 0.0549, 0.0471,  ..., 0.2863, 0.2667, 0.2549],
         [0.0353, 0.0667, 0.0706,  ..., 0.2745, 0.2745, 0.2549],
         [0.0510, 0.0824, 0.0745,  ..., 0.2706, 0.2706, 0.2431],
         ...,
         [0.0471, 0.0353, 0.0510,  ..., 0.5608, 0.5569, 0.5569],
         [0.0392, 0.0275, 0.0471,  ..., 0.5569, 0.5490, 0.5529],
         [0.0353, 0.0235, 0.0431,  ..., 0.5412, 0.5490, 0.5569]]],
       device='cuda:0'), tensor([[[0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0157, 0.0157, 0.0078,  ..., 0.0039, 0.0039, 0.0039],
         [0.0118, 0.0118, 0.0078,  ..., 0.0039, 0.0039, 0.0039],
         [0.0118, 0.0039, 0.0078,  ..., 0.0039, 0.0039, 0.0039]],

        [[0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0471, 0.0471, 0.0549,  ..., 0.0039, 0.0039, 0.0039],
         [0.0510, 0.0510, 0.0549,  ..., 0.0039, 0.0039, 0.0039],
         [0.0588, 0.0627, 0.0627,  ..., 0.0039, 0.0039, 0.0039]],

        [[0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0549, 0.0549, 0.0549,  ..., 0.0039, 0.0039, 0.0039],
         [0.0471, 0.0471, 0.0549,  ..., 0.0039, 0.0039, 0.0039],
         [0.0510, 0.0510, 0.0627,  ..., 0.0039, 0.0039, 0.0039]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[  2.,   0., 384., 332.]], device='cuda:0'), 'labels': tensor([4], device='cuda:0'), 'image_id': tensor([28862], device='cuda:0'), 'area': tensor([126824.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[138.,  98., 498., 333.]], device='cuda:0'), 'labels': tensor([15], device='cuda:0'), 'image_id': tensor([26741], device='cuda:0'), 'area': tensor([84600.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(0.6925, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0338, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.3830, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0567, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:1.166002631187439
[GPU:0] Losses reduced:1.471348524093628
[GPU:0] Loss value:1.471348524093628
[GPU:0] Images:[tensor([[[0.5961, 0.6078, 0.6157,  ..., 0.4078, 0.4039, 0.4235],
         [0.6078, 0.6078, 0.6118,  ..., 0.4824, 0.4745, 0.4824],
         [0.6196, 0.6118, 0.6118,  ..., 0.1961, 0.2157, 0.2392],
         ...,
         [0.6627, 0.6510, 0.6588,  ..., 0.6588, 0.6549, 0.6784],
         [0.6392, 0.6471, 0.6510,  ..., 0.6471, 0.6353, 0.6549],
         [0.6549, 0.6745, 0.6706,  ..., 0.6510, 0.6353, 0.6510]],

        [[0.4824, 0.4941, 0.4980,  ..., 0.5922, 0.5961, 0.6118],
         [0.4863, 0.4902, 0.4980,  ..., 0.7569, 0.7529, 0.7608],
         [0.4863, 0.4902, 0.4980,  ..., 0.3490, 0.3686, 0.3882],
         ...,
         [0.6392, 0.6353, 0.6431,  ..., 0.6314, 0.6275, 0.6510],
         [0.6275, 0.6314, 0.6431,  ..., 0.6275, 0.6157, 0.6392],
         [0.6431, 0.6588, 0.6627,  ..., 0.6431, 0.6275, 0.6549]],

        [[0.3569, 0.3765, 0.3882,  ..., 0.8588, 0.8667, 0.8941],
         [0.3765, 0.3804, 0.3804,  ..., 1.0000, 1.0000, 1.0000],
         [0.3882, 0.3804, 0.3804,  ..., 0.5020, 0.5373, 0.5647],
         ...,
         [0.5843, 0.5882, 0.6000,  ..., 0.5686, 0.5647, 0.5882],
         [0.5686, 0.5843, 0.5961,  ..., 0.6039, 0.5922, 0.6039],
         [0.5843, 0.6118, 0.6157,  ..., 0.5843, 0.5686, 0.5922]]],
       device='cuda:0'), tensor([[[0.6039, 0.5961, 0.5882,  ..., 0.7373, 0.7373, 0.7333],
         [0.5843, 0.5843, 0.5765,  ..., 0.7294, 0.7216, 0.7137],
         [0.6196, 0.6196, 0.6196,  ..., 0.7216, 0.7098, 0.6980],
         ...,
         [0.5961, 0.5961, 0.5961,  ..., 0.5529, 0.5490, 0.5490],
         [0.5922, 0.5922, 0.5922,  ..., 0.5569, 0.5529, 0.5451],
         [0.5882, 0.5843, 0.5843,  ..., 0.5686, 0.5569, 0.5490]],

        [[0.6431, 0.6353, 0.6275,  ..., 0.7765, 0.7765, 0.7725],
         [0.6235, 0.6235, 0.6157,  ..., 0.7686, 0.7608, 0.7529],
         [0.6588, 0.6588, 0.6588,  ..., 0.7608, 0.7490, 0.7373],
         ...,
         [0.5922, 0.5922, 0.5922,  ..., 0.5647, 0.5608, 0.5608],
         [0.5843, 0.5843, 0.5843,  ..., 0.5686, 0.5647, 0.5569],
         [0.5804, 0.5765, 0.5765,  ..., 0.5804, 0.5686, 0.5608]],

        [[0.6510, 0.6431, 0.6353,  ..., 0.8118, 0.8118, 0.8118],
         [0.6314, 0.6314, 0.6235,  ..., 0.8039, 0.7961, 0.7882],
         [0.6667, 0.6667, 0.6667,  ..., 0.7961, 0.7843, 0.7725],
         ...,
         [0.5137, 0.5137, 0.5137,  ..., 0.5216, 0.5176, 0.5176],
         [0.5020, 0.5020, 0.5020,  ..., 0.5255, 0.5216, 0.5137],
         [0.4902, 0.4863, 0.4863,  ..., 0.5373, 0.5255, 0.5176]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[ 67.,   9., 282., 172.]], device='cuda:0'), 'labels': tensor([24], device='cuda:0'), 'image_id': tensor([13159], device='cuda:0'), 'area': tensor([35045.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[240.,  45., 385., 262.]], device='cuda:0'), 'labels': tensor([4], device='cuda:0'), 'image_id': tensor([4819], device='cuda:0'), 'area': tensor([31465.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(0.4221, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.2120, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.1050, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0058, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:0.7449272274971008
[GPU:0] Losses reduced:0.567929208278656
[GPU:0] Loss value:0.567929208278656
[GPU:0] Images:[tensor([[[0.8000, 0.7961, 0.7961,  ..., 0.7686, 0.7686, 0.7686],
         [0.7922, 0.7961, 0.8000,  ..., 0.7922, 0.7922, 0.7922],
         [0.7608, 0.7765, 0.7922,  ..., 0.8118, 0.8118, 0.8118],
         ...,
         [0.4471, 0.5490, 0.5686,  ..., 0.6039, 0.6000, 0.6078],
         [0.4980, 0.5059, 0.5569,  ..., 0.5255, 0.5529, 0.5922],
         [0.5490, 0.5412, 0.5686,  ..., 0.5020, 0.5294, 0.5686]],

        [[0.7647, 0.7608, 0.7608,  ..., 0.7294, 0.7294, 0.7294],
         [0.7569, 0.7608, 0.7647,  ..., 0.7529, 0.7529, 0.7529],
         [0.7255, 0.7412, 0.7569,  ..., 0.7725, 0.7725, 0.7725],
         ...,
         [0.4353, 0.5373, 0.5569,  ..., 0.5922, 0.5882, 0.5961],
         [0.4863, 0.4941, 0.5451,  ..., 0.5412, 0.5686, 0.6078],
         [0.5373, 0.5294, 0.5569,  ..., 0.5216, 0.5490, 0.5882]],

        [[0.6980, 0.7020, 0.7020,  ..., 0.6902, 0.6902, 0.6902],
         [0.6902, 0.7020, 0.7059,  ..., 0.7137, 0.7137, 0.7137],
         [0.6588, 0.6824, 0.6980,  ..., 0.7333, 0.7333, 0.7333],
         ...,
         [0.4157, 0.5176, 0.5373,  ..., 0.5725, 0.5686, 0.5765],
         [0.4588, 0.4667, 0.5255,  ..., 0.5451, 0.5725, 0.6118],
         [0.5098, 0.5020, 0.5373,  ..., 0.5333, 0.5608, 0.6000]]],
       device='cuda:0'), tensor([[[0.2510, 0.2510, 0.2549,  ..., 0.0353, 0.0353, 0.0471],
         [0.2745, 0.2745, 0.2706,  ..., 0.0353, 0.0392, 0.0510],
         [0.2863, 0.2824, 0.2745,  ..., 0.0431, 0.0431, 0.0588],
         ...,
         [0.2706, 0.2588, 0.3098,  ..., 0.3490, 0.3529, 0.3765],
         [0.3608, 0.3725, 0.4196,  ..., 0.4196, 0.4353, 0.4549],
         [0.4627, 0.4980, 0.5412,  ..., 0.5059, 0.5255, 0.5373]],

        [[0.3451, 0.3451, 0.3490,  ..., 0.0745, 0.0627, 0.0784],
         [0.3647, 0.3647, 0.3608,  ..., 0.0745, 0.0667, 0.0784],
         [0.3686, 0.3647, 0.3569,  ..., 0.0667, 0.0706, 0.0863],
         ...,
         [0.3294, 0.3176, 0.3686,  ..., 0.4431, 0.4431, 0.4627],
         [0.4392, 0.4510, 0.4980,  ..., 0.5137, 0.5255, 0.5451],
         [0.5569, 0.5922, 0.6353,  ..., 0.6000, 0.6157, 0.6275]],

        [[0.3922, 0.3922, 0.3961,  ..., 0.0392, 0.0314, 0.0353],
         [0.4196, 0.4196, 0.4157,  ..., 0.0431, 0.0353, 0.0471],
         [0.4431, 0.4392, 0.4314,  ..., 0.0510, 0.0431, 0.0588],
         ...,
         [0.4431, 0.4314, 0.4824,  ..., 0.6314, 0.6549, 0.6863],
         [0.5686, 0.5804, 0.6275,  ..., 0.6941, 0.7294, 0.7569],
         [0.6980, 0.7333, 0.7765,  ..., 0.7725, 0.8118, 0.8314]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[  5.,   0., 128., 244.]], device='cuda:0'), 'labels': tensor([69], device='cuda:0'), 'image_id': tensor([19255], device='cuda:0'), 'area': tensor([30012.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[  1.,  39., 324., 317.]], device='cuda:0'), 'labels': tensor([4], device='cuda:0'), 'image_id': tensor([4964], device='cuda:0'), 'area': tensor([89794.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(4.4524, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.1916, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.0952, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0643, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:4.803535461425781
[GPU:0] Losses reduced:4.887511730194092
[GPU:0] Loss value:4.887511730194092
[GPU:0] Images:[tensor([[[0.3765, 0.3882, 0.4039,  ..., 0.6745, 0.7020, 0.7373],
         [0.4196, 0.4275, 0.4471,  ..., 0.6745, 0.6863, 0.7216],
         [0.4627, 0.4353, 0.4510,  ..., 0.6745, 0.6824, 0.7137],
         ...,
         [0.6784, 0.4941, 0.5137,  ..., 0.4784, 0.5255, 0.5725],
         [0.6314, 0.5922, 0.5137,  ..., 0.6431, 0.6902, 0.5608],
         [0.7294, 0.7529, 0.7490,  ..., 0.6471, 0.5765, 0.5216]],

        [[0.3843, 0.3961, 0.4118,  ..., 0.7176, 0.7373, 0.7686],
         [0.4353, 0.4431, 0.4627,  ..., 0.7098, 0.7216, 0.7569],
         [0.4824, 0.4549, 0.4706,  ..., 0.7098, 0.7176, 0.7490],
         ...,
         [0.5804, 0.3647, 0.3765,  ..., 0.3569, 0.3765, 0.3882],
         [0.4941, 0.4235, 0.3294,  ..., 0.5176, 0.5412, 0.3922],
         [0.6196, 0.6118, 0.5961,  ..., 0.5216, 0.4353, 0.3608]],

        [[0.3647, 0.3765, 0.4000,  ..., 0.7412, 0.7647, 0.8118],
         [0.4392, 0.4471, 0.4667,  ..., 0.7294, 0.7490, 0.7922],
         [0.4980, 0.4706, 0.4824,  ..., 0.7294, 0.7451, 0.7843],
         ...,
         [0.5020, 0.2902, 0.3020,  ..., 0.2784, 0.3020, 0.3176],
         [0.4196, 0.3490, 0.2588,  ..., 0.4196, 0.4588, 0.3176],
         [0.5647, 0.5490, 0.5294,  ..., 0.4235, 0.3490, 0.2824]]],
       device='cuda:0'), tensor([[[0.2510, 0.2039, 0.1373,  ..., 0.3529, 0.3451, 0.3451],
         [0.2392, 0.1961, 0.1373,  ..., 0.3529, 0.3451, 0.3451],
         [0.2235, 0.1922, 0.1490,  ..., 0.3569, 0.3451, 0.3451],
         ...,
         [0.6039, 0.4588, 0.5137,  ..., 0.4353, 0.4314, 0.3843],
         [0.5216, 0.5098, 0.5725,  ..., 0.6000, 0.5451, 0.4980],
         [0.4745, 0.4902, 0.5922,  ..., 0.6000, 0.5451, 0.4980]],

        [[0.4196, 0.3725, 0.3020,  ..., 0.5294, 0.5216, 0.5137],
         [0.4078, 0.3647, 0.3020,  ..., 0.5294, 0.5216, 0.5137],
         [0.3922, 0.3608, 0.3137,  ..., 0.5333, 0.5216, 0.5137],
         ...,
         [0.8000, 0.6549, 0.7098,  ..., 0.5216, 0.5176, 0.4706],
         [0.7176, 0.7059, 0.7686,  ..., 0.6863, 0.6314, 0.5843],
         [0.6706, 0.6863, 0.7882,  ..., 0.6863, 0.6314, 0.5843]],

        [[0.1412, 0.1020, 0.0431,  ..., 0.1725, 0.1647, 0.1608],
         [0.1294, 0.0941, 0.0431,  ..., 0.1725, 0.1647, 0.1608],
         [0.1137, 0.0902, 0.0549,  ..., 0.1765, 0.1647, 0.1608],
         ...,
         [0.3490, 0.2039, 0.2588,  ..., 0.1373, 0.1333, 0.0863],
         [0.2667, 0.2549, 0.3176,  ..., 0.3020, 0.2471, 0.2000],
         [0.2196, 0.2353, 0.3373,  ..., 0.3020, 0.2471, 0.2000]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[ 61.,  45., 261., 488.]], device='cuda:0'), 'labels': tensor([4], device='cuda:0'), 'image_id': tensor([25734], device='cuda:0'), 'area': tensor([88600.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[ 46.,  14., 351., 334.]], device='cuda:0'), 'labels': tensor([4], device='cuda:0'), 'image_id': tensor([11775], device='cuda:0'), 'area': tensor([97600.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(0.2326, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0536, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.3032, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0121, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:0.6014524102210999
[GPU:0] Losses reduced:0.6107518672943115
[GPU:0] Loss value:0.6107518672943115
[GPU:0] Images:[tensor([[[0.6510, 0.6549, 0.6549,  ..., 0.1765, 0.1412, 0.1216],
         [0.6549, 0.6549, 0.6549,  ..., 0.1608, 0.1804, 0.1490],
         [0.6549, 0.6549, 0.6627,  ..., 0.0549, 0.0745, 0.0784],
         ...,
         [0.1961, 0.2118, 0.1647,  ..., 0.1176, 0.1608, 0.1843],
         [0.1804, 0.1725, 0.1961,  ..., 0.2471, 0.2196, 0.1098],
         [0.1608, 0.1843, 0.1373,  ..., 0.0392, 0.1608, 0.2196]],

        [[0.6902, 0.6941, 0.6941,  ..., 0.1373, 0.1059, 0.1020],
         [0.6941, 0.6941, 0.6941,  ..., 0.1373, 0.1294, 0.1098],
         [0.6941, 0.6941, 0.7020,  ..., 0.0549, 0.0510, 0.0627],
         ...,
         [0.1804, 0.1961, 0.1451,  ..., 0.1059, 0.1176, 0.1608],
         [0.1647, 0.1569, 0.1765,  ..., 0.2471, 0.1882, 0.1020],
         [0.1451, 0.1647, 0.1176,  ..., 0.0392, 0.1451, 0.2196]],

        [[0.7294, 0.7333, 0.7333,  ..., 0.1020, 0.0471, 0.0784],
         [0.7412, 0.7412, 0.7412,  ..., 0.0824, 0.0667, 0.1020],
         [0.7412, 0.7412, 0.7490,  ..., 0.0235, 0.0510, 0.0510],
         ...,
         [0.1765, 0.1922, 0.1333,  ..., 0.0863, 0.1020, 0.1137],
         [0.1608, 0.1529, 0.1647,  ..., 0.2392, 0.1804, 0.0549],
         [0.1412, 0.1529, 0.1059,  ..., 0.0471, 0.1490, 0.1725]]],
       device='cuda:0'), tensor([[[0.3294, 0.2745, 0.2784,  ..., 0.3765, 0.3686, 0.4157],
         [0.3333, 0.2980, 0.2667,  ..., 0.3843, 0.3804, 0.3922],
         [0.2784, 0.2824, 0.2667,  ..., 0.4275, 0.4235, 0.4157],
         ...,
         [0.7451, 0.7882, 0.8353,  ..., 0.5608, 0.5176, 0.4941],
         [0.7451, 0.7882, 0.8118,  ..., 0.5569, 0.4980, 0.4902],
         [0.7333, 0.7608, 0.7765,  ..., 0.5490, 0.5020, 0.4706]],

        [[0.3059, 0.2588, 0.2627,  ..., 0.3098, 0.3020, 0.3490],
         [0.3098, 0.2745, 0.2431,  ..., 0.3176, 0.3137, 0.3255],
         [0.2431, 0.2471, 0.2353,  ..., 0.3608, 0.3569, 0.3490],
         ...,
         [0.7294, 0.7725, 0.8196,  ..., 0.5373, 0.4980, 0.4863],
         [0.7490, 0.7804, 0.8039,  ..., 0.5333, 0.4784, 0.4784],
         [0.7412, 0.7686, 0.7725,  ..., 0.5216, 0.4902, 0.4588]],

        [[0.2588, 0.2118, 0.2157,  ..., 0.2706, 0.2706, 0.3176],
         [0.2627, 0.2275, 0.1961,  ..., 0.2863, 0.2824, 0.2941],
         [0.2078, 0.2118, 0.1922,  ..., 0.3294, 0.3255, 0.3176],
         ...,
         [0.6157, 0.6588, 0.7059,  ..., 0.4510, 0.4118, 0.4039],
         [0.5843, 0.6275, 0.6549,  ..., 0.4000, 0.3529, 0.3490],
         [0.5490, 0.5843, 0.6000,  ..., 0.3569, 0.3216, 0.2980]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[  1.,  34., 493., 333.]], device='cuda:0'), 'labels': tensor([11], device='cuda:0'), 'image_id': tensor([23242], device='cuda:0'), 'area': tensor([147108.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[  6.,  64., 291., 370.]], device='cuda:0'), 'labels': tensor([1], device='cuda:0'), 'image_id': tensor([6441], device='cuda:0'), 'area': tensor([87210.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(0.7775, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0758, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.3130, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0765, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:1.2429229021072388
[GPU:0] Losses reduced:1.3450931310653687
[GPU:0] Loss value:1.3450931310653687
[GPU:0] Images:[tensor([[[0.1569, 0.2745, 0.2196,  ..., 0.9333, 0.9373, 0.9373],
         [0.0510, 0.2784, 0.2471,  ..., 0.9333, 0.9333, 0.9373],
         [0.0039, 0.2314, 0.2667,  ..., 0.9333, 0.9333, 0.9333],
         ...,
         [0.5255, 0.5294, 0.5294,  ..., 0.3490, 0.3412, 0.3373],
         [0.5373, 0.5255, 0.5176,  ..., 0.3333, 0.3451, 0.3451],
         [0.5176, 0.5176, 0.5176,  ..., 0.3373, 0.3529, 0.3490]],

        [[0.1451, 0.2392, 0.1529,  ..., 0.9529, 0.9490, 0.9490],
         [0.0627, 0.2196, 0.2039,  ..., 0.9529, 0.9529, 0.9490],
         [0.0275, 0.1569, 0.2431,  ..., 0.9529, 0.9529, 0.9529],
         ...,
         [0.3961, 0.4000, 0.4000,  ..., 0.3294, 0.3294, 0.3255],
         [0.4039, 0.3922, 0.3843,  ..., 0.3176, 0.3294, 0.3333],
         [0.3843, 0.3843, 0.3843,  ..., 0.3333, 0.3373, 0.3333]],

        [[0.0863, 0.1255, 0.1137,  ..., 0.9765, 0.9765, 0.9765],
         [0.0275, 0.1294, 0.1176,  ..., 0.9765, 0.9765, 0.9765],
         [0.0118, 0.1020, 0.1098,  ..., 0.9765, 0.9765, 0.9765],
         ...,
         [0.2275, 0.2314, 0.2392,  ..., 0.3176, 0.3098, 0.2980],
         [0.2549, 0.2431, 0.2353,  ..., 0.3137, 0.3176, 0.3137],
         [0.2353, 0.2353, 0.2392,  ..., 0.3255, 0.3333, 0.3216]]],
       device='cuda:0'), tensor([[[0.8392, 0.8392, 0.8392,  ..., 0.0431, 0.0392, 0.0353],
         [0.8392, 0.8392, 0.8392,  ..., 0.0431, 0.0392, 0.0392],
         [0.8392, 0.8392, 0.8392,  ..., 0.0392, 0.0431, 0.0431],
         ...,
         [0.4510, 0.4549, 0.4588,  ..., 0.2235, 0.2196, 0.2157],
         [0.4353, 0.4471, 0.4627,  ..., 0.2235, 0.2196, 0.2157],
         [0.4157, 0.4353, 0.4588,  ..., 0.2196, 0.2157, 0.2157]],

        [[0.7569, 0.7569, 0.7569,  ..., 0.0392, 0.0353, 0.0314],
         [0.7569, 0.7569, 0.7569,  ..., 0.0392, 0.0353, 0.0353],
         [0.7569, 0.7569, 0.7569,  ..., 0.0353, 0.0392, 0.0392],
         ...,
         [0.1608, 0.1647, 0.1686,  ..., 0.0706, 0.0667, 0.0627],
         [0.1451, 0.1569, 0.1725,  ..., 0.0706, 0.0667, 0.0627],
         [0.1255, 0.1451, 0.1686,  ..., 0.0667, 0.0627, 0.0627]],

        [[0.6902, 0.6902, 0.6902,  ..., 0.0314, 0.0275, 0.0235],
         [0.6902, 0.6902, 0.6902,  ..., 0.0314, 0.0275, 0.0275],
         [0.6902, 0.6902, 0.6902,  ..., 0.0275, 0.0314, 0.0314],
         ...,
         [0.0235, 0.0275, 0.0314,  ..., 0.0039, 0.0000, 0.0000],
         [0.0078, 0.0196, 0.0353,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0078, 0.0314,  ..., 0.0000, 0.0000, 0.0000]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[ 67., 199., 187., 235.]], device='cuda:0'), 'labels': tensor([51], device='cuda:0'), 'image_id': tensor([26251], device='cuda:0'), 'area': tensor([4320.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[108.,  88., 395., 317.]], device='cuda:0'), 'labels': tensor([4], device='cuda:0'), 'image_id': tensor([5818], device='cuda:0'), 'area': tensor([65723.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(0.2271, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.1046, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.0626, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0088, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:0.4031011760234833
[GPU:0] Losses reduced:0.6417111158370972
[GPU:0] Loss value:0.6417111158370972
[GPU:0] Images:[tensor([[[0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         ...,
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.]],

        [[0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         ...,
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.]],

        [[0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         ...,
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.]]], device='cuda:0'), tensor([[[0.5373, 0.5451, 0.5451,  ..., 0.5216, 0.5137, 0.4863],
         [0.5451, 0.5490, 0.5529,  ..., 0.4549, 0.4863, 0.4941],
         [0.5608, 0.5529, 0.5608,  ..., 0.4667, 0.5020, 0.4784],
         ...,
         [0.6235, 0.6275, 0.6196,  ..., 0.1059, 0.0902, 0.1098],
         [0.6314, 0.6353, 0.6235,  ..., 0.1059, 0.0863, 0.1059],
         [0.6392, 0.6471, 0.6353,  ..., 0.1059, 0.0824, 0.0902]],

        [[0.5412, 0.5490, 0.5490,  ..., 0.5333, 0.5373, 0.5020],
         [0.5490, 0.5529, 0.5569,  ..., 0.4706, 0.5098, 0.5176],
         [0.5569, 0.5490, 0.5569,  ..., 0.4902, 0.5255, 0.5020],
         ...,
         [0.6196, 0.6314, 0.6235,  ..., 0.0549, 0.0667, 0.0706],
         [0.6275, 0.6314, 0.6275,  ..., 0.0549, 0.0588, 0.0667],
         [0.6353, 0.6431, 0.6392,  ..., 0.0549, 0.0471, 0.0471]],

        [[0.5098, 0.5176, 0.5176,  ..., 0.4588, 0.4039, 0.4039],
         [0.5294, 0.5294, 0.5333,  ..., 0.3725, 0.3686, 0.3765],
         [0.5373, 0.5294, 0.5373,  ..., 0.3569, 0.3765, 0.3529],
         ...,
         [0.6039, 0.6118, 0.6039,  ..., 0.0196, 0.0196, 0.0314],
         [0.6118, 0.6157, 0.6078,  ..., 0.0196, 0.0196, 0.0314],
         [0.6157, 0.6235, 0.6157,  ..., 0.0196, 0.0118, 0.0235]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[160.,  14., 485., 245.]], device='cuda:0'), 'labels': tensor([9], device='cuda:0'), 'image_id': tensor([13630], device='cuda:0'), 'area': tensor([75075.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[  2.,   0., 360., 496.]], device='cuda:0'), 'labels': tensor([75], device='cuda:0'), 'image_id': tensor([17105], device='cuda:0'), 'area': tensor([177568.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(0.1922, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0569, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.0843, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0692, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:0.4025619328022003
[GPU:0] Losses reduced:0.4756322503089905
[GPU:0] Loss value:0.4756322503089905
[GPU:0] Images:[tensor([[[0.0196, 0.0196, 0.0196,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0275, 0.0275,  ..., 0.0000, 0.0000, 0.0000],
         [0.0235, 0.0235, 0.0235,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.1176, 0.1059, 0.1020,  ..., 0.1020, 0.1137, 0.1059],
         [0.1216, 0.1059, 0.1059,  ..., 0.1059, 0.1176, 0.1059],
         [0.1412, 0.1176, 0.1216,  ..., 0.1020, 0.1098, 0.0980]],

        [[0.0275, 0.0275, 0.0275,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0196, 0.0196,  ..., 0.0000, 0.0000, 0.0000],
         [0.0235, 0.0235, 0.0235,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.1176, 0.1059, 0.1059,  ..., 0.0980, 0.1020, 0.0941],
         [0.1333, 0.1176, 0.1137,  ..., 0.1020, 0.1059, 0.0941],
         [0.1412, 0.1255, 0.1294,  ..., 0.0980, 0.0941, 0.0824]],

        [[0.0078, 0.0078, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0235, 0.0235, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         [0.0235, 0.0235, 0.0235,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.1176, 0.1059, 0.1137,  ..., 0.0784, 0.0824, 0.0667],
         [0.1059, 0.0902, 0.0941,  ..., 0.0824, 0.0863, 0.0745],
         [0.1333, 0.1216, 0.1255,  ..., 0.0824, 0.0824, 0.0706]]],
       device='cuda:0'), tensor([[[0.3569, 0.3451, 0.3647,  ..., 0.3451, 0.3569, 0.3608],
         [0.3529, 0.3569, 0.3569,  ..., 0.3490, 0.3490, 0.3569],
         [0.3608, 0.3569, 0.3451,  ..., 0.3451, 0.3490, 0.3490],
         ...,
         [0.1765, 0.1294, 0.1725,  ..., 0.1294, 0.1098, 0.1333],
         [0.1569, 0.1216, 0.1412,  ..., 0.1333, 0.1843, 0.1412],
         [0.1333, 0.1804, 0.1647,  ..., 0.1255, 0.1451, 0.1765]],

        [[0.5176, 0.5176, 0.5098,  ..., 0.4941, 0.4941, 0.4980],
         [0.5059, 0.5176, 0.5176,  ..., 0.4980, 0.4980, 0.4941],
         [0.5137, 0.5176, 0.5216,  ..., 0.4980, 0.4980, 0.4980],
         ...,
         [0.2549, 0.2275, 0.2549,  ..., 0.2471, 0.2196, 0.2353],
         [0.2784, 0.2196, 0.2235,  ..., 0.2588, 0.2784, 0.2157],
         [0.2706, 0.3137, 0.2706,  ..., 0.2314, 0.2471, 0.2706]],

        [[0.7686, 0.7725, 0.7765,  ..., 0.7490, 0.7529, 0.7569],
         [0.7608, 0.7765, 0.7765,  ..., 0.7529, 0.7529, 0.7529],
         [0.7843, 0.7765, 0.7765,  ..., 0.7529, 0.7529, 0.7529],
         ...,
         [0.3529, 0.3451, 0.3686,  ..., 0.3412, 0.3137, 0.3333],
         [0.3608, 0.3412, 0.3451,  ..., 0.3490, 0.3804, 0.3333],
         [0.3490, 0.4235, 0.3843,  ..., 0.3373, 0.3529, 0.3804]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[419., 139., 447., 374.],
        [282., 184., 342., 374.]], device='cuda:0'), 'labels': tensor([78, 78], device='cuda:0'), 'image_id': tensor([10660], device='cuda:0'), 'area': tensor([ 6580., 11400.], device='cuda:0'), 'iscrowd': tensor([0, 0], device='cuda:0')}, {'boxes': tensor([[  2.,   6., 275., 345.]], device='cuda:0'), 'labels': tensor([69], device='cuda:0'), 'image_id': tensor([251], device='cuda:0'), 'area': tensor([92547.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(4.4224, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(0.0523, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.3271, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.1618, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:4.963538646697998
[GPU:0] Losses reduced:4.807239055633545
[GPU:0] Loss value:4.807239055633545
[GPU:0] Images:[tensor([[[1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
         [1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
         [1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
         ...,
         [0.9843, 0.9843, 0.9882,  ..., 1.0000, 1.0000, 1.0000],
         [0.9922, 0.9882, 0.9843,  ..., 1.0000, 1.0000, 1.0000],
         [0.9961, 0.9922, 0.9843,  ..., 1.0000, 1.0000, 1.0000]],

        [[1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
         [1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
         [1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
         ...,
         [0.9843, 0.9843, 0.9882,  ..., 1.0000, 1.0000, 1.0000],
         [0.9922, 0.9882, 0.9843,  ..., 1.0000, 1.0000, 1.0000],
         [0.9961, 0.9922, 0.9843,  ..., 1.0000, 1.0000, 1.0000]],

        [[1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
         [1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
         [1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
         ...,
         [0.9843, 0.9843, 0.9882,  ..., 1.0000, 1.0000, 1.0000],
         [0.9922, 0.9882, 0.9843,  ..., 1.0000, 1.0000, 1.0000],
         [0.9961, 0.9922, 0.9843,  ..., 1.0000, 1.0000, 1.0000]]],
       device='cuda:0'), tensor([[[0.7725, 0.7922, 0.7961,  ..., 0.5608, 0.5529, 0.5608],
         [0.7176, 0.6863, 0.6588,  ..., 0.5647, 0.5647, 0.5686],
         [0.5451, 0.5333, 0.4784,  ..., 0.5647, 0.5686, 0.5608],
         ...,
         [0.5569, 0.5216, 0.5098,  ..., 0.5059, 0.5333, 0.4980],
         [0.4784, 0.5490, 0.5529,  ..., 0.4824, 0.4784, 0.4745],
         [0.4941, 0.5216, 0.4824,  ..., 0.4471, 0.4745, 0.5529]],

        [[0.5804, 0.5922, 0.5765,  ..., 0.5569, 0.5490, 0.5569],
         [0.5529, 0.5176, 0.4706,  ..., 0.5608, 0.5608, 0.5647],
         [0.3843, 0.3569, 0.2902,  ..., 0.5608, 0.5647, 0.5569],
         ...,
         [0.5804, 0.5451, 0.5333,  ..., 0.5412, 0.5569, 0.5255],
         [0.5020, 0.5725, 0.5765,  ..., 0.5137, 0.4941, 0.4941],
         [0.5098, 0.5373, 0.4980,  ..., 0.4667, 0.4902, 0.5647]],

        [[0.0667, 0.0902, 0.0941,  ..., 0.5490, 0.5412, 0.5490],
         [0.0784, 0.0784, 0.0353,  ..., 0.5529, 0.5529, 0.5569],
         [0.0745, 0.1020, 0.0000,  ..., 0.5529, 0.5569, 0.5490],
         ...,
         [0.5725, 0.5373, 0.5255,  ..., 0.5608, 0.6039, 0.5569],
         [0.5020, 0.5647, 0.5686,  ..., 0.5255, 0.5412, 0.5176],
         [0.5137, 0.5412, 0.4941,  ..., 0.4824, 0.5333, 0.5922]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[  8.,   1., 112.,  97.]], device='cuda:0'), 'labels': tensor([52], device='cuda:0'), 'image_id': tensor([532], device='cuda:0'), 'area': tensor([9984.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[108., 111., 194., 175.],
        [103.,  48., 253., 481.],
        [347., 148., 375., 288.]], device='cuda:0'), 'labels': tensor([38,  3,  3], device='cuda:0'), 'image_id': tensor([23723], device='cuda:0'), 'area': tensor([ 5504., 64950.,  3920.], device='cuda:0'), 'iscrowd': tensor([0, 0, 0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(14260.3389, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(162.5935, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(0.1311, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0346, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:14423.09765625
[GPU:0] Losses reduced:11360.7509765625
[GPU:0] Loss value:11360.7509765625
[GPU:0] Images:[tensor([[[0.1490, 0.1255, 0.1137,  ..., 0.4471, 0.4667, 0.4706],
         [0.1412, 0.1333, 0.1412,  ..., 0.4549, 0.4667, 0.4706],
         [0.1294, 0.1137, 0.1333,  ..., 0.4471, 0.4588, 0.4588],
         ...,
         [0.7059, 0.6941, 0.6980,  ..., 0.0275, 0.0431, 0.0196],
         [0.7059, 0.6980, 0.6980,  ..., 0.0353, 0.0235, 0.0275],
         [0.7020, 0.6941, 0.6980,  ..., 0.0549, 0.0235, 0.0235]],

        [[0.1294, 0.1059, 0.0941,  ..., 0.3490, 0.3725, 0.3765],
         [0.1294, 0.1216, 0.1216,  ..., 0.3569, 0.3686, 0.3765],
         [0.1176, 0.1020, 0.1137,  ..., 0.3529, 0.3686, 0.3686],
         ...,
         [0.8353, 0.8235, 0.8275,  ..., 0.0275, 0.0431, 0.0196],
         [0.8353, 0.8275, 0.8275,  ..., 0.0353, 0.0235, 0.0275],
         [0.8314, 0.8235, 0.8275,  ..., 0.0549, 0.0235, 0.0235]],

        [[0.1176, 0.0941, 0.0824,  ..., 0.2314, 0.2392, 0.2353],
         [0.1098, 0.1020, 0.1059,  ..., 0.2392, 0.2471, 0.2431],
         [0.0902, 0.0745, 0.0902,  ..., 0.2431, 0.2431, 0.2431],
         ...,
         [0.9961, 0.9843, 0.9961,  ..., 0.0275, 0.0431, 0.0196],
         [0.9961, 0.9882, 0.9961,  ..., 0.0353, 0.0235, 0.0275],
         [1.0000, 0.9922, 0.9961,  ..., 0.0549, 0.0235, 0.0235]]],
       device='cuda:0'), tensor([[[0.2157, 0.2157, 0.2196,  ..., 0.2196, 0.2157, 0.2157],
         [0.2157, 0.2157, 0.2157,  ..., 0.2118, 0.2118, 0.2118],
         [0.2196, 0.2196, 0.2196,  ..., 0.2118, 0.2118, 0.2118],
         ...,
         [0.3882, 0.3765, 0.3647,  ..., 0.2784, 0.2471, 0.2510],
         [0.3490, 0.3490, 0.3490,  ..., 0.2784, 0.2588, 0.2588],
         [0.3569, 0.3569, 0.3647,  ..., 0.2510, 0.2784, 0.3451]],

        [[0.2078, 0.2078, 0.2118,  ..., 0.2118, 0.2078, 0.2078],
         [0.2078, 0.2078, 0.2078,  ..., 0.2039, 0.2039, 0.2039],
         [0.2118, 0.2118, 0.2118,  ..., 0.2039, 0.2039, 0.2039],
         ...,
         [0.3412, 0.3294, 0.3176,  ..., 0.2157, 0.1843, 0.1882],
         [0.3020, 0.3020, 0.3020,  ..., 0.2157, 0.1961, 0.1961],
         [0.3098, 0.3098, 0.3176,  ..., 0.1882, 0.2157, 0.2824]],

        [[0.2196, 0.2196, 0.2235,  ..., 0.2314, 0.2275, 0.2275],
         [0.2196, 0.2196, 0.2196,  ..., 0.2235, 0.2235, 0.2235],
         [0.2235, 0.2235, 0.2235,  ..., 0.2235, 0.2235, 0.2235],
         ...,
         [0.2941, 0.2824, 0.2706,  ..., 0.1647, 0.1333, 0.1373],
         [0.2549, 0.2549, 0.2549,  ..., 0.1647, 0.1451, 0.1451],
         [0.2627, 0.2627, 0.2706,  ..., 0.1373, 0.1647, 0.2314]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[275., 149., 498., 360.]], device='cuda:0'), 'labels': tensor([4], device='cuda:0'), 'image_id': tensor([11295], device='cuda:0'), 'area': tensor([47053.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[ 42., 317., 298., 416.]], device='cuda:0'), 'labels': tensor([69], device='cuda:0'), 'image_id': tensor([24029], device='cuda:0'), 'area': tensor([25344.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(5722552., device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(260169.5938, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(1.8214, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(0.0915, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:5982723.5
[GPU:0] Losses reduced:12019711.0
[GPU:0] Loss value:12019711.0
[GPU:0] Images:[tensor([[[0.4353, 0.3412, 0.3529,  ..., 0.1608, 0.1137, 0.0353],
         [0.4588, 0.3569, 0.3373,  ..., 0.1882, 0.1333, 0.0824],
         [0.3529, 0.3020, 0.3098,  ..., 0.2392, 0.1686, 0.1255],
         ...,
         [0.0784, 0.0745, 0.0745,  ..., 0.0157, 0.0157, 0.0196],
         [0.0784, 0.0706, 0.0706,  ..., 0.0157, 0.0157, 0.0196],
         [0.0902, 0.0824, 0.0824,  ..., 0.0196, 0.0196, 0.0196]],

        [[0.4078, 0.3098, 0.3216,  ..., 0.1490, 0.1098, 0.0392],
         [0.4314, 0.3255, 0.3059,  ..., 0.1765, 0.1294, 0.0863],
         [0.3216, 0.2706, 0.2667,  ..., 0.2275, 0.1647, 0.1216],
         ...,
         [0.0667, 0.0627, 0.0627,  ..., 0.0118, 0.0118, 0.0157],
         [0.0667, 0.0588, 0.0588,  ..., 0.0118, 0.0118, 0.0157],
         [0.0784, 0.0706, 0.0706,  ..., 0.0157, 0.0157, 0.0157]],

        [[0.3333, 0.2353, 0.2471,  ..., 0.1216, 0.0902, 0.0157],
         [0.3569, 0.2510, 0.2314,  ..., 0.1569, 0.1098, 0.0627],
         [0.2471, 0.1961, 0.1961,  ..., 0.2078, 0.1451, 0.1020],
         ...,
         [0.0471, 0.0431, 0.0431,  ..., 0.0039, 0.0039, 0.0078],
         [0.0471, 0.0392, 0.0392,  ..., 0.0039, 0.0039, 0.0078],
         [0.0588, 0.0510, 0.0510,  ..., 0.0078, 0.0078, 0.0078]]],
       device='cuda:0'), tensor([[[0.3020, 0.3137, 0.3216,  ..., 0.1765, 0.1765, 0.1725],
         [0.2980, 0.2980, 0.3020,  ..., 0.1843, 0.1922, 0.1922],
         [0.3137, 0.3059, 0.3059,  ..., 0.1961, 0.1922, 0.1882],
         ...,
         [0.1843, 0.1843, 0.1882,  ..., 0.1294, 0.1098, 0.1137],
         [0.1569, 0.1569, 0.1608,  ..., 0.1098, 0.1020, 0.1216],
         [0.1725, 0.1686, 0.1725,  ..., 0.1059, 0.1137, 0.1333]],

        [[0.2941, 0.2980, 0.3059,  ..., 0.1843, 0.1843, 0.1804],
         [0.2941, 0.2941, 0.2980,  ..., 0.1922, 0.1961, 0.1922],
         [0.3176, 0.3098, 0.3098,  ..., 0.1961, 0.1922, 0.1882],
         ...,
         [0.1451, 0.1529, 0.1569,  ..., 0.0784, 0.0667, 0.0588],
         [0.1608, 0.1608, 0.1647,  ..., 0.0667, 0.0588, 0.0627],
         [0.1569, 0.1529, 0.1569,  ..., 0.0706, 0.0706, 0.0745]],

        [[0.2980, 0.3020, 0.3098,  ..., 0.1804, 0.1725, 0.1608],
         [0.2745, 0.2745, 0.2784,  ..., 0.1804, 0.1765, 0.1922],
         [0.2980, 0.2902, 0.2902,  ..., 0.2039, 0.2000, 0.1804],
         ...,
         [0.1412, 0.1451, 0.1490,  ..., 0.0549, 0.0431, 0.0471],
         [0.1294, 0.1294, 0.1333,  ..., 0.0431, 0.0353, 0.0431],
         [0.1216, 0.1176, 0.1216,  ..., 0.0510, 0.0471, 0.0471]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[  2.,   0., 499., 334.]], device='cuda:0'), 'labels': tensor([67], device='cuda:0'), 'image_id': tensor([12713], device='cuda:0'), 'area': tensor([165998.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[122.,  53., 500., 374.]], device='cuda:0'), 'labels': tensor([4], device='cuda:0'), 'image_id': tensor([12733], device='cuda:0'), 'area': tensor([121338.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(4.3991e+22, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(5.0405e+20, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(2573.9722, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(2898.1655, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:4.449464558409652e+22
[GPU:0] Losses reduced:4.557383415560405e+22
[GPU:0] Loss value:4.557383415560405e+22
[GPU:0] Images:[tensor([[[1.0000, 1.0000, 1.0000,  ..., 0.6902, 0.6980, 0.7098],
         [1.0000, 1.0000, 1.0000,  ..., 0.6431, 0.6980, 0.6549],
         [1.0000, 1.0000, 1.0000,  ..., 0.6549, 0.6706, 0.6549],
         ...,
         [0.3569, 0.5333, 0.4863,  ..., 0.6627, 0.6863, 0.6941],
         [0.3176, 0.3137, 0.3098,  ..., 0.6863, 0.7059, 0.7098],
         [0.3373, 0.2863, 0.3176,  ..., 0.7137, 0.7216, 0.6980]],

        [[1.0000, 1.0000, 1.0000,  ..., 0.5059, 0.5059, 0.5176],
         [1.0000, 1.0000, 1.0000,  ..., 0.5059, 0.5647, 0.5216],
         [1.0000, 1.0000, 1.0000,  ..., 0.5255, 0.5490, 0.5373],
         ...,
         [0.3882, 0.5490, 0.4824,  ..., 0.4549, 0.4627, 0.4706],
         [0.3647, 0.3569, 0.3373,  ..., 0.4784, 0.4824, 0.4745],
         [0.4118, 0.3608, 0.3647,  ..., 0.4980, 0.4863, 0.4588]],

        [[1.0000, 1.0000, 1.0000,  ..., 0.3333, 0.3373, 0.3490],
         [1.0000, 1.0000, 1.0000,  ..., 0.2784, 0.3255, 0.2745],
         [1.0000, 1.0000, 1.0000,  ..., 0.3137, 0.3255, 0.2941],
         ...,
         [0.3961, 0.5608, 0.4627,  ..., 0.3294, 0.3490, 0.3569],
         [0.3569, 0.3647, 0.3098,  ..., 0.3569, 0.3686, 0.3647],
         [0.3961, 0.3765, 0.3490,  ..., 0.3765, 0.3765, 0.3490]]],
       device='cuda:0'), tensor([[[0.3882, 0.4588, 0.5765,  ..., 0.4078, 0.3765, 0.4275],
         [0.6157, 0.6118, 0.6196,  ..., 0.3843, 0.3765, 0.3059],
         [0.6353, 0.6392, 0.4863,  ..., 0.1922, 0.2039, 0.1176],
         ...,
         [0.5922, 0.4431, 0.3059,  ..., 0.1922, 0.4510, 0.0039],
         [0.3647, 0.3647, 0.3294,  ..., 0.2941, 0.3922, 0.0980],
         [0.1686, 0.2706, 0.3137,  ..., 0.4078, 0.2235, 0.1647]],

        [[0.4196, 0.4902, 0.6078,  ..., 0.4980, 0.4706, 0.5294],
         [0.6824, 0.6745, 0.6824,  ..., 0.4745, 0.4706, 0.4078],
         [0.7176, 0.7216, 0.5647,  ..., 0.2824, 0.2980, 0.2196],
         ...,
         [0.6627, 0.5255, 0.3961,  ..., 0.2824, 0.5373, 0.0902],
         [0.4235, 0.4392, 0.4196,  ..., 0.3843, 0.4784, 0.1843],
         [0.2235, 0.3373, 0.3922,  ..., 0.4980, 0.3098, 0.2510]],

        [[0.1843, 0.2588, 0.3843,  ..., 0.3176, 0.2275, 0.2392],
         [0.2824, 0.2863, 0.2980,  ..., 0.2941, 0.2275, 0.1216],
         [0.2196, 0.2235, 0.0745,  ..., 0.1098, 0.0706, 0.0000],
         ...,
         [0.4275, 0.2157, 0.0431,  ..., 0.0784, 0.3529, 0.0000],
         [0.1922, 0.1294, 0.0667,  ..., 0.1804, 0.2941, 0.0039],
         [0.0000, 0.0314, 0.0431,  ..., 0.2941, 0.1255, 0.0706]]],
       device='cuda:0')]
[GPU:0] Targets:[{'boxes': tensor([[  0., 112., 323., 374.]], device='cuda:0'), 'labels': tensor([4], device='cuda:0'), 'image_id': tensor([5602], device='cuda:0'), 'area': tensor([84626.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}, {'boxes': tensor([[ 89.,  86., 406., 383.]], device='cuda:0'), 'labels': tensor([4], device='cuda:0'), 'image_id': tensor([24609], device='cuda:0'), 'area': tensor([94149.], device='cuda:0'), 'iscrowd': tensor([0], device='cuda:0')}]
[GPU:0] Loss dict:{'loss_classifier': tensor(nan, device='cuda:0', grad_fn=<NllLossBackward0>), 'loss_box_reg': tensor(nan, device='cuda:0', grad_fn=<DivBackward0>), 'loss_objectness': tensor(nan, device='cuda:0', grad_fn=<BinaryCrossEntropyWithLogitsBackward0>), 'loss_rpn_box_reg': tensor(4.5957e+19, device='cuda:0', grad_fn=<DivBackward0>)}
[GPU:0] Sum of losses:nan
[GPU:0] Losses reduced:nan
[GPU:0] Loss value:nan
[GPU:0] Loss is nan, stopping training
{'loss_box_reg': tensor(nan, device='cuda:0'), 'loss_classifier': tensor(nan, device='cuda:0'), 'loss_objectness': tensor(nan, device='cuda:0'), 'loss_rpn_box_reg': tensor(1.5284e+20, device='cuda:0')}
